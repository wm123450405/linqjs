{
    "historys": [
        {
            "since": "2.1.15",
            "overloads": [
                {
                    "lazy": true,
                    "parameters": [
                        {
                            "name": "other",
                            "types": [
                                "IEnumerable",
                                "Iterator",
                                "array",
                                "object",
                                "string"
                            ],
                            "descriptions": [
                                "构成并集的第二个序列"
                            ]
                        },
                        {
                            "name": "comparer",
                            "types": [
                                "function",
                                "string"
                            ],
                            "descriptions": [
                                "用于判定两个序列元素的值是否相等的相等比较器"
                            ],
                            "defaultValue": "defaultEqualityComparer",
                            "declare": {
                                "parameters": [
                                    {
                                        "name": "element",
                                        "types": [
                                            "any"
                                        ]},
                                    {
                                        "name": "other",
                                        "types": [
                                            "any"
                                        ]
                                    }
                                ],
                                "returns": {
                                    "type": "boolean"
                                }
                            }
                        }
                    ],
                    "returns": {
                        "type": "IEnumerable",
                        "descriptions": [
                            "包含这两个序列的元素的并集的序列"
                        ]
                    },
                    "description": "生成两个序列的并集",
                    "remarks": [
                        "此方法通过延迟执行的方式实现"
                    ],
                    "sees": [
                        {
                            "apis": "IEnumerable",
                            "method": "union"
                        },
                        {
                            "apis": "IEnumerable",
                            "method": "intersect"
                        },
                        {
                            "apis": "Enumerable.comparers",
                            "property": "equality"
                        },
                        {
                            "href": "https://msdn.microsoft.com/{language}/library/bb358407(v=vs.110).aspx",
                            "title": "Microsoft MSDN"
                        }
                    ],
                    "examples": [
                        {
                            "description": "下面的代码示例演示如何使用 union 以获取两个整数的序列的并集。",
                            "script": {
                                "type": "javascript",
                                "href": "1.js"
                            }
                        },
                        {
                            "description": "下面的示例演示如何实现在 union 方法中可用的相等比较器，并使用此比较器获取两个序列的并集。",
                            "script": {
                                "type": "javascript",
                                "href": "2.js"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "since": "2.1.19",
            "ref": true,
            "overloads": [
                {
                    "parameters": [
                        { },
                        {
                            "types": [
                                "function",
                                "string",
                                "symbol",
                                "number"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}