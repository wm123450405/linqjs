{
    "historys": [
        {
            "since": "2.1.15",
            "overloads": [
                {
                    "lazy": true,
                    "parameters": [
                        {
                            "name": "predicate",
                            "types": [
                                "function",
                                "string"
                            ],
                            "descriptions": [
                                "用于检测每个元素是否满足条件的函数"
                            ],
                            "declare": {
                                "returns": {
                                    "type": "boolean"
                                },
                                "parameters": [
                                    {
                                        "name": "element",
                                        "types": [
                                            "any"
                                        ]
                                    },
                                    {
                                        "name": "index",
                                        "types": [
                                            "number"
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "returns": {
                        "type": "IEnumerable",
                        "descriptions": [
                            "包含输入序列中出现检测不能够通过在元素之前的所有元素组成的新序列"
                        ]
                    },
                    "description": "返回序列中从起始位置开始指定的条件为 true 的连续元素",
                    "remarks": [
                        "此方法通过延迟执行的方式实现",
                        "如果源序列中第一个元素执行 predicate 检测时返回 false, 则返回空序列"
                    ],
                    "sees": [
                        {
                            "apis": "IEnumerable",
                            "method": "skipWhile"
                        },
                        {
                            "apis": "IEnumerable",
                            "method": "take"
                        },
                        {
                            "guide": "predicate"
                        },
                        {
                            "href": "https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx",
                            "title": "Microsoft MSDN"
                        }
                    ],
                    "examples": [
                        {
                            "description": "下面的代码示例演示如何使用 takeWhile 从序列的开头返回通过条件测试的元素。",
                            "script": {
                                "type": "javascript",
                                "href": "1.js"
                            }
                        },
                        {
                            "description": "下面的代码示例演示如何使用 takeWhile 从序列的开头返回元素，只要使用该元素与其索引某个条件为真。",
                            "script": {
                                "type": "javascript",
                                "href": "2.js"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "since": "2.1.17",
            "ref": true,
            "overloads": [
                {
                    "parameters": [
                        {
                            "types": [
                                "function",
                                "string",
                                "array",
                                "object"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "since": "2.1.19",
            "ref": true,
            "overloads": [
                {
                    "parameters": [
                        {
                            "types": [
                                "function",
                                "string",
                                "symbol",
                                "number",
                                "array",
                                "object"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}