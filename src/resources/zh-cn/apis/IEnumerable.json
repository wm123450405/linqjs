{
	"type": "interface",
	"since": "2.1.15",
	"extends": [
		"array"
	],
	"implements": [],
	"name": "IEnumerable",
	"properties": [
		{
			"name": "length",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"override": true,
					"description": "所包含的元素个数",
					"readonly": true
				}
			]
		},
		{
			"name": "size",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"description": "所包含的元素个数",
					"readonly": true
				}
			]
		}
	],
	"methods": [
		{
			"name": "aggregate",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.",
							"parameters": [
								{
									"name": "seed"
								},
								{
									"name": "func"
								},
								{
									"name": "resultSelector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.",
							"parameters": [
								{
									"name": "seed"
								},
								{
									"name": "func"
								},
								{
									"name": "resultSelector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "all",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "确定是否对序列中的所有元素都满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "确定是否对序列中的所有元素都满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定是否对序列中的所有元素都满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "any",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "确定序列中是否存在满足条件的元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "确定序列中是否存在满足条件的元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定序列中是否存在满足条件的元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "asEnumerable",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "获取一个 IEnumerable 对象",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "average",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "chunk",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": 0,
					"overloads": [
						{
							"description": "对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合",
							"parameters": [
								{
									"name": "chunk"
								},
								{
									"name": "offset"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "combination",
			"historys": [
				{
					"since": "2.1.23",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从源序列中的抽取指定个数的元素不管顺序组成一个组合项, 并由所有不同的组合项组成新的序列",
							"parameters": [
								{
									"name": "count"
								},
								{
									"name": "repeatable"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "combine",
			"historys": [
				{
					"since": "2.1.20",
					"deprecated": "2.1.21",
					"overloads": [
						{
							"description": "通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列",
							"parameters": [
								{
									"name": "parentSelector"
								},
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.22",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列",
							"parameters": [
								{
									"name": "parentSelector"
								},
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "concat",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.19",
					"overloads": [
						{
							"override": true,
							"description": "连接两个序列",
							"parameters": [
								{
									"name": "other"
								}
							]
						}
					]
				},
				{
					"since": "2.1.20",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "连接两个序列",
							"parameters": [
								{
									"name": "other"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "conflict",
			"historys": [
				{
					"since": "2.1.24.pre",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中是否存在相同元素",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "contains",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "确定使用指定的相等比较器时, 序列是否包含指定的元素",
							"parameters": [
								{
									"name": "value"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定使用指定的相等比较器时, 序列是否包含指定的元素",
							"parameters": [
								{
									"name": "value"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "copyWithin",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小",
							"parameters": [
								{
									"name": "target"
								},
								{
									"name": "start"
								},
								{
									"name": "end"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "count",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回一个数字来表示多少个元素指定序列中的满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回一个数字来表示多少个元素指定序列中的满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回一个数字来表示多少个元素指定序列中的满足条件",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "defaultIfEmpty",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列",
							"parameters": [
								{
									"name": "defaultValue"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "distinct",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "获取包含源序列中所有非重复元素的新序列",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "获取包含源序列中所有非重复元素的新序列",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "each",
			"historys": [
				{
					"since": "2.1.23",
					"deprecated": 0,
					"overloads": [
						{
							"description": "遍历序列中的每个元素, 为每一个元素执行指定的操作, 然后返回序列本身",
							"parameters": [
								{
									"name": "action"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "elementAt",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中的指定索引处的元素",
							"parameters": [
								{
									"name": "index"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "elementAtOrDefault",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值",
							"parameters": [
								{
									"name": "index"
								},
								{
									"name": "defaultValue"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "every",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "测试数组的所有元素是否都通过了指定函数的测试",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "测试数组的所有元素是否都通过了指定函数的测试",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "except",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "生成两个序列的差集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "生成两个序列的差集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "fill",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "将一个数组的所有元素从开始索引填充到具有静态值的结束索引",
							"parameters": [
								{
									"name": "value"
								},
								{
									"name": "start"
								},
								{
									"name": "end"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "filter",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "find",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的第一个元素的值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的第一个元素的值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "findIndex",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的第一个元素的索引",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的第一个元素的索引",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "findLast",
			"historys": [
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的最后一个元素的值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的最后一个元素的值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "findLastIndex",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的最后一个元素的索引",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "返回数组中满足提供的测试函数的最后一个元素的索引",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "first",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的第一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的第一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足指定条件的第一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "firstOrDefault",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "forEach",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "遍历序列中的每个元素, 使用元素执行指定的操作",
							"parameters": [
								{
									"name": "action"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "getEnumerator",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "获取序列的枚举器",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "groupBy",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "elementSelector"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "elementSelector"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "groupJoin",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.17",
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.18",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "includes",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "用来判断当前数组是否包含某指定的值",
							"parameters": [
								{
									"name": "element"
								},
								{
									"name": "start"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "indexOf",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "返回在数组中可以找到给定元素的第一个索引",
							"parameters": [
								{
									"name": "element"
								},
								{
									"name": "start"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "返回在数组中可以找到给定元素的第一个索引",
							"parameters": [
								{
									"name": "element"
								},
								{
									"name": "start"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "indices",
			"historys": [
				{
					"since": "2.1.23",
					"deprecated": 0,
					"overloads": [
						{
							"description": "使用指定的索引序列从源序列中生成一个新的序列",
							"parameters": [
								{
									"name": "indices"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "innerJoin",
			"historys": [
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "intersect",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "生成两个序列的交集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "生成两个序列的交集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "isSub",
			"historys": [
				{
					"since": "2.1.21",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定一个源序列是否是另一个序列的子集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "isSuper",
			"historys": [
				{
					"since": "2.1.21",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定一个源序列是否是另一个序列的超集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "join",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.17",
					"overloads": [
						{
							"parameters": [
								{
									"name": "split"
								}
							]
						},
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.18",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"parameters": [
								{
									"name": "split"
								}
							]
						},
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"parameters": [
								{
									"name": "split"
								}
							]
						},
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "last",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的最后一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的最后一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足指定条件的最后一个元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "lastIndexOf",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "法返回指定元素在数组中的最后一个的索引",
							"parameters": [
								{
									"name": "element"
								},
								{
									"name": "start"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "法返回指定元素在数组中的最后一个的索引",
							"parameters": [
								{
									"name": "element"
								},
								{
									"name": "start"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "lastOrDefault",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "leftJoin",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "leftPad",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": 0,
					"overloads": [
						{
							"description": "在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",
							"parameters": [
								{
									"name": "length"
								},
								{
									"name": "value"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "map",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "max",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "maxIndex",
			"historys": [
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中所在的索引位置",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "maxOrDefault",
			"historys": [
				{
					"since": "2.1.22",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值，如果序列中不包含任何元素则返回一个默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "min",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "minIndex",
			"historys": [
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中所在的索引位置",
							"parameters": [
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "minOrDefault",
			"historys": [
				{
					"since": "2.1.22",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值，如果序列中不包含任何元素则返回一个默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "selector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "nearBy",
			"historys": [
				{
					"since": "2.1.20",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "elementSelector"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "nearSplit",
			"historys": [
				{
					"since": "2.1.24.pre",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过筛选器筛拆分序列,相邻的符合条件的元素之间将不会拆分成新的空序列",
							"parameters": [
								{
									"name": "splitPredicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ofType",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "根据指定的类型筛选出的新序列",
							"parameters": [
								{
									"name": "type"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据指定的类型筛选出的新序列",
							"parameters": [
								{
									"name": "type"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "orderBy",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "按使用指定的比较器按升序对序列的元素进行排序",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "按使用指定的比较器按升序对序列的元素进行排序",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "orderByDescending",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "按使用指定的比较器按降序对序列的元素进行排序",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "按使用指定的比较器按降序对序列的元素进行排序",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "permutation",
			"historys": [
				{
					"since": "2.1.23",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从源序列中的抽取指定个数的元素组成一个排列项, 并由所有不同的排列项组成新的序列",
							"parameters": [
								{
									"name": "count"
								},
								{
									"name": "repeatable"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "pop",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "从数组中删除最后一个元素, 并返回该元素的值",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "product",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "proportion",
			"historys": [
				{
					"since": "2.1.25",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过筛选器获取符合条件的元素占比",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "push",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "将一个或多个元素添加到数组的末尾, 并返回数组的新长度",
							"parameters": [
								{
									"name": "values"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "rand",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": 0,
					"overloads": [
						{
							"description": "随机获取序列中的指定数量的元素,组成新的序列",
							"parameters": [
								{
									"name": "count"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "random",
			"historys": [
				{
					"since": "2.1.25",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "返回序列中随机的一个元素",
							"parameters": []
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中随机的一个元素",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "randomIndexProbability",
			"historys": [
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据概率(权重)返回序列中随机的一个元素所在序列中的索引位置",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "randomOrDefault",
			"historys": [
				{
					"since": "2.1.25",
					"deprecated": "2.1.24",
					"overloads": [
						{
							"description": "返回序列中随机的一个元素. 如果未找到元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								}
							]
						}
					]
				},
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中随机的一个元素. 如果未找到元素, 则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "randomProbability",
			"historys": [
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据概率(权重)返回序列中随机的一个元素",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "randomProbabilityOrDefault",
			"historys": [
				{
					"since": "2.2.0",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据概率(权重)返回序列中随机的一个元素。 如果未找到元素，则返回默认值",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "reduce",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "initialValue"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "reduceRight",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "initialValue"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "reverse",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "反转序列中元素的顺序",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "rightJoin",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",
							"parameters": [
								{
									"name": "inner"
								},
								{
									"name": "resultSelector"
								},
								{
									"name": "outerKeySelector"
								},
								{
									"name": "innerKeySelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "rightPad",
			"historys": [
				{
					"since": "2.1.18",
					"deprecated": 0,
					"overloads": [
						{
							"description": "在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",
							"parameters": [
								{
									"name": "length"
								},
								{
									"name": "value"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "select",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "将序列中的每个元素投影到新序列",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "将序列中的每个元素投影到新序列",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "selectMany",
			"historys": [
				{
					"since": "2.1.16",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列",
							"parameters": [
								{
									"name": "collectionSelector"
								},
								{
									"name": "resultSelector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列",
							"parameters": [
								{
									"name": "collectionSelector"
								},
								{
									"name": "resultSelector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "separate",
			"historys": [
				{
					"since": "2.1.20",
					"deprecated": 0,
					"overloads": [
						{
							"description": "将一个递归结构的序列的展开为一个一维解构的序列",
							"parameters": [
								{
									"name": "childrenSelector"
								},
								{
									"name": "valueSelector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sequenceEqual",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "确定两个序列通过使用指定的相等比较器比较它们的元素是否相等",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "确定两个序列通过使用指定的相等比较器比较它们的元素是否相等",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "shift",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "从数组中删除第一个元素, 并返回该元素的值",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "single",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "singleOrDefault",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",
							"parameters": [
								{
									"name": "defaultValue"
								},
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "skip",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "跳过指定的数量的序列中的元素，然后返回剩余元素",
							"parameters": [
								{
									"name": "count"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "skipProportion",
			"historys": [
				{
					"since": "2.1.25",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从序列的开头忽略指定的比例的连续元素, 返回剩余元素",
							"parameters": [
								{
									"name": "proportion"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "skipSame",
			"historys": [
				{
					"since": "2.1.24",
					"deprecated": 0,
					"overloads": [
						{
							"description": "跳过序列开头与第一个元素相同的所有元素，然后返回剩余元素",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "skipWhile",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "跳过序列中指定条件为 true 的元素，然后返回剩余元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "跳过序列中指定条件为 true 的元素，然后返回剩余元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "跳过序列中指定条件为 true 的元素，然后返回剩余元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "slice",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象",
							"parameters": [
								{
									"name": "start"
								},
								{
									"name": "end"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "some",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "测试数组中的某些元素是否通过了指定函数的测试",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "测试数组中的某些元素是否通过了指定函数的测试",
							"parameters": [
								{
									"name": "callback"
								},
								{
									"name": "thisArg"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sort",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"override": true,
							"description": "在适当的位置对数组的元素进行排序, 并返回数组",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "在适当的位置对数组的元素进行排序, 并返回数组",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "splice",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "通过删除现有元素和/或添加新元素来更改数组的内容",
							"parameters": [
								{
									"name": "start"
								},
								{
									"name": "count"
								},
								{
									"name": "values"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "split",
			"historys": [
				{
					"since": "2.1.23",
					"deprecated": "2.1.23",
					"overloads": [
						{
							"description": "通过筛选器筛拆分序列",
							"parameters": [
								{
									"name": "splitPredicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.24.pre",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过筛选器筛拆分序列",
							"parameters": [
								{
									"name": "splitPredicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "sum",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值",
							"parameters": [
								{
									"name": "selector"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "symmetric",
			"historys": [
				{
					"since": "2.1.21",
					"deprecated": 0,
					"overloads": [
						{
							"description": "生成两个序列的对称差分",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "take",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从序列的开头返回指定的数量的连续元素",
							"parameters": [
								{
									"name": "count"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "takeProportion",
			"historys": [
				{
					"since": "2.1.25",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从序列的开头返回指定的比例的连续元素",
							"parameters": [
								{
									"name": "proportion"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "takeSame",
			"historys": [
				{
					"since": "2.1.24",
					"deprecated": 0,
					"overloads": [
						{
							"description": "捡取序列开头与第一个元素相同的所有元素，返回被捡取的所有元素，含第一个元素",
							"parameters": [
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "takeWhile",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "返回序列中从起始位置开始指定的条件为 true 的连续元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "返回序列中从起始位置开始指定的条件为 true 的连续元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "返回序列中从起始位置开始指定的条件为 true 的连续元素",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "toArray",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "使用源序列创建一个数组",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "toDirectory",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "toInOrder",
			"historys": [
				{
					"since": "2.1.22",
					"deprecated": 0,
					"overloads": [
						{
							"description": "创建一个完全二叉树,使得此二叉树的中序遍历结果与源序列一致",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "toLookup",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "toObject",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "从 IEnumerable 中获取一个对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "从 IEnumerable 中获取一个对象",
							"parameters": [
								{
									"name": "keySelector"
								},
								{
									"name": "valueSelector"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "toPostOrder",
			"historys": [
				{
					"since": "2.1.22",
					"deprecated": 0,
					"overloads": [
						{
							"description": "创建一个完全二叉树,使得此二叉树的后序遍历结果与源序列一致",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "toPreOrder",
			"historys": [
				{
					"since": "2.1.22",
					"deprecated": 0,
					"overloads": [
						{
							"description": "创建一个完全二叉树,使得此二叉树的前序遍历结果与源序列一致",
							"parameters": []
						}
					]
				}
			]
		},
		{
			"name": "union",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "生成两个序列的并集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "生成两个序列的并集",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "comparer"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "unshift",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"override": true,
							"description": "将一个或多个元素添加到数组的开头, 并返回新数组的长度",
							"parameters": [
								{
									"name": "values"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "where",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": "2.1.16",
					"overloads": [
						{
							"description": "通过筛选器筛选值序列",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.17",
					"deprecated": "2.1.18",
					"overloads": [
						{
							"description": "通过筛选器筛选值序列",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				},
				{
					"since": "2.1.19",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过筛选器筛选值序列",
							"parameters": [
								{
									"name": "predicate"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "wipe",
			"historys": [
				{
					"since": "2.1.20",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过筛选器剔除序列中满足条件的一定数量的元素",
							"parameters": [
								{
									"name": "predicate"
								},
								{
									"name": "count"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "zip",
			"historys": [
				{
					"since": "2.1.15",
					"deprecated": 0,
					"overloads": [
						{
							"description": "通过依次合并元素的方式合并两个序列",
							"parameters": [
								{
									"name": "other"
								},
								{
									"name": "resultSelector"
								}
							]
						}
					]
				}
			]
		}
	]
}