"use strict";(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[691],{11691:(t,e,s)=>{s.r(e),s.d(e,{default:()=>i});const a={data:()=>({caption:{},meta:{},examples:{}}),computed:{name(){return this.$route.params.class}},watch:{name(){this.getJson(`apis/${this.name}`).then((t=>{this.meta=t}))}},mounted(){this.getJson("caption",(()=>`apis/${this.name}`),(()=>`examples/${this.name}`)).then((([t,e,s])=>{this.caption=t,this.meta=e,this.examples=s,this.highlight()}))}};const i=(0,s(51900).Z)(a,(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("content-template",{attrs:{title:(t.meta.name||t.name)+" "+t.capitalize(t.caption[t.meta.type])}},["object"!==t.meta.type?s("p",[s("code",{staticClass:"hljs"},[s("span",{staticClass:"hljs-keyword"},[t._v(t._s(t.meta.type))]),t._v(" "),s("span",{staticClass:"hljs-class"},[s("span",{staticClass:"hljs-title"},[t._v(t._s(t.meta.name))])]),t._v(" "),t.meta.extends&&t.meta.extends.length?[s("span",{staticClass:"hljs-keyword"},[t._v("extends")])]:t._e(),t._v(" "),t._l(t.meta.extends,(function(t){return[s("code-class",{attrs:{type:t}})]})),t._v(" "),t.meta.implements&&t.meta.implements.length?[s("span",{staticClass:"hljs-keyword"},[t._v("implements")])]:t._e(),t._v(" "),t._l(t.meta.implements,(function(t){return[s("code-class",{attrs:{type:t}})]}))],2)]):t._e(),t._v(" "),t._l(t.meta.descriptions,(function(e){return s("p",{staticClass:"text-success",domProps:{innerHTML:t._s(t.capitalize(e))}})})),t._v(" "),t.meta.constructors&&t.hasHistory(t.meta.constructors.historys)?s("div",[s("h3",[t._v(t._s(t.caption.constructors))]),t._v(" "),s("table",{staticClass:"table table-bordered"},[s("thead",[s("tr",[s("th",[t._v(t._s(t.caption.constructor))]),t._v(" "),s("th",[t._v(t._s(t.caption.description))])])]),t._v(" "),s("tbody",[t._l(t.historys(t.meta.constructors.historys),(function(e){return t.isNewer(e.since)&&t.isOlder(e.deprecated)?t._l(e.overloads,(function(a,i){return s("tr",[s("td",[s("mark-to",{attrs:{to:"constructor"+(e.overloads.length>1?"-"+i:"")}},[t._v(t._s(t.meta.name||t.name)+"("),t._l(a.parameters,(function(e,a){return s("span",[0!==a?s("span",[t._v(", ")]):t._e(),t._v(t._s(e.name))])})),t._v(")")],2)],1),t._v(" "),s("td",[t._v("\n                        "+t._s(a.description)+"\n                    ")])])})):t._e()}))],2)])]):t._e(),t._v(" "),t.meta.properties&&t.hasHistorys(t.meta.properties)?s("div",[s("h3",[t._v(t._s(t.caption.properties))]),t._v(" "),t.meta.properties?s("div",[s("table",{staticClass:"table table-bordered"},[s("thead",[s("tr",[s("th",{attrs:{width:"95"}}),t._v(" "),s("th",[t._v(t._s(t.caption.property))]),t._v(" "),s("th",[t._v(t._s(t.caption.defaultValue))]),t._v(" "),s("th",[t._v(t._s(t.caption.description))])])]),t._v(" "),s("tbody",[t._l(t.meta.properties,(function(e){return t._l(t.historys(e.historys),(function(a){return t.isNewer(a.since)&&t.isOlder(a.deprecated)?s("tr",[s("td",[s("i",{staticClass:"fa fa-fw fa-align-left fa-flip-vertical text-success",attrs:{title:t.caption.property}}),t._v(" "),a.static?s("i",{staticClass:"fa fa-fw fa-strikethrough text-danger",attrs:{title:t.caption.static}}):t._e(),t._v(" "),a.override?s("i",{staticClass:"fa fa-fw fa-chevron-circle-up text-primary",attrs:{title:t.caption.override}}):t._e(),t._v(" "),a.readonly?s("i",{staticClass:"fa fa-fw fa-eye text-warning",attrs:{title:t.caption.readonly}}):t._e(),t._v(" "),a.since===t.version||a.since+".pre"===t.version?s("i",{staticClass:"fa fa-fw fa-fire text-danger",attrs:{title:t.caption.new}}):t._e()]),t._v(" "),s("td",[s("lang-link",{attrs:{to:"apis/"+t.name+"/property/"+e.name}},[t._v(t._s(e.name))])],1),t._v(" "),s("td",[t._v(t._s(t._f("json")(a.default,!0)))]),t._v(" "),s("td",[t._v("\n                            "+t._s(a.description)+"\n                        ")])]):t._e()}))}))],2)])]):t._e()]):t._e(),t._v(" "),t.meta.methods&&t.hasHistorys(t.meta.methods)?s("div",[s("h3",[t._v(t._s(t.caption.methods))]),t._v(" "),t.meta.methods?s("div",[s("table",{staticClass:"table table-bordered"},[s("thead",[s("tr",[s("th",{attrs:{width:"95"}}),t._v(" "),s("th",[t._v(t._s(t.caption.method))]),t._v(" "),s("th",[t._v(t._s(t.caption.description))])])]),t._v(" "),s("tbody",[t._l(t.meta.methods,(function(e){return[t._l(t.historys(e.historys),(function(a){return t.isNewer(a.since)&&t.isOlder(a.deprecated)?t._l(a.overloads,(function(i,n){return s("tr",[s("td",[s("i",{staticClass:"fa fa-fw fa-rocket text-success",attrs:{title:t.caption.method}}),t._v(" "),i.static?s("i",{staticClass:"fa fa-fw fa-strikethrough text-danger",attrs:{title:t.caption.static}}):t._e(),t._v(" "),i.override?s("i",{staticClass:"fa fa-fw fa-chevron-circle-up text-primary",attrs:{title:t.caption.override}}):t._e(),t._v(" "),a.since===t.version||a.since+".pre"===t.version?s("i",{staticClass:"fa fa-fw fa-fire text-danger",attrs:{title:t.caption.new}}):t._e()]),t._v(" "),s("td",[s("lang-link",{attrs:{to:"apis/"+t.name+"/method/"+e.name+(a.overloads.length>1?"/"+n:"")}},[t._v(t._s(e.name)+"("),t._l(i.parameters,(function(e,a){return s("span",[0!==a?s("span",[t._v(", ")]):t._e(),t._v(t._s(e.name))])})),t._v(")")],2)],1),t._v(" "),s("td",[t._v("\n                                "+t._s(i.description)+"\n                            ")])])})):t._e()}))]}))],2)])]):t._e()]):t._e(),t._v(" "),t._l(t.meta.remarks,(function(e){return s("p",{staticClass:"text-info",domProps:{innerHTML:t._s(t.capitalize(e))}})})),t._v(" "),t._l(t.meta.warnings,(function(e){return s("p",{staticClass:"text-warning",domProps:{innerHTML:t._s(t.capitalize(e))}})})),t._v(" "),t.meta.constructors&&t.meta.constructors.historys?s("div",t._l(t.historys(t.meta.constructors.historys),(function(e){return t.isNewer(e.since)&&t.isOlder(e.deprecated)?s("div",{staticClass:"activatable"},[s("h3",[t._v(t._s(t.caption.constructors))]),t._v(" "),t._l(e.overloads,(function(a,i){return s("div",{staticClass:"activatable"},[s("h4",[t._v(t._s(i+1)+". "+t._s(t.meta.name)+"("),t._l(a.parameters,(function(e,s){return[0!==s?[t._v(", ")]:t._e(),t._v(t._s(e.name))]})),t._v(")"),s("mark-link",{attrs:{id:"constructor"+(t.meta.constructors.length>1?"-"+i:"")}})],2),t._v(" "),s("div",{staticClass:"indent"},[s("p",[e.since?s("shields",{attrs:{subject:"since",status:e.since,color:"yellow",title:t.caption.since+": "+e.since}}):t._e(),t._v(" "),e.deprecated?s("shields",{attrs:{subject:"since",status:e.deprecated,color:"yellow",title:t.caption.since+": "+e.deprecated}}):t._e(),t._v(" "),a.newInstance?s("shields",{attrs:{subject:"new",status:a.newInstance,color:"yellow",title:t.caption.newInstance[a.newInstance]}}):t._e()],1),t._v(" "),a.description?s("p",{staticClass:"text-success"},[t._v(t._s(t.capitalize(a.description)))]):t._e(),t._v(" "),t._l(a.descriptions,(function(e){return s("p",{staticClass:"text-success",domProps:{innerHTML:t._s(t.capitalize(e))}})})),t._v(" "),s("p",[s("code-method-declare",{attrs:{overload:a,className:t.meta.name}})],1),t._v(" "),t._l(a.examples,(function(e,a){return s("div",{staticClass:"indent"},[s("p",[t._v(t._s(a+1)+". "+t._s(e.description))]),t._v(" "),s("pre",[s("code",{class:e.script.type,domProps:{innerHTML:t._s(e.script.script||t.examples[e.script.href])}})]),t._v(" "),t._l(e.descriptions,(function(e){return s("p",{domProps:{innerHTML:t._s(e)}})}))],2)})),t._v(" "),t._l(a.sees,(function(e){return s("div",[t._v(t._s(t.caption.see)+" "),s("i",{staticClass:"fa fa-fw fa-at"}),t._v(" "),s("see-link",{attrs:{see:e}})],1)}))],2)])}))],2):t._e()})),0):t._e(),t._v(" "),t._l(t.meta.implements,(function(e){return t.isKeyword(e)?t._e():s("div",[t._v(t._s(t.caption.see)+" "),s("i",{staticClass:"fa fa-fw fa-at"}),t._v(" "),s("see-link",{attrs:{see:{apis:e}}})],1)})),t._v(" "),t._l(t.meta.extends,(function(e){return t.isKeyword(e)?t._e():s("div",[t._v(t._s(t.caption.see)+" "),s("i",{staticClass:"fa fa-fw fa-at"}),t._v(" "),s("see-link",{attrs:{see:{apis:e}}})],1)})),t._v(" "),t._l(t.meta.sees,(function(e){return s("div",[t._v(t._s(t.caption.see)+" "),s("i",{staticClass:"fa fa-fw fa-at"}),t._v(" "),s("see-link",{attrs:{see:e}})],1)}))],2)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,