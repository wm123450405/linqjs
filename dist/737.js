"use strict";(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[737],{21238:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _scripts_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(42849),_scripts_common__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_scripts_common__WEBPACK_IMPORTED_MODULE_0__),Enumerable=__webpack_require__(45491);const CodeMirror=__webpack_require__(65953);let codeMirror;__webpack_require__(96876);const history=__webpack_require__(75293),__WEBPACK_DEFAULT_EXPORT__={beforeRouteUpdate(e,t,s){codeMirror&&codeMirror.setValue(""),this.clear(),this.close();let a=/^\/(\w+-\w+)(\/\d+\.\d+\.\d+(\.pre)?)?(.*)?$/i;e={lang:(e=a.exec(e.path))&&e[1]||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().defaultLang,version:e&&e[2]&&e[2].substring(1)||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest,url:e&&e[4]||"/"},t={lang:(t=a.exec(t.path))&&t[1]||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().defaultLang,version:t&&t[2]&&t[2].substring(1)||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest,url:t&&t[4]||"/"},e.url!==t.url?e.lang===t.lang&&e.version===t.version?s():s({path:`/${t.lang}${t.version!==_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest?"/"+t.version:""}${e.url}`,replace:!0}):s(),window.scrollTo(0,0)},data:()=>({active:!1,logList:[],runtime:!1,executing:!1,identity:0,extend:!0,code:"",caption:{}}),mounted(){codeMirror=CodeMirror.fromTextArea(document.getElementById("code"),{mode:"javascript",indentUnit:4,theme:"hybird"}),this.getJson("caption").then((e=>{this.caption=e}))},watch:{extend(){this.tryCode(this.code)}},computed:{extendEnabled(){return _scripts_common__WEBPACK_IMPORTED_MODULE_0___default().isOlder(this.version,"2.1.20")}},methods:{open(e,t){this.active=!0,setTimeout((()=>{codeMirror&&("string"==typeof e&&e?(this.code=e,this.extend?codeMirror.setValue(this.extendEnabled&&/\.asEnumerable\(\)(?!;)/g.test(e)?"Enumerable.config.extends.array = true;\r\n\r\n"+e.replace(/\.asEnumerable\(\)/g,""):e):codeMirror.setValue(e)):codeMirror.getValue()||codeMirror.setValue("console.log(1);"),t&&this.tryIt())}))},close(){this.active=!1},clear(){this.logList=[]},tryCode(e){e&&codeMirror&&(this.clear(),this.open(e,!0))},tryIt(){if(codeMirror){let code=codeMirror.getValue();if(code){this.executing=!0,this.identity++;let identity=this.identity;this.runtime=!0,history(this.version,(Enumerable=>{try{if(this.runtime=!1,identity===this.identity){let log=console.log;console.log=(...e)=>{this.logList.push({type:"log",contents:e}),log(...e)};try{Enumerable.config.as="asEnumerable";let result=eval(code);this.logList.push({type:"result",contents:[result]}),log(result)}catch(e){this.logList.push({type:"error",contents:[e.toString()]}),console.error(e)}finally{console.log=log,Enumerable.config.extends.array=!1}}}finally{this.$nextTick((()=>{let e=$(".result .list");e.scrollTop(e.get(0).scrollHeight),this.executing=!1}))}}),(()=>{delete Object.prototype.asEnumerable,delete Array.prototype.asEnumerable,delete String.prototype.asEnumerable,delete Map.prototype.asEnumerable,delete Set.prototype.asEnumerable,Enumerable.config.extends.array=!1}),(()=>{delete Object.prototype.asEnumerable,delete Array.prototype.asEnumerable,delete String.prototype.asEnumerable,delete Map.prototype.asEnumerable,delete Set.prototype.asEnumerable,Enumerable=__webpack_require__(45491)}))}}}}}},20737:(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});const a=s(21238).Z;const r=(0,s(51900).Z)(a,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"container"},[s("div",{staticClass:"row"},[s("router-view",{staticClass:"navbar navbar-default topbar",attrs:{name:"nav",id:"topbar"}})],1),e._v(" "),s("div",{staticClass:"row"},[s("router-view",{staticClass:"col-sm-4 col-lg-3 sidebar",attrs:{name:"directory",id:"sidebar"}}),e._v(" "),s("router-view",{staticClass:"col-sm-8 col-lg-9",staticStyle:{"padding-bottom":"32em"},attrs:{name:"content",id:"content"}})],1),e._v(" "),s("div",{staticClass:"try",class:{active:e.active}},[s("textarea",{staticClass:"code",attrs:{title:"javascript code",id:"code"}}),e._v(" "),s("div",{staticClass:"result"},[s("div",{staticClass:"btns"},[s("div",{staticClass:"btn btn-default",class:{disabled:e.executing},on:{click:e.tryIt}},[s("i",{staticClass:"fa fa-fw fa-play"}),e._v(e._s(e.caption.run))]),e._v(" "),s("div",{staticClass:"btn btn-default",on:{click:e.clear}},[s("i",{staticClass:"fa fa-fw fa-ban"}),e._v(e._s(e.caption.clear))]),e._v(" "),s("div",{staticClass:"btn btn-default",on:{click:e.close}},[s("i",{staticClass:"fa fa-fw fa-compress fa-flip-vertical"}),e._v(e._s(e.caption.close))]),e._v(" "),s("div",{staticClass:"btn btn-default expand",on:{click:e.open}},[s("i",{staticClass:"fa fa-fw fa-expand fa-flip-vertical"}),e._v(e._s(e.caption.try))]),e._v(" "),s("div",{staticClass:"checkbox",class:{hidden:!e.extendEnabled}},[s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.extend,expression:"extend"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.extend)?e._i(e.extend,null)>-1:e.extend},on:{change:function(t){var s=e.extend,a=t.target,r=!!a.checked;if(Array.isArray(s)){var i=e._i(s,null);a.checked?i<0&&(e.extend=s.concat([null])):i>-1&&(e.extend=s.slice(0,i).concat(s.slice(i+1)))}else e.extend=r}}}),e._v(e._s(e.caption.enableExtend))])]),e._v(" "),e.executing?s("div",[e._v(e._s(e.runtime?e.caption.loadRuntime:e.caption.executing))]):e._e()]),e._v(" "),s("ul",{staticClass:"list"},e._l(e.logList,(function(t){return s("li",{class:t.type},[s("i",{staticClass:"fa fa-fw",class:"result"===t.type?"fa-angle-left":"error"===t.type?"fa-times-circle":""}),e._v(" "),e._l(t.contents,(function(t){return s("pre",{staticStyle:{"padding-right":".5em"}},[e._v(e._s(e._f("json")(t)))])}))],2)})),0)])])])}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxFQUFJakQsUUFBUUosY0FBY3FELEVBQUlrQyxPQUFPbEMsRUFBSU8sR0FBRyxLQUFLSixFQUFHLEtBQUssQ0FBQ0UsWUFBWSxRQUFRTCxFQUFJbUMsR0FBSW5DLEVBQVcsU0FBRSxTQUFTb0MsR0FBTSxPQUFPakMsRUFBRyxLQUFLLENBQUNNLE1BQU0yQixFQUFLM0QsTUFBTSxDQUFDMEIsRUFBRyxJQUFJLENBQUNFLFlBQVksV0FBV0ksTUFBb0IsV0FBZDJCLEVBQUszRCxLQUFvQixnQkFBZ0MsVUFBZDJELEVBQUszRCxLQUFtQixrQkFBb0IsS0FBS3VCLEVBQUlPLEdBQUcsS0FBS1AsRUFBSW1DLEdBQUlDLEVBQWEsVUFBRSxTQUFTL0QsR0FBSyxPQUFPOEIsRUFBRyxNQUFNLENBQUNLLFlBQVksQ0FBQyxnQkFBZ0IsU0FBUyxDQUFDUixFQUFJTyxHQUFHUCxFQUFJWSxHQUFHWixFQUFJcUMsR0FBRyxPQUFQckMsQ0FBZTNCLFdBQVksTUFBSyxXQUN4akYsSURVcEIsRUFDQSxLQUNBLEtBQ0EsTUFJOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3BhZ2VzL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvaW5kZXgudnVlPzkxODAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL2luZGV4LnZ1ZSIsIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvaW5kZXgudnVlPzZlMDgiXSwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxyXG5cdDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cclxuXHRcdDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0PHJvdXRlci12aWV3IG5hbWU9XCJuYXZcIiBjbGFzcz1cIm5hdmJhciBuYXZiYXItZGVmYXVsdCB0b3BiYXJcIiBpZD1cInRvcGJhclwiPjwvcm91dGVyLXZpZXc+XHJcblx0XHQ8L2Rpdj5cclxuXHRcdDxkaXYgY2xhc3M9XCJyb3dcIj5cclxuXHRcdFx0PHJvdXRlci12aWV3IG5hbWU9XCJkaXJlY3RvcnlcIiBjbGFzcz1cImNvbC1zbS00IGNvbC1sZy0zIHNpZGViYXJcIiBpZD1cInNpZGViYXJcIj48L3JvdXRlci12aWV3PlxyXG5cdFx0XHQ8cm91dGVyLXZpZXcgbmFtZT1cImNvbnRlbnRcIiBjbGFzcz1cImNvbC1zbS04IGNvbC1sZy05XCIgc3R5bGU9XCJwYWRkaW5nLWJvdHRvbTogMzJlbTtcIiBpZD1cImNvbnRlbnRcIj48L3JvdXRlci12aWV3PlxyXG5cdFx0PC9kaXY+XHJcblx0XHQ8ZGl2IGNsYXNzPVwidHJ5XCIgOmNsYXNzPVwieyBhY3RpdmU6IGFjdGl2ZSB9XCI+XHJcblx0XHRcdDx0ZXh0YXJlYSB0aXRsZT1cImphdmFzY3JpcHQgY29kZVwiIGlkPVwiY29kZVwiIGNsYXNzPVwiY29kZVwiPjwvdGV4dGFyZWE+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJyZXN1bHRcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYnRuc1wiPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cImJ0biBidG4tZGVmYXVsdFwiIEBjbGljaz1cInRyeUl0XCIgOmNsYXNzPVwieyBkaXNhYmxlZDogZXhlY3V0aW5nIH1cIj48aSBjbGFzcz1cImZhIGZhLWZ3IGZhLXBsYXlcIj48L2k+e3sgY2FwdGlvbi5ydW4gfX08L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIiBAY2xpY2s9XCJjbGVhclwiPjxpIGNsYXNzPVwiZmEgZmEtZncgZmEtYmFuXCI+PC9pPnt7IGNhcHRpb24uY2xlYXIgfX08L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJidG4gYnRuLWRlZmF1bHRcIiBAY2xpY2s9XCJjbG9zZVwiPjxpIGNsYXNzPVwiZmEgZmEtZncgZmEtY29tcHJlc3MgZmEtZmxpcC12ZXJ0aWNhbFwiPjwvaT57eyBjYXB0aW9uLmNsb3NlIH19PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYnRuIGJ0bi1kZWZhdWx0IGV4cGFuZFwiIEBjbGljaz1cIm9wZW5cIj48aSBjbGFzcz1cImZhIGZhLWZ3IGZhLWV4cGFuZCBmYS1mbGlwLXZlcnRpY2FsXCI+PC9pPnt7IGNhcHRpb24udHJ5IH19PC9kaXY+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiY2hlY2tib3hcIiA6Y2xhc3M9XCJ7IGhpZGRlbjogIWV4dGVuZEVuYWJsZWQgfVwiPjxsYWJlbD48aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgdi1tb2RlbD1cImV4dGVuZFwiPnt7IGNhcHRpb24uZW5hYmxlRXh0ZW5kIH19PC9sYWJlbD48L2Rpdj5cclxuXHRcdFx0XHRcdDxkaXYgdi1pZj1cImV4ZWN1dGluZ1wiPnt7IHJ1bnRpbWUgPyBjYXB0aW9uLmxvYWRSdW50aW1lIDogY2FwdGlvbi5leGVjdXRpbmcgfX08L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8dWwgY2xhc3M9XCJsaXN0XCI+XHJcblx0XHRcdFx0XHQ8bGkgdi1mb3I9XCJsb2dzIGluIGxvZ0xpc3RcIiA6Y2xhc3M9XCJsb2dzLnR5cGVcIj48aSBjbGFzcz1cImZhIGZhLWZ3XCIgOmNsYXNzPVwibG9ncy50eXBlID09PSAncmVzdWx0JyA/ICdmYS1hbmdsZS1sZWZ0JyA6IGxvZ3MudHlwZSA9PT0gJ2Vycm9yJyA/ICdmYS10aW1lcy1jaXJjbGUnIDogJydcIj48L2k+IDxwcmUgdi1mb3I9XCJsb2cgaW4gbG9ncy5jb250ZW50c1wiIHN0eWxlPVwicGFkZGluZy1yaWdodDogLjVlbTtcIj57eyBsb2cgfCBqc29uIH19PC9wcmU+PC9saT5cclxuXHRcdFx0XHQ8L3VsPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvZGl2PlxyXG5cdDwvZGl2PlxyXG48L3RlbXBsYXRlPlxyXG48c2NyaXB0PlxyXG4gICAgaW1wb3J0IGNvbW1vbiBmcm9tICcuLy4uL3NjcmlwdHMvY29tbW9uJztcclxuXHJcblx0Y29uc3QgQ29kZU1pcnJvciA9IHJlcXVpcmUoJ2NvZGVtaXJyb3InKTtcclxuXHRyZXF1aXJlKCdjb2RlbWlycm9yL21vZGUvamF2YXNjcmlwdC9qYXZhc2NyaXB0Jyk7XHJcblxyXG5cdGxldCBjb2RlTWlycm9yO1xyXG5cclxuXHRjb25zdCBoaXN0b3J5ID0gcmVxdWlyZSgnLi8uLi9zY3JpcHRzL2hpc3RvcnknKTtcclxuXHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgICAgIGJlZm9yZVJvdXRlVXBkYXRlKHRvLCBmcm9tLCBuZXh0KSB7XHJcbiAgICAgICAgICAgIGNvZGVNaXJyb3IgJiYgY29kZU1pcnJvci5zZXRWYWx1ZSgnJyk7XHJcblx0ICAgICAgICB0aGlzLmNsZWFyKCk7XHJcblx0ICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgICAgIGxldCByZWcgPSAvXlxcLyhcXHcrLVxcdyspKFxcL1xcZCtcXC5cXGQrXFwuXFxkKyhcXC5wcmUpPyk/KC4qKT8kL2k7XHJcbiAgICAgICAgICAgIHRvID0gcmVnLmV4ZWModG8ucGF0aCk7XHJcbiAgICAgICAgICAgIHRvID0ge1xyXG4gICAgICAgICAgICAgICAgbGFuZzogdG8gJiYgdG9bMV0gfHwgY29tbW9uLmRlZmF1bHRMYW5nLFxyXG5cdFx0XHRcdHZlcnNpb246IHRvICYmIHRvWzJdICYmIHRvWzJdLnN1YnN0cmluZygxKSB8fCBjb21tb24ubGFzdGVzdCxcclxuICAgICAgICAgICAgICAgIHVybDogdG8gJiYgdG9bNF0gfHwgJy8nXHJcblx0XHRcdH07XHJcbiAgICAgICAgICAgIGZyb20gPSByZWcuZXhlYyhmcm9tLnBhdGgpO1xyXG4gICAgICAgICAgICBmcm9tID0ge1xyXG4gICAgICAgICAgICAgICAgbGFuZzogZnJvbSAmJiBmcm9tWzFdIHx8IGNvbW1vbi5kZWZhdWx0TGFuZyxcclxuICAgICAgICAgICAgICAgIHZlcnNpb246IGZyb20gJiYgZnJvbVsyXSAmJiBmcm9tWzJdLnN1YnN0cmluZygxKSB8fCBjb21tb24ubGFzdGVzdCxcclxuICAgICAgICAgICAgICAgIHVybDogZnJvbSAmJiBmcm9tWzRdIHx8ICcvJ1xyXG4gICAgICAgICAgICB9O1xyXG5cdFx0XHRpZiAodG8udXJsICE9PSBmcm9tLnVybCkge1xyXG5cdFx0XHQgICAgaWYgKHRvLmxhbmcgPT09IGZyb20ubGFuZyAmJiB0by52ZXJzaW9uID09PSBmcm9tLnZlcnNpb24pIHtcclxuXHRcdFx0ICAgICAgICBuZXh0KCk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBuZXh0KHsgcGF0aDogYC8keyBmcm9tLmxhbmcgfSR7IGZyb20udmVyc2lvbiAhPT0gY29tbW9uLmxhc3Rlc3QgPyAnLycgKyBmcm9tLnZlcnNpb24gOiAnJyB9JHsgdG8udXJsIH1gLCByZXBsYWNlOiB0cnVlIH0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRuZXh0KCk7XHJcblx0XHRcdH1cclxuXHRcdFx0d2luZG93LnNjcm9sbFRvKDAsIDApO1xyXG5cdFx0fSxcclxuXHQgICAgZGF0YSgpIHtcclxuXHQgICAgICAgIHJldHVybiB7XHJcblx0ICAgICAgICAgICAgYWN0aXZlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGxvZ0xpc3Q6IFtdLFxyXG5cdFx0XHRcdHJ1bnRpbWU6IGZhbHNlLFxyXG5cdFx0XHRcdGV4ZWN1dGluZzogZmFsc2UsXHJcblx0XHRcdFx0aWRlbnRpdHk6IDAsXHJcblx0XHRcdFx0ZXh0ZW5kOiB0cnVlLFxyXG5cdFx0XHRcdGNvZGU6ICcnLFxyXG5cclxuICAgICAgICAgICAgICAgIGNhcHRpb246IHsgfVxyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0bW91bnRlZCgpIHtcclxuICAgICAgICAgICAgY29kZU1pcnJvciA9IENvZGVNaXJyb3IuZnJvbVRleHRBcmVhKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb2RlJyksIHtcclxuICAgICAgICAgICAgICAgIG1vZGU6ICdqYXZhc2NyaXB0JyxcclxuICAgICAgICAgICAgICAgIGluZGVudFVuaXQ6IDQsXHJcbiAgICAgICAgICAgICAgICB0aGVtZTogJ2h5YmlyZCdcclxuXHRcdFx0fSk7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0SnNvbihgY2FwdGlvbmApLnRoZW4oY2FwdGlvbiA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNhcHRpb24gPSBjYXB0aW9uO1xyXG4gICAgICAgICAgICB9KTtcclxuXHRcdH0sXHJcblx0XHR3YXRjaDoge1xyXG4gICAgICAgICAgICBleHRlbmQoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRyeUNvZGUodGhpcy5jb2RlKTtcclxuXHRcdFx0fVxyXG4gICAgICAgIH0sXHJcblx0XHRjb21wdXRlZDoge1xyXG4gICAgICAgICAgICBleHRlbmRFbmFibGVkKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1vbi5pc09sZGVyKHRoaXMudmVyc2lvbiwgJzIuMS4yMCcpO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0bWV0aG9kczoge1xyXG5cdCAgICAgICAgb3Blbihjb2RlLCBydW4pIHtcclxuXHRcdFx0XHR0aGlzLmFjdGl2ZSA9IHRydWU7XHJcblx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvZGVNaXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb2RlID09PSAnc3RyaW5nJyAmJiBjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuZXh0ZW5kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZU1pcnJvci5zZXRWYWx1ZSh0aGlzLmV4dGVuZEVuYWJsZWQgJiYgL1xcLmFzRW51bWVyYWJsZVxcKFxcKSg/ITspL2cudGVzdChjb2RlKSA/ICdFbnVtZXJhYmxlLmNvbmZpZy5leHRlbmRzLmFycmF5ID0gdHJ1ZTtcXHJcXG5cXHJcXG4nICsgY29kZS5yZXBsYWNlKC9cXC5hc0VudW1lcmFibGVcXChcXCkvZywgJycpIDogY29kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGVNaXJyb3Iuc2V0VmFsdWUoY29kZSk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCFjb2RlTWlycm9yLmdldFZhbHVlKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGVNaXJyb3Iuc2V0VmFsdWUoXCJjb25zb2xlLmxvZygxKTtcIik7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYgKHJ1bikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy50cnlJdCgpO1xyXG5cdFx0XHRcdFx0XHR9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRjbG9zZSgpIHtcclxuXHQgICAgICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRjbGVhcigpIHtcclxuXHQgICAgICAgICAgICB0aGlzLmxvZ0xpc3QgPSBbXTtcclxuXHRcdFx0fSxcclxuXHRcdFx0dHJ5Q29kZShjb2RlKSB7XHJcblx0ICAgICAgICAgICAgaWYgKGNvZGUgJiYgY29kZU1pcnJvcikge1xyXG5cdCAgICAgICAgICAgICAgICB0aGlzLmNsZWFyKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcGVuKGNvZGUsIHRydWUpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdCAgICB0cnlJdCgpIHtcclxuXHQgICAgICAgICAgICBpZiAoY29kZU1pcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb2RlID0gY29kZU1pcnJvci5nZXRWYWx1ZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZXhlY3V0aW5nID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pZGVudGl0eSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaWRlbnRpdHkgPSB0aGlzLmlkZW50aXR5O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJ1bnRpbWUgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRoaXN0b3J5KHRoaXMudmVyc2lvbiwgRW51bWVyYWJsZSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdFx0XHRcdHRoaXMucnVudGltZSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGlkZW50aXR5ID09PSB0aGlzLmlkZW50aXR5KSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdGxldCBsb2cgPSBjb25zb2xlLmxvZztcclxuXHRcdFx0XHRcdFx0XHRcdFx0Y29uc29sZS5sb2cgPSAoLi4uY29udGVudHMpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLmxvZ0xpc3QucHVzaCh7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImxvZ1wiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y29udGVudHNcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRsb2coLi4uY29udGVudHMpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdEVudW1lcmFibGUuY29uZmlnLmFzID0gJ2FzRW51bWVyYWJsZSc7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bGV0IHJlc3VsdCA9IGV2YWwoY29kZSk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5sb2dMaXN0LnB1c2goe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJyZXN1bHRcIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNvbnRlbnRzOiBbcmVzdWx0XVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGxvZyhyZXN1bHQpO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5sb2dMaXN0LnB1c2goe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJlcnJvclwiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y29udGVudHM6IFtlLnRvU3RyaW5nKCldXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Y29uc29sZS5lcnJvcihlKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0fSBmaW5hbGx5IHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjb25zb2xlLmxvZyA9IGxvZztcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRFbnVtZXJhYmxlLmNvbmZpZy5leHRlbmRzLmFycmF5ID0gZmFsc2U7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGZpbmFsbHkge1xyXG5cdFx0XHRcdFx0XHRcdFx0dGhpcy4kbmV4dFRpY2soKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRsZXQgbGlzdCA9ICQoJy5yZXN1bHQgLmxpc3QnKTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5zY3JvbGxUb3AobGlzdC5nZXQoMCkuc2Nyb2xsSGVpZ2h0KTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5leGVjdXRpbmcgPSBmYWxzZTtcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIE9iamVjdC5wcm90b3R5cGUuYXNFbnVtZXJhYmxlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIEFycmF5LnByb3RvdHlwZS5hc0VudW1lcmFibGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgU3RyaW5nLnByb3RvdHlwZS5hc0VudW1lcmFibGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgTWFwLnByb3RvdHlwZS5hc0VudW1lcmFibGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgU2V0LnByb3RvdHlwZS5hc0VudW1lcmFibGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbnVtZXJhYmxlLmNvbmZpZy5leHRlbmRzLmFycmF5ID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBPYmplY3QucHJvdG90eXBlLmFzRW51bWVyYWJsZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBBcnJheS5wcm90b3R5cGUuYXNFbnVtZXJhYmxlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIFN0cmluZy5wcm90b3R5cGUuYXNFbnVtZXJhYmxlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIE1hcC5wcm90b3R5cGUuYXNFbnVtZXJhYmxlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIFNldC5wcm90b3R5cGUuYXNFbnVtZXJhYmxlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRW51bWVyYWJsZSA9IHJlcXVpcmUoJ2xpbnEtanMnKTtcclxuXHRcdFx0XHRcdFx0fSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbjwvc2NyaXB0PiIsImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiLCJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wZTE4ZDU3NSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIiwidmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiY29udGFpbmVyXCJ9LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJyb3dcIn0sW19jKCdyb3V0ZXItdmlldycse3N0YXRpY0NsYXNzOlwibmF2YmFyIG5hdmJhci1kZWZhdWx0IHRvcGJhclwiLGF0dHJzOntcIm5hbWVcIjpcIm5hdlwiLFwiaWRcIjpcInRvcGJhclwifX0pXSwxKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcInJvd1wifSxbX2MoJ3JvdXRlci12aWV3Jyx7c3RhdGljQ2xhc3M6XCJjb2wtc20tNCBjb2wtbGctMyBzaWRlYmFyXCIsYXR0cnM6e1wibmFtZVwiOlwiZGlyZWN0b3J5XCIsXCJpZFwiOlwic2lkZWJhclwifX0pLF92bS5fdihcIiBcIiksX2MoJ3JvdXRlci12aWV3Jyx7c3RhdGljQ2xhc3M6XCJjb2wtc20tOCBjb2wtbGctOVwiLHN0YXRpY1N0eWxlOntcInBhZGRpbmctYm90dG9tXCI6XCIzMmVtXCJ9LGF0dHJzOntcIm5hbWVcIjpcImNvbnRlbnRcIixcImlkXCI6XCJjb250ZW50XCJ9fSldLDEpLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwidHJ5XCIsY2xhc3M6eyBhY3RpdmU6IF92bS5hY3RpdmUgfX0sW19jKCd0ZXh0YXJlYScse3N0YXRpY0NsYXNzOlwiY29kZVwiLGF0dHJzOntcInRpdGxlXCI6XCJqYXZhc2NyaXB0IGNvZGVcIixcImlkXCI6XCJjb2RlXCJ9fSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJyZXN1bHRcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJ0bnNcIn0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczpcImJ0biBidG4tZGVmYXVsdFwiLGNsYXNzOnsgZGlzYWJsZWQ6IF92bS5leGVjdXRpbmcgfSxvbjp7XCJjbGlja1wiOl92bS50cnlJdH19LFtfYygnaScse3N0YXRpY0NsYXNzOlwiZmEgZmEtZncgZmEtcGxheVwifSksX3ZtLl92KF92bS5fcyhfdm0uY2FwdGlvbi5ydW4pKV0pLF92bS5fdihcIiBcIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOlwiYnRuIGJ0bi1kZWZhdWx0XCIsb246e1wiY2xpY2tcIjpfdm0uY2xlYXJ9fSxbX2MoJ2knLHtzdGF0aWNDbGFzczpcImZhIGZhLWZ3IGZhLWJhblwifSksX3ZtLl92KF92bS5fcyhfdm0uY2FwdGlvbi5jbGVhcikpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJidG4gYnRuLWRlZmF1bHRcIixvbjp7XCJjbGlja1wiOl92bS5jbG9zZX19LFtfYygnaScse3N0YXRpY0NsYXNzOlwiZmEgZmEtZncgZmEtY29tcHJlc3MgZmEtZmxpcC12ZXJ0aWNhbFwifSksX3ZtLl92KF92bS5fcyhfdm0uY2FwdGlvbi5jbG9zZSkpXSksX3ZtLl92KFwiIFwiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6XCJidG4gYnRuLWRlZmF1bHQgZXhwYW5kXCIsb246e1wiY2xpY2tcIjpfdm0ub3Blbn19LFtfYygnaScse3N0YXRpY0NsYXNzOlwiZmEgZmEtZncgZmEtZXhwYW5kIGZhLWZsaXAtdmVydGljYWxcIn0pLF92bS5fdihfdm0uX3MoX3ZtLmNhcHRpb24udHJ5KSldKSxfdm0uX3YoXCIgXCIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczpcImNoZWNrYm94XCIsY2xhc3M6eyBoaWRkZW46ICFfdm0uZXh0ZW5kRW5hYmxlZCB9fSxbX2MoJ2xhYmVsJyxbX2MoJ2lucHV0Jyx7ZGlyZWN0aXZlczpbe25hbWU6XCJtb2RlbFwiLHJhd05hbWU6XCJ2LW1vZGVsXCIsdmFsdWU6KF92bS5leHRlbmQpLGV4cHJlc3Npb246XCJleHRlbmRcIn1dLGF0dHJzOntcInR5cGVcIjpcImNoZWNrYm94XCJ9LGRvbVByb3BzOntcImNoZWNrZWRcIjpBcnJheS5pc0FycmF5KF92bS5leHRlbmQpP192bS5faShfdm0uZXh0ZW5kLG51bGwpPi0xOihfdm0uZXh0ZW5kKX0sb246e1wiY2hhbmdlXCI6ZnVuY3Rpb24oJGV2ZW50KXt2YXIgJCRhPV92bS5leHRlbmQsJCRlbD0kZXZlbnQudGFyZ2V0LCQkYz0kJGVsLmNoZWNrZWQ/KHRydWUpOihmYWxzZSk7aWYoQXJyYXkuaXNBcnJheSgkJGEpKXt2YXIgJCR2PW51bGwsJCRpPV92bS5faSgkJGEsJCR2KTtpZigkJGVsLmNoZWNrZWQpeyQkaTwwJiYoX3ZtLmV4dGVuZD0kJGEuY29uY2F0KFskJHZdKSl9ZWxzZXskJGk+LTEmJihfdm0uZXh0ZW5kPSQkYS5zbGljZSgwLCQkaSkuY29uY2F0KCQkYS5zbGljZSgkJGkrMSkpKX19ZWxzZXtfdm0uZXh0ZW5kPSQkY319fX0pLF92bS5fdihfdm0uX3MoX3ZtLmNhcHRpb24uZW5hYmxlRXh0ZW5kKSldKV0pLF92bS5fdihcIiBcIiksKF92bS5leGVjdXRpbmcpP19jKCdkaXYnLFtfdm0uX3YoX3ZtLl9zKF92bS5ydW50aW1lID8gX3ZtLmNhcHRpb24ubG9hZFJ1bnRpbWUgOiBfdm0uY2FwdGlvbi5leGVjdXRpbmcpKV0pOl92bS5fZSgpXSksX3ZtLl92KFwiIFwiKSxfYygndWwnLHtzdGF0aWNDbGFzczpcImxpc3RcIn0sX3ZtLl9sKChfdm0ubG9nTGlzdCksZnVuY3Rpb24obG9ncyl7cmV0dXJuIF9jKCdsaScse2NsYXNzOmxvZ3MudHlwZX0sW19jKCdpJyx7c3RhdGljQ2xhc3M6XCJmYSBmYS1md1wiLGNsYXNzOmxvZ3MudHlwZSA9PT0gJ3Jlc3VsdCcgPyAnZmEtYW5nbGUtbGVmdCcgOiBsb2dzLnR5cGUgPT09ICdlcnJvcicgPyAnZmEtdGltZXMtY2lyY2xlJyA6ICcnfSksX3ZtLl92KFwiIFwiKSxfdm0uX2woKGxvZ3MuY29udGVudHMpLGZ1bmN0aW9uKGxvZyl7cmV0dXJuIF9jKCdwcmUnLHtzdGF0aWNTdHlsZTp7XCJwYWRkaW5nLXJpZ2h0XCI6XCIuNWVtXCJ9fSxbX3ZtLl92KF92bS5fcyhfdm0uX2YoXCJqc29uXCIpKGxvZykpKV0pfSldLDIpfSksMCldKV0pXSl9XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cblxuZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSJdLCJuYW1lcyI6WyJDb2RlTWlycm9yIiwiY29kZU1pcnJvciIsImhpc3RvcnkiLCJiZWZvcmVSb3V0ZVVwZGF0ZSIsInRvIiwiZnJvbSIsIm5leHQiLCJzZXRWYWx1ZSIsInRoaXMiLCJjbGVhciIsImNsb3NlIiwicmVnIiwibGFuZyIsImV4ZWMiLCJwYXRoIiwidmVyc2lvbiIsInN1YnN0cmluZyIsInVybCIsInJlcGxhY2UiLCJ3aW5kb3ciLCJzY3JvbGxUbyIsImRhdGEiLCJhY3RpdmUiLCJsb2dMaXN0IiwicnVudGltZSIsImV4ZWN1dGluZyIsImlkZW50aXR5IiwiZXh0ZW5kIiwiY29kZSIsImNhcHRpb24iLCJtb3VudGVkIiwiZnJvbVRleHRBcmVhIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm1vZGUiLCJpbmRlbnRVbml0IiwidGhlbWUiLCJnZXRKc29uIiwidGhlbiIsIndhdGNoIiwidHJ5Q29kZSIsImNvbXB1dGVkIiwiZXh0ZW5kRW5hYmxlZCIsIm1ldGhvZHMiLCJvcGVuIiwicnVuIiwic2V0VGltZW91dCIsInRlc3QiLCJnZXRWYWx1ZSIsInRyeUl0IiwiRW51bWVyYWJsZSIsImxvZyIsImNvbnNvbGUiLCJjb250ZW50cyIsInB1c2giLCJ0eXBlIiwiY29uZmlnIiwiYXMiLCJyZXN1bHQiLCJldmFsIiwiZSIsInRvU3RyaW5nIiwiZXJyb3IiLCJleHRlbmRzIiwiYXJyYXkiLCIkbmV4dFRpY2siLCJsaXN0IiwiJCIsInNjcm9sbFRvcCIsImdldCIsInNjcm9sbEhlaWdodCIsIk9iamVjdCIsInByb3RvdHlwZSIsImFzRW51bWVyYWJsZSIsIkFycmF5IiwiU3RyaW5nIiwiTWFwIiwiU2V0IiwiX3ZtIiwiX2giLCIkY3JlYXRlRWxlbWVudCIsIl9jIiwiX3NlbGYiLCJzdGF0aWNDbGFzcyIsImF0dHJzIiwiX3YiLCJzdGF0aWNTdHlsZSIsImNsYXNzIiwiZGlzYWJsZWQiLCJvbiIsIl9zIiwidHJ5IiwiaGlkZGVuIiwiZGlyZWN0aXZlcyIsIm5hbWUiLCJyYXdOYW1lIiwidmFsdWUiLCJleHByZXNzaW9uIiwiZG9tUHJvcHMiLCJpc0FycmF5IiwiX2kiLCIkZXZlbnQiLCIkJGEiLCIkJGVsIiwidGFyZ2V0IiwiJCRjIiwiY2hlY2tlZCIsIiQkaSIsImNvbmNhdCIsInNsaWNlIiwiZW5hYmxlRXh0ZW5kIiwibG9hZFJ1bnRpbWUiLCJfZSIsIl9sIiwibG9ncyIsIl9mIl0sInNvdXJjZVJvb3QiOiIifQ==