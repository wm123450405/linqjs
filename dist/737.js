(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[737],{21238:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _scripts_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(42849),_scripts_common__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_scripts_common__WEBPACK_IMPORTED_MODULE_0__),Enumerable=__webpack_require__(6532);const CodeMirror=__webpack_require__(65953);let codeMirror;__webpack_require__(96876);const history=__webpack_require__(75293),__WEBPACK_DEFAULT_EXPORT__={beforeRouteUpdate(e,t,s){codeMirror&&codeMirror.setValue(""),this.clear(),this.close();let a=/^\/(\w+-\w+)(\/\d+\.\d+\.\d+(\.pre)?)?(.*)?$/i;e={lang:(e=a.exec(e.path))&&e[1]||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().defaultLang,version:e&&e[2]&&e[2].substring(1)||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest,url:e&&e[4]||"/"},t={lang:(t=a.exec(t.path))&&t[1]||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().defaultLang,version:t&&t[2]&&t[2].substring(1)||_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest,url:t&&t[4]||"/"},e.url!==t.url?e.lang===t.lang&&e.version===t.version?s():s({path:`/${t.lang}${t.version!==_scripts_common__WEBPACK_IMPORTED_MODULE_0___default().lastest?"/"+t.version:""}${e.url}`,replace:!0}):s(),window.scrollTo(0,0)},data:()=>({active:!1,logList:[],runtime:!1,executing:!1,identity:0,extend:!0,code:"",caption:{}}),mounted(){codeMirror=CodeMirror.fromTextArea(document.getElementById("code"),{mode:"javascript",indentUnit:4,theme:"hybird"}),this.getJson("caption").then((e=>{this.caption=e}))},watch:{extend(){this.tryCode(this.code)}},computed:{extendEnabled(){return _scripts_common__WEBPACK_IMPORTED_MODULE_0___default().isOlder(this.version,"2.1.20")}},methods:{open(e,t){this.active=!0,setTimeout((()=>{codeMirror&&("string"==typeof e&&e?(this.code=e,this.extend?codeMirror.setValue(this.extendEnabled&&/\.asEnumerable\(\)(?!;)/g.test(e)?"Enumerable.config.extends.array = true;\r\n\r\n"+e.replace(/\.asEnumerable\(\)/g,""):e):codeMirror.setValue(e)):codeMirror.getValue()||codeMirror.setValue("console.log(1);"),t&&this.tryIt())}))},close(){this.active=!1},clear(){this.logList=[]},tryCode(e){e&&codeMirror&&(this.clear(),this.open(e,!0))},tryIt(){if(codeMirror){let code=codeMirror.getValue();if(code){this.executing=!0,this.identity++;let identity=this.identity;this.runtime=!0,history(this.version,(Enumerable=>{try{if(this.runtime=!1,identity===this.identity){let log=console.log;console.log=(...e)=>{this.logList.push({type:"log",contents:e}),log(...e)};try{Enumerable.config.as="asEnumerable";let result=eval(code);this.logList.push({type:"result",contents:[result]}),log(result)}catch(e){this.logList.push({type:"error",contents:[e.toString()]}),console.error(e)}finally{console.log=log,Enumerable.config.extends.array=!1}}}finally{this.$nextTick((()=>{let e=$(".result .list");e.scrollTop(e.get(0).scrollHeight),this.executing=!1}))}}),(()=>{delete Object.prototype.asEnumerable,delete Array.prototype.asEnumerable,delete String.prototype.asEnumerable,delete Map.prototype.asEnumerable,delete Set.prototype.asEnumerable,Enumerable.config.extends.array=!1}),(()=>{delete Object.prototype.asEnumerable,delete Array.prototype.asEnumerable,delete String.prototype.asEnumerable,delete Map.prototype.asEnumerable,delete Set.prototype.asEnumerable,Enumerable=__webpack_require__(6532)}))}}}}}},20737:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>r});const a=s(21238).Z;const r=(0,s(51900).Z)(a,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"container"},[s("div",{staticClass:"row"},[s("router-view",{staticClass:"navbar navbar-default topbar",attrs:{name:"nav",id:"topbar"}})],1),e._v(" "),s("div",{staticClass:"row"},[s("router-view",{staticClass:"col-sm-4 col-lg-3 sidebar",attrs:{name:"directory",id:"sidebar"}}),e._v(" "),s("router-view",{staticClass:"col-sm-8 col-lg-9",staticStyle:{"padding-bottom":"32em"},attrs:{name:"content",id:"content"}})],1),e._v(" "),s("div",{staticClass:"try",class:{active:e.active}},[s("textarea",{staticClass:"code",attrs:{title:"javascript code",id:"code"}}),e._v(" "),s("div",{staticClass:"result"},[s("div",{staticClass:"btns"},[s("div",{staticClass:"btn btn-default",class:{disabled:e.executing},on:{click:e.tryIt}},[s("i",{staticClass:"fa fa-fw fa-play"}),e._v(e._s(e.caption.run))]),e._v(" "),s("div",{staticClass:"btn btn-default",on:{click:e.clear}},[s("i",{staticClass:"fa fa-fw fa-ban"}),e._v(e._s(e.caption.clear))]),e._v(" "),s("div",{staticClass:"btn btn-default",on:{click:e.close}},[s("i",{staticClass:"fa fa-fw fa-compress fa-flip-vertical"}),e._v(e._s(e.caption.close))]),e._v(" "),s("div",{staticClass:"btn btn-default expand",on:{click:e.open}},[s("i",{staticClass:"fa fa-fw fa-expand fa-flip-vertical"}),e._v(e._s(e.caption.try))]),e._v(" "),s("div",{staticClass:"checkbox",class:{hidden:!e.extendEnabled}},[s("label",[s("input",{directives:[{name:"model",rawName:"v-model",value:e.extend,expression:"extend"}],attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.extend)?e._i(e.extend,null)>-1:e.extend},on:{change:function(t){var s=e.extend,a=t.target,r=!!a.checked;if(Array.isArray(s)){var i=e._i(s,null);a.checked?i<0&&(e.extend=s.concat([null])):i>-1&&(e.extend=s.slice(0,i).concat(s.slice(i+1)))}else e.extend=r}}}),e._v(e._s(e.caption.enableExtend))])]),e._v(" "),e.executing?s("div",[e._v(e._s(e.runtime?e.caption.loadRuntime:e.caption.executing))]):e._e()]),e._v(" "),s("ul",{staticClass:"list"},e._l(e.logList,(function(t){return s("li",{class:t.type},[s("i",{staticClass:"fa fa-fw",class:"result"===t.type?"fa-angle-left":"error"===t.type?"fa-times-circle":""}),e._v(" "),e._l(t.contents,(function(t){return s("pre",{staticStyle:{"padding-right":".5em"}},[e._v(e._s(e._f("json")(t)))])}))],2)})),0)])])])}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,