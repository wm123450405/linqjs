(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[121],{30121:(s,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>i});const a={data:()=>({caption:{},classMeta:{},propertyMeta:{}}),computed:{className(){return this.$route.params.class},propertyName(){return this.$route.params.property}},mounted(){this.getJson("caption",(()=>`apis/${this.className}`),(()=>`apis/${this.className}/properties/${this.propertyName}`)).then((([s,t,e])=>{this.caption=s,this.classMeta=t,this.propertyMeta=e,this.highlight()}))}};const i=(0,e(51900).Z)(a,(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("content-template",{attrs:{title:s.className+"."+s.propertyName+" "+s.capitalize(s.caption.property)}},s._l(s.historys(s.propertyMeta.historys),(function(t){return s.isNewer(t.since)&&s.isOlder(t.deprecated)?e("div",[e("div",{staticClass:"indent"},[e("p",[e("i",{staticClass:"fa fa-fw fa-align-left fa-flip-vertical text-success",attrs:{title:s.caption.property}}),s._v(" "),t.static?e("i",{staticClass:"fa fa-fw fa-strikethrough text-danger",attrs:{title:s.caption.static}}):s._e(),s._v(" "),t.since?e("shields",{attrs:{subject:"since",status:t.since,color:"yellow",title:s.caption.since+": "+t.since}}):s._e(),s._v(" "),t.deprecated?e("shields",{attrs:{subject:"deprecated",status:t.deprecated,color:"yellow",title:s.caption.deprecated+": "+t.deprecated}}):s._e(),s._v(" "),t.override?e("shields",{attrs:{subject:"override",title:s.caption.override}}):s._e(),s._v(" "),t.readonly?e("shields",{attrs:{subject:"readonly",title:s.caption.readonly}}):s._e()],1),s._v(" "),t.description?e("p",{staticClass:"text-success"},[s._v(s._s(s.capitalize(t.description)))]):s._e(),s._v(" "),s._l(t.descriptions,(function(t){return e("p",{staticClass:"text-success",domProps:{innerHTML:s._s(s.capitalize(t))}})})),s._v(" "),e("p",[e("code",{staticClass:"hljs"},[e("span",{staticClass:"hljs-class"},[e("span",{staticClass:"hljs-title"},[s._v(s._s(s.className))])]),t.static||"object"===s.classMeta.type?s._e():[s._v("."),e("span",{staticClass:"hljs-built_in"},[s._v("prototype")])],s._v("."),e("span",{staticClass:"hljs-attribute"},[s._v(s._s(s.propertyName))]),s._v(" "),e("span",{staticClass:"hljs-symbol"},[s._v(":")]),s._v(" "),e("code-class",{attrs:{type:t.type}}),s._v(" "),void 0!==t.default?[e("span",{staticClass:"hljs-symbol"},[s._v("=")]),s._v(" "),e("span",{staticClass:"hljs-variable"},[s._v(s._s(s._f("json")(t.default)))])]:s._e()],2)]),s._v(" "),t.remarks&&t.remarks.length?e("h3",[s._v(s._s(s.caption.remarks)+":")]):s._e(),s._v(" "),s._l(t.remarks,(function(t){return e("p",{staticClass:"text-info indent",domProps:{innerHTML:s._s(s.capitalize(t))}})})),s._v(" "),t.warnings&&t.warnings.length?e("h3",[s._v(s._s(s.caption.warnings)+":")]):s._e(),s._v(" "),s._l(t.warnings,(function(t){return e("p",{staticClass:"text-warning indent",domProps:{innerHTML:s._s(s.capitalize(t))}})})),s._v(" "),s._l(t.examples,(function(t,a){return e("div",{staticClass:"indent"},[e("p",[s._v(s._s(a+1)+". "+s._s(t.description)+" "),"javascript"===t.script.type?e("span",{staticClass:"btn btn-success btn-sm",on:{click:function(e){return s.tryCode(t.script.tryHref&&s.examples[t.script.tryHref]||t.script.tryScript||t.script.href&&s.examples[t.script.href]||t.script.script)}}},[e("i",{staticClass:"fa fa-fw fa-play"}),s._v(" "+s._s(s.caption.try))]):s._e()]),s._v(" "),e("pre",[e("code",{class:t.script.type,domProps:{innerHTML:s._s(t.script.script||s.examples[t.script.href])}})]),s._v(" "),s._l(t.descriptions,(function(t){return e("p",{domProps:{innerHTML:s._s(t)}})}))],2)})),s._v(" "),e("div",[s._v(s._s(s.caption.see)+" "),e("i",{staticClass:"fa fa-fw fa-at"}),s._v(" "),e("see-link",{attrs:{see:{apis:s.className}}})],1),s._v(" "),s._l(t.sees,(function(t){return e("div",[s._v(s._s(s.caption.see)+" "),e("i",{staticClass:"fa fa-fw fa-at"}),s._v(" "),e("see-link",{attrs:{see:t}})],1)}))],2)]):s._e()})),0)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,