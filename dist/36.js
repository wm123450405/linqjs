(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[36],{58036:(t,s,n)=>{"use strict";n.r(s),n.d(s,{default:()=>i});const e={data:()=>({data:{}}),mounted(){this.getJson("install").then((t=>this.data=t))},methods:{toScript:t=>`<script src="${location.origin+(t.startsWith("/")?t.substring(1):location.pathname+t)}"><\/script>`}};const i=(0,n(51900).Z)(e,(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("content-template",{attrs:{title:t.data.title}},t._l(t.data.contents,(function(s,e){return n("div",[n("h3",[t._v(t._s(e+1)+". "+t._s(s.title)),s.code?n("mark-link",{attrs:{id:s.code}}):t._e()],1),t._v(" "),t._l(s.details,(function(s){return n("div",{staticStyle:{"padding-left":"20px"}},["example"===s.type?n("div",[s.runtime?n("h4",[t._v(t._s(s.runtime)+":")]):t._e(),t._v(" "),t._l(s.descriptions,(function(s){return n("p",{staticClass:"text-success",domProps:{innerHTML:t._s(t.capitalize(s))}})})),t._v(" "),t._l(s.scripts,(function(s){return n("div",[t._l(s.descriptions,(function(s){return n("p",{staticClass:"text-success",domProps:{innerHTML:t._s(t.capitalize(s))}})})),t._v(" "),"<script>"===s.type?n("pre",[n("code",{class:t.html,domProps:{textContent:t._s(t.toScript(s.src))}})]):n("pre",[n("code",{class:s.type,domProps:{innerHTML:t._s(s.script)}})]),t._v(" "),t._l(s.remarks,(function(s){return n("p",{staticClass:"text-info",domProps:{innerHTML:t._s(t.capitalize(s))}})})),t._v(" "),t._l(s.warnings,(function(s){return n("p",{staticClass:"text-warning",domProps:{innerHTML:t._s(t.capitalize(s))}})}))],2)})),t._v(" "),t._l(s.remarks,(function(s){return n("p",{staticClass:"text-info",domProps:{innerHTML:t._s(t.capitalize(s))}})})),t._v(" "),t._l(s.warnings,(function(s){return n("p",{staticClass:"text-warning",domProps:{innerHTML:t._s(t.capitalize(s))}})}))],2):t._e()])}))],2)})),0)}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,