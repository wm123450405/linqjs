(self.webpackChunklinq_js_docs=self.webpackChunklinq_js_docs||[]).push([[995],{76465:e=>{e.exports={constructors:{historys:[{overloads:[{description:"Create an object of type IEnumerable from source"}]}]},name:"Enumerable",properties:[{name:"actions",historys:[{deprecated:0,description:"An object contains same useful actions"}]},{name:"comparers",historys:[{deprecated:0,description:"An object contains same useful comparers"}]},{name:"config",historys:[{deprecated:0,description:"Global config"}]},{name:"predicates",historys:[{deprecated:0,description:"An object contains same useful predicates"}]},{name:"selectors",historys:[{deprecated:0,description:"An object contains same useful selectors"}]}],methods:[{name:"asEnumerable",historys:[{deprecated:0,overloads:[{description:"Create an object of type IEnumerable from source"}]}]},{name:"empty",historys:[{deprecated:0,overloads:[{description:"Create an empty IEnumerable object"}]}]}]}},12565:e=>{e.exports={constructors:{historys:[{overloads:[{description:"Create an object of type IEnumerable from source"}]}]}}},86290:e=>{e.exports={historys:[{overloads:[{description:"Create an object of type IEnumerable from source"}]}]}},26149:e=>{e.exports={historys:[{overloads:[{description:"Create an empty IEnumerable object"}]}]}},77003:e=>{e.exports={historys:[{description:"An object contains same useful actions"}]}},16659:e=>{e.exports={historys:[{description:"An object contains same useful comparers"}]}},61117:e=>{e.exports={historys:[{description:"Global config"}]}},12527:e=>{e.exports={historys:[{description:"An object contains same useful predicates"}]}},91509:e=>{e.exports={historys:[{description:"An object contains same useful selectors"}]}},7221:e=>{e.exports={class:"class",interface:"interface",object:"object",constructor:"constructor",constructors:"constructors",property:"property",properties:"properties",method:"method",methods:"methods",since:"since",deprecated:"deprecated",details:"details",description:"description",summary:"summary",warning:"warning",warnings:"warnings",remark:"remark",remarks:"remarks",example:"example",examples:"examples",static:"static",new:"new",see:"see",declare:"declare",parameters:"parameters",parameter:"parameter",returns:"return value",generics:"type parameters",apis:"APIs",guide:"Guide",publish:"publish",time:"time",date:"date",prepublish:"prepublish",version:"version",author:"author",email:"email",project:"project",default:"default",value:"value",defaultValue:"default value",readonly:"readonly",lazy:"deferred execution",try:"try it",run:"run",clear:"clear",close:"close",loadRuntime:"loading runtime",executing:"executing",enableExtend:"enable extends of Array",newInstance:{only:"can only use new operator",both:"can use new operator or not",cannot:"can not use new operator"}}},5900:e=>{e.exports=[{publish:"2017-03-27",contents:["优化了部分代码结构","新增 对 arrayComparer 的默认支持","新增了 对绝大部分 selector, predicate, comparer 参数校验","新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能","新增 Enumerable.predicates.exists 属性, 表示非空筛选器","新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器","新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器","新增 Enumerable.predicates.selector 方法, 生成选择筛选器","新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器"],version:"2.1.15"},{publish:"2017-04-05",contents:["优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug","修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result","修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致","增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector"],version:"2.1.16"},{publish:"2017-04-12",contents:["新增 findLast 方法","新增 Enumerable.comparers.greater 方法","新增 Enumerable.comparers.less 方法","新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器","新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器","优化 comparer / predicate / selector 类型的参数 转化过程的效率"],version:"2.1.17"},{publish:"2017-08-30",contents:["新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型","新增 Enumerable.types 对象,包含各参考类型的常量值","Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用","新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器","新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接","修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug","移除过时的功能 arrayComparer、predicateComparer","新增 Enumerable.extends.lazy 配置选项","修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题","新增 IEnumerable.prototype.chunk 方法用来对序列进行分块","新增 IEnumerable.prototype.product 方法用来计算乘积","新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法","新增 IEnumerable.prototype.rand 方法","","Bugs","调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果"],version:"2.1.18"},{publish:"2017-09-08",contents:["新增(New):","1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持","2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector","3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑","4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题","","优化(Optimization):","1. 优化了 join 方法的处理逻辑","2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读","3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值","4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法","","修复(Fixed):","1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题","2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题","3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug"],version:"2.1.19"},{publish:"2017-09-22",contents:["新增(New):","1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素","2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素","3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组","4. 新增 Enumerable.between 方法, 生成范围内的整数序列","5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致","6. 为 Enumerable.range 方法新增第三个参数, 设置步长","7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列","8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并","","优化(Optimization):","1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑","2. 优化 defaultValueSelector","","修复(Fixed):","1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug"],version:"2.1.20"},{publish:"2017-11-20",contents:["新增(New):","1. 新增 IEnumerable.prototype.isSub / IEnumerable.prototype.isSuper 方法, 用来判断两个序列的从属关系","2. 新增 IEnumerable.prototype.symmetric 方法, 用来计算两个序列的对称差集","","优化(Optimization):","1. 优化 orderBy/orderByDescending/thenBy/thenByDescending 方法的性能","","修复(Fixed):"],version:"2.1.21"},{publish:"2018-03-21",contents:["新增(New):","1. 新增 ITree 接口, 拥有对树形结构的基本操作. 包含: value, children, values 等属性, 包含: depth, degree, getChild, getValue, breadthTraverse, breadthSearch, breadthSubTree, depthTraverse, depthSearch, depthSubTree, lowestAncestor, isDescendantOf, isAncestorOf, path, pathTo, isBinary, isFullBinary, isCompleteBinary, isProfectBinary, asBinary 等方法","2. 新增 BinaryTree 类, 拥有对二叉树的基本操作. 包含: left, right 等属性, 包含: hasLeft, hasRight, preOrder, inOrder, postOrder 等方法","3. 修改 ICombine 继承 ITree 接口, 可进行树形结构的操作","4. 新增 IEnumerable.prototype.maxOrDefault, IEnumerable.prototype.minOrDefault 方法","5. 为 object 对象新增 asEnumerable(childrenSelector, valueSelector) 重载, 用于或一个 ITree 对象","6. 新增 toPreOrder, toInOrder, toPostOrder 方法, 用于生成一个完全二叉树, 分别使得此二叉树的 前序遍历|中序遍历|后序遍历 的结果与源序列一致","","优化(Optimization):","1. 优化 IteratorEnumerable","","修复(Fixed):"],version:"2.1.22"},{publish:"2018-03-29",contents:["新增(New):","1. 增加 ITree.prototype.toValue 方法,将树形结构转化 object 对象 ( JSON 数据 )","2. 增加 ITree.prototype.isParentOf, ITree.prototype.isChildOf, ITree.prototype.getParent, ITree.prototype.prev, ITree.prototype.prevAll, ITree.prototype.next, ITree.prototype.nextAll, ITree.prototype.siblings, ITree.prototype.getParentNode, ITree.prototype.prevNode, ITree.prototype.prevAllNodes, ITree.prototype.nextNode, ITree.prototype.nextAllNodes, ITree.prototype.siblingNodes, ITree.prototype.pathNodes, ITree.prototype.pathNodesTo 方法,操作树形的各节点关系","3. 增加 IEnumerable.prototype.each 方法,对序列中的每个元素执行一次操作,并返回序列本身 ( 与 forEach 方法的区别在于 each 方法可以继续链式调用 )","4. 增加 IEnumerable.prototype.split 方法,对序列按照指定的条件进行拆分","5. 增加 IEnumerable.prototype.indices 方法,用使用一个索引序列从源序列中生成一个新序列","6. 增加 IEnumerable.prototype.permutation, IEnumerable.prototype.combination 方法,用来计算排列与组合","7. 增加 Enumerable.setters.children, Enumerable.setters.value 属性,一个默认的 children/value 设置器","8. 增加 Enumerable.setters.property 方法,用来生成一个属性设置器","","优化(Optimization):","1. 优化 ITree.prototype.isAncestorOf, ITree.prototype.isDescendantOf 方法的性能","2. 优化 IEnumerable.prototype.chunk, IEnumerable.prototype.groupBy, IEnumerable.prototype.groupJoin 等方法性能","3. 优化 ITree.prototype.lowestAncestor 方法的性能","4. 优化 Enumerable.selectors.property 方法, 增加一个参数控制是否忽略无效的属性","","修复(Fixed):","1. 修复 ITree.prototype.lowestAncestor 在处理节点值为false的情况下返回错误的问题","2. 修复 ITree.prototype.lowestAncestor 在处理节点值类型与参数值类型不同但数值相等的情况下返回错误的问题"],version:"2.1.23"},{publish:"2020-03-03",contents:["新增(New):","1. 为一些方法增加别名, 方便其他语言使用者更容易的转移","2. 新增 conflict 方法用来判断一个序列中是否包含重复的元素","3. 新增 nearSplit 方法用来分割一个序列,与 split 方法区别在于连续的符合条件的分割元素之间将不会被分割出空序列","4. 新增 skipSame, takeSame 方法用来获取或忽略开头部分相同的元素","","优化(Optimization):","","修复(Fixed):","1. 修复 skipWhile, takeWhile 方法默认参数错误的bug"],version:"2.1.24"},{publish:"2021-07-06",contents:["调整(Change)","1. 调整了 min、minOrDefault、max、maxOrDefault 方法的逻辑；","","新增(New):","1. 新增了 proportion、skipProportion、takeProportion 方法；","2. 新增了 minIndex, maxIndex 方法；","3. 新增了 randomProbability, randomProbabilityOrDefault, randomIndexProbability 方法；","4. 增加了性能基准的单元测试，方便查看方法的性能与传统写法性能的差距。延时方法势必会消耗部分性能；","","优化(Optimization):","1. 更新使用Babel7、Webpack5进行项目编译打包；","2. 优化了 rand 方法的性能及表现；","3. 优化了 min、minOrDefault、max、maxOrDefault 方法的性能及表现；","4. 优化了 groupBy、distinct 等方法的性能及表现；","","修复(Fixed):","1. 修复了 IEnumerable 中未注册 random、 randomOrDefault 方法的问题；"],version:"2.2.0"},{prepublish:!0,contents:["调整(Change):","","新增(New):","","优化(Optimization):","","修复(Fixed):"],version:"2.2.1.pre"}]},19749:e=>{e.exports=[{code:"introduction",title:"Introduction"},{code:"install",title:"Install"},{code:"guides",title:"Guide",children:[{code:"instance",title:"Get IEnumerable instance",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"use",title:"Start use",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"config",title:"Configuration",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"selector",title:"Selector",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"predicate",title:"Predicate",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"comparer",title:"Comparer",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"action",title:"Action",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"setter",title:"设置器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"iterator",title:"迭代器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"enumerator",title:"枚举器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"extend",title:"扩展",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"plugin",title:"插件",since:"2.1.15",deprecated:"2.2.1.pre"}]},{code:"apis",title:"APIs",children:[{code:"BinaryTree",title:"BinaryTree Class",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"Directory",title:"Directory Class",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Entry",title:"Entry Class",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable",title:"Enumerable Class",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.actions",title:"Enumerable.actions Object",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.comparers",title:"Enumerable.comparers Object",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.config",title:"Enumerable.config Object",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.predicates",title:"Enumerable.predicates Object",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.selectors",title:"Enumerable.selectors Object",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.setters",title:"Enumerable.setters Object",since:"2.1.20",deprecated:"2.2.1.pre"},{code:"IChunk",title:"IChunk Interface",since:"2.1.18",deprecated:"2.2.1.pre"},{code:"ICombine",title:"ICombine Interface",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"IEnumerable",title:"IEnumerable Interface",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IEnumerator",title:"IEnumerator Interface",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IGrouping",title:"IGrouping Interface",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IMapEnumerable",title:"IMapEnumerable Interface",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IOrderedEnumerable",title:"IOrderedEnumerable Interface",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"ITree",title:"ITree Interface",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"Lookup",title:"Lookup Class",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Plugin",title:"Plugin Class",since:"2.1.15",deprecated:"2.2.1.pre"}]},{code:"change",title:"Change List"},{code:"about",title:"About"}]},21167:e=>{e.exports=[{code:"introduction",title:"Introduction"},{code:"install",title:"Install"},"guides","apis",{code:"change",title:"Change List"},{code:"about",title:"About"}]},55166:e=>{e.exports={}},13273:e=>{e.exports={"1.js":'let fruits = [ "apple", "mango", "orange", "passionfruit", "grape" ];\r\n\r\n// Determine whether any string in the array is longer than "banana".\r\nlet longestName =\r\n    fruits.asEnumerable().aggregate("banana",\r\n        (longest, next) =>\r\n            next.length > longest.length ? next : longest,\r\n        // Return the final result as an upper case string.\r\n        fruit => fruit.toUpperCase());\r\n\r\nconsole.log(`The fruit with the longest name is ${ longestName }`);\r\n\r\n// This code produces the following output:\r\n//\r\n// The fruit with the longest name is PASSIONFRUIT.'}},31386:e=>{e.exports={"1.js":'// Create an array of Pets.\r\nlet pets = [\r\n    { name: "Barley", age: 10 },\r\n    { name: "Boots", age: 14 },\r\n    { name: "Whiskers", age: 6 }\r\n];\r\n\r\n// Determine whether all pet names\r\n// in the array start with \'B\'.\r\nlet allStartWithB = pets.asEnumerable().all(pet => pet.name.startsWith("B"));\r\n\r\nconsole.log(`${ allStartWithB ? "All" : "Not all" } pet names start with \'B\'.`);\r\n\r\n// This code produces the following output:\r\n//\r\n//  Not all pet names start with \'B\'.',"2.js":'let people = [\r\n    {\r\n        lastName: "Haas",\r\n        pets: [\r\n            { name: "Barley", age: 10 },\r\n            { name: "Boots", age: 14 },\r\n            { name: "Whiskers", age: 6 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "Fakhouri",\r\n        pets: [\r\n            { name: "Snowball", age: 1 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "Antebi",\r\n        pets: [\r\n            { name: "Belle", age: 8 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "Philips",\r\n        pets: [\r\n            { name: "Sweetie", age: 2 },\r\n            { name: "Rover", age: 13 }\r\n        ]\r\n    }\r\n];\r\n\r\n// Determine which people have pets that are all older than 5.\r\nlet names = people.asEnumerable().where(person => person.pets.all(pet => pet.age > 5)).select(person => person.lastName);\r\n\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n/* This code produces the following output:\r\n *\r\n * Haas\r\n * Antebi\r\n */'}},33564:e=>{e.exports={"1.js":'// Create an array of Pets.\r\nlet pets = [\r\n    { name: "Barley", age: 8, vaccinated: true },\r\n    { name: "Boots", age: 4, vaccinated: false },\r\n    { name: "Whiskers", age: 1, vaccinated: false }\r\n];\r\n\r\n// Determine whether any pets over age 1 are also unvaccinated.\r\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\r\n\r\nconsole.log(`There ${ unvaccinated ? "are" : "are not any" } unvaccinated animals over age one.`);\r\n\r\n// This code produces the following output:\r\n//\r\n//  There are unvaccinated animals over age one.'}},68414:e=>{e.exports={"1.js":'let numbers = [ "10007", "37", 299846234235 ];\r\n\r\nlet average = numbers.asEnumerable().average();\r\n\r\nconsole.log(`The average is ${ average }.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// The average is 99948748093.'}},92595:e=>{e.exports={"1.js":'let cats = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 }\r\n];\r\n\r\nlet dogs = [\r\n    { name: "Bounder", age: 3 },\r\n    { name: "Snoopy", age: 14 },\r\n    { name: "Fido", age: 9 }\r\n];\r\n\r\nlet query = cats.asEnumerable().select(cat => cat.name)\r\n    .concat(dogs.asEnumerable().select(dog => dog.name));\r\n\r\nfor (let name of query) {\r\n    console.log(name);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// Barley\r\n// Boots\r\n// Whiskers\r\n// Bounder\r\n// Snoopy\r\n// Fido'}},50318:e=>{e.exports={"1.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet fruit = "mango";\r\n\r\nlet hasMango = fruits.asEnumerable().contains(fruit);\r\n\r\nconsole.log(`The array ${ hasMango ? "does" : "does not" } contain \'${ fruit }\'.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// The array does contain \'mango\'.',"2.js":'// Custom comparer for contains\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Fruits are equal if their names and product numbers are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 },\r\n    { name: "lemon", code: 12 }\r\n];\r\n\r\nlet apple = { name: "apple", code: 9 };\r\nlet kiwi = { name: "kiwi", code: 8 };\r\n\r\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\r\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\r\n\r\nconsole.log("Apple? " + hasApple);\r\nconsole.log("Kiwi? " + hasKiwi);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Apple? true\r\n Kiwi? false\r\n */'}},22909:e=>{e.exports={"1.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet numberOfFruits = fruits.asEnumerable().count();\r\n\r\nconsole.log(`There are ${ numberOfFruits } fruits in the collection.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// There are 6 fruits in the collection.\r\n',"2.js":'let pets = [\r\n    { name: "Barley", vaccinated: true },\r\n    { name: "Boots", vaccinated: false },\r\n    { name: "Whiskers", vaccinated: false }\r\n];\r\n\r\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\r\n\r\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// There are 2 unvaccinated animals.',"3.js":'let pets = [\r\n    { name: "Barley", vaccinated: true },\r\n    { name: "Boots", vaccinated: false },\r\n    { name: "Whiskers", vaccinated: false }\r\n];\r\n\r\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\r\n\r\nconsole.log(`There are ${ numberUnvaccinated } unvaccinated animals.`);\r\n\r\n// This code produces the following output:\r\n//\r\n// There are 2 unvaccinated animals.'}},91412:e=>{e.exports={"1.js":'let defaultPet = { name: "Default Pet Name", age: 0 };\r\n\r\nlet pets1 = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 }\r\n];\r\n\r\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\r\n    console.log(`Name: ${ pet.name }`);\r\n}\r\n\r\nconsole.log();\r\n\r\nlet pets2 = [];\r\n\r\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\r\n    console.log(`Name: ${ pet.name }`);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Name: Barley\r\n Name: Boots\r\n Name: Whiskers\r\n\r\n Name: Default Pet Name\r\n */'}},50930:e=>{e.exports={"1.js":'let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\r\n\r\nlet distinctAges = ages.asEnumerable().distinct();\r\n\r\nconsole.log("Distinct ages:");\r\n\r\nfor (let age of distinctAges) {\r\n    console.log(age);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Distinct ages:\r\n 21\r\n 46\r\n 55\r\n 17\r\n */\r\n',"2.js":'// Custom comparer for distinct\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Check whether the products\' properties are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet products = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 },\r\n    { name: "apple", code: 9 },\r\n    { name: "lemon", code: 12 }\r\n];\r\n\r\n// Exclude duplicates.\r\nlet noduplicates = products.distinct(productComparer);\r\n\r\nfor (let product of noduplicates) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n apple 9\r\n orange 4\r\n lemon 12\r\n */'}},11190:e=>{e.exports={"1.js":'let names = [ "Hartono, Tommy", "Adams, Terry", "Andersen, Henriette Thaulow", "Hedlund, Magnus", "Ito, Shu" ];\r\n\r\nlet name = names.asEnumerable().elementAt(4);\r\n\r\nconsole.log(`The name is \'${ name }\'.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The name is \'Ito, Shu\'.\r\n */'}},56138:e=>{e.exports={"1.js":'let names = [ "Hartono, Tommy", "Adams, Terry", "Andersen, Henriette Thaulow", "Hedlund, Magnus", "Ito, Shu" ];\r\n\r\nlet index = 20;\r\n\r\nlet name = names.asEnumerable().elementAtOrDefault(index, "[no name at this index]");\r\n\r\nconsole.log(`The name chosen at index ${ index } is \'${ name }\'.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The name chosen at index 20 is \'[no name at this index]\'.\r\n */'}},20369:e=>{e.exports={"1.js":"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\r\nlet numbers2 = [ 2.2 ];\r\n\r\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\r\n\r\nfor (let number of onlyInFirstSet) {\r\n    console.log(number);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 2\r\n 2.1\r\n 2.3\r\n 2.4\r\n 2.5\r\n */","2.js":'// Custom comparer for distinct\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Check whether the products\' properties are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits1 = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 },\r\n    { name: "lemon", code: 12 }\r\n];\r\n\r\nlet fruits2 = [ { name: "apple", code: 9 } ];\r\n\r\n//Get all the elements from the first array\r\n//except for the elements from the second array.\r\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\r\n\r\nfor (let product of except) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n orange 4\r\n lemon 12\r\n */'}},46332:e=>{e.exports={"1.js":"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\r\n\r\nlet first = numbers.asEnumerable().first();\r\n\r\nconsole.log(first);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 9\r\n */","2.js":"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\r\n\r\nlet first = numbers.asEnumerable().first(number => number > 80);\r\n\r\nconsole.log(first);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 92\r\n */"}},24160:e=>{e.exports={"1.js":"let numbers = [];\r\nlet first = numbers.asEnumerable().firstOrDefault(0);\r\nconsole.log(first);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 0\r\n */","2.js":'let names = [ "Hartono, Tommy", "Adams, Terry",\r\n    "Andersen, Henriette Thaulow",\r\n    "Hedlund, Magnus", "Ito, Shu" ];\r\n\r\nlet firstLongName = names.asEnumerable().firstOrDefault("", name => name.length > 20);\r\n\r\nconsole.log(`The first long name is ${ firstLongName }.`);\r\n\r\nlet firstVeryLongName = names.asEnumerable().firstOrDefault("", name => name.length > 30);\r\n\r\nconsole.log(`There is ${ firstVeryLongName === "" ? "not a" : "a" } name longer than 30 characters.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The first long name is \'Andersen, Henriette Thaulow\'.\r\n There is not a name longer than 30 characters.\r\n */'}},25024:e=>{e.exports={"1.js":'// Create a list of pets.\r\nlet pets = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 },\r\n    { name: "Daisy", age: 4 }\r\n];\r\n\r\n// Group the pets using Age as the key value\r\n// and selecting only the pet\'s Name for each value.\r\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\r\n\r\n// Iterate over each IGrouping in the collection.\r\nfor (let petGroup of query) {\r\n    // Print the key value of the IGrouping.\r\n    console.log(petGroup.key);\r\n    // Iterate over each value in the\r\n    // IGrouping and print the value.\r\n    for (let name of petGroup)\r\n        console.log(`  ${ name }`);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 8\r\n   Barley\r\n 4\r\n   Boots\r\n   Daisy\r\n 1\r\n   Whiskers\r\n */',"2-2.1.19.js":'// Create a list of pets.\r\nlet petsList = [\r\n    { name: "Barley", age: 8.3 },\r\n    { name: "Boots", age: 4.9 },\r\n    { name: "Whiskers", age: 1.5 },\r\n    { name: "Daisy", age: 4.3 }\r\n];\r\n\r\n// Group Pet objects by the Math.Floor of their age.\r\n// Then project an anonymous type from each group\r\n// that consists of the key, the count of the group\'s\r\n// elements, and the minimum and maximum age in the group.\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet,\r\n    (age, pets) => ({\r\n        key: age,\r\n        count: pets.count(),\r\n        min: pets.min(pet => pet.age),\r\n        max: pets.max(pet => pet.age)\r\n    }));\r\n\r\n// Iterate over each anonymous type.\r\nfor (let result of query) {\r\n    console.log("\\nAge group: " + result.key);\r\n    console.log("Number of pets in this age group: " + result.count);\r\n    console.log("Minimum age: " + result.min);\r\n    console.log("Maximum age: " + result.max);\r\n}\r\n\r\n/*  This code produces the following output:\r\n\r\n Age group: 8\r\n Number of pets in this age group: 1\r\n Minimum age: 8.3\r\n Maximum age: 8.3\r\n\r\n Age group: 4\r\n Number of pets in this age group: 2\r\n Minimum age: 4.3\r\n Maximum age: 4.9\r\n\r\n Age group: 1\r\n Number of pets in this age group: 1\r\n Minimum age: 1.5\r\n Maximum age: 1.5\r\n */',"2.js":'// Create a list of pets.\r\nlet petsList = [\r\n    { name: "Barley", age: 8.3 },\r\n    { name: "Boots", age: 4.9 },\r\n    { name: "Whiskers", age: 1.5 },\r\n    { name: "Daisy", age: 4.3 }\r\n];\r\n\r\n// Group Pet objects by the Math.Floor of their age.\r\n// Then project an anonymous type from each group\r\n// that consists of the key, the count of the group\'s elements.\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet,\r\n    (age, pets) => ({\r\n        key: age,\r\n        count: pets.count()\r\n    }));\r\n\r\n// Iterate over each anonymous type.\r\nfor (let result of query) {\r\n    console.log("\\nAge group: " + result.key);\r\n    console.log("Number of pets in this age group: " + result.count);\r\n}\r\n\r\n/*  This code produces the following output:\r\n\r\n Age group: 8\r\n Number of pets in this age group: 1\r\n\r\n Age group: 4\r\n Number of pets in this age group: 2\r\n\r\n Age group: 1\r\n Number of pets in this age group: 1\r\n */',"3-2.1.19.js":'// Create a list of pets.\r\nlet petsList = [\r\n    { name: "Barley", age: 8.3 },\r\n    { name: "Boots", age: 4.9 },\r\n    { name: "Whiskers", age: 1.5 },\r\n    { name: "Daisy", age: 4.3 }\r\n];\r\n\r\n// Group Pet objects by the Math.Floor of their age.\r\n// Then project an anonymous type from each group\r\n// that consists of the key, the count of the group\'s\r\n// elements, and the minimum and maximum age in the group.\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet.age,\r\n    (age, ages) => ({\r\n        key: age,\r\n        count: ages.count(),\r\n        min: ages.min(),\r\n        max: ages.max()\r\n    }));\r\n\r\n// Iterate over each anonymous type.\r\nfor (let result of query) {\r\n    console.log("\\nAge group: " + result.key);\r\n    console.log("Number of pets in this age group: " + result.count);\r\n    console.log("Minimum age: " + result.min);\r\n    console.log("Maximum age: " + result.max);\r\n}\r\n\r\n/*  This code produces the following output:\r\n\r\n Age group: 8\r\n Number of pets in this age group: 1\r\n Minimum age: 8.3\r\n Maximum age: 8.3\r\n\r\n Age group: 4\r\n Number of pets in this age group: 2\r\n Minimum age: 4.3\r\n Maximum age: 4.9\r\n\r\n Age group: 1\r\n Number of pets in this age group: 1\r\n Minimum age: 1.5\r\n Maximum age: 1.5\r\n */',"3.js":'// Create a list of pets.\r\nlet petsList = [\r\n    { name: "Barley", age: 8.3 },\r\n    { name: "Boots", age: 4.9 },\r\n    { name: "Whiskers", age: 1.5 },\r\n    { name: "Daisy", age: 4.3 }\r\n];\r\n\r\n// Group Pet objects by the Math.Floor of their age.\r\n// Then project an anonymous type from each group\r\n// that consists of the key, the count of the group\'s\r\n// elements, and the minimum and maximum age in the group.\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet.age,\r\n    (age, ages) => ({\r\n        key: age,\r\n        count: ages.count()\r\n    }));\r\n\r\n// Iterate over each anonymous type.\r\nfor (let result of query) {\r\n    console.log("\\nAge group: " + result.key);\r\n    console.log("Number of pets in this age group: " + result.count)\r\n}\r\n\r\n/*  This code produces the following output:\r\n\r\n Age group: 8\r\n Number of pets in this age group: 1\r\n\r\n Age group: 4\r\n Number of pets in this age group: 2\r\n\r\n Age group: 1\r\n Number of pets in this age group: 1\r\n */'}},55556:e=>{e.exports={"1.js":'let magnus = { name: "Hedlund, Magnus" };\r\nlet terry = { name: "Adams, Terry" };\r\nlet charlotte = { name: "Weiss, Charlotte" };\r\n\r\nlet barley = { name: "Barley", owner: terry };\r\nlet boots = { name: "Boots", owner: terry };\r\nlet whiskers = { name: "Whiskers", owner: charlotte };\r\nlet daisy = { name: "Daisy", owner: magnus };\r\n\r\nlet people = [ magnus, terry, charlotte ];\r\nlet pets = [ barley, boots, whiskers, daisy ];\r\n\r\n// Create a list where each element is an anonymous\r\n// type that contains a person\'s name and\r\n// a collection of names of the pets they own.\r\nlet query = people.asEnumerable().groupJoin(pets,\r\n    (person, petCollection) => ({\r\n        ownerName: person.name,\r\n        pets: petCollection.select(pet => pet.name)\r\n    }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    // Output the owner\'s name.\r\n    console.log(`${ obj.ownerName }:`);\r\n    // Output each of the owner\'s pet\'s names.\r\n    for (let pet of obj.pets) {\r\n        console.log(`  ${ pet }`);\r\n    }\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Hedlund, Magnus:\r\n   Daisy\r\n Adams, Terry:\r\n   Barley\r\n   Boots\r\n Weiss, Charlotte:\r\n   Whiskers\r\n */'}},31683:e=>{e.exports={"1.js":"let id1 = [ 44, 26, 92, 30, 71, 38 ];\r\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\r\n\r\nlet both = id1.asEnumerable().intersect(id2);\r\n\r\nfor (let id of both) {\r\n    console.log(id);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 26\r\n 30\r\n */","2.js":'// Custom comparer for distinct\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // Check whether the products\' properties are equal.\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet store1 = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 }\r\n];\r\nlet store2 = [\r\n    { name: "apple", code: 9 },\r\n    { name: "lemon", code: 12 }\r\n];\r\n\r\n// Get the products from the first array\r\n// that have duplicates in the second array.\r\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\r\n\r\nfor (let product of duplicates) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n apple 9\r\n */'}},63867:e=>{e.exports={"1.1.js":'let magnus = { name: "Hedlund, Magnus" };\r\nlet terry = { name: "Adams, Terry" };\r\nlet charlotte = { name: "Weiss, Charlotte" };\r\n\r\nlet barley = { name: "Barley", owner: terry };\r\nlet boots = { name: "Boots", owner: terry };\r\nlet whiskers = { name: "Whiskers", owner: charlotte };\r\nlet daisy = { name: "Daisy", owner: magnus };\r\n\r\nlet people = [ magnus, terry, charlotte ];\r\nlet pets = [ barley, boots, whiskers, daisy ];\r\n\r\n// Create a list of Person-Pet pairs where\r\n// each element is an anonymous type that contains a\r\n// Pet\'s name and the name of the Person that owns the Pet.\r\nlet query = people.asEnumerable().join(pets,\r\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Hedlund, Magnus - Daisy\r\n Adams, Terry - Barley\r\n Adams, Terry - Boots\r\n Weiss, Charlotte - Whiskers\r\n */'}},27065:e=>{e.exports={"1.js":"let longs = [ 4294967296, 466855135, 81125 ];\r\n\r\nlet max = longs.asEnumerable().max();\r\n\r\nconsole.log(`The largest number is ${ max }.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The largest number is 4294967296.\r\n */","2.js":'let pets = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 }\r\n];\r\n\r\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\r\n\r\nconsole.log(`The maximum pet age plus name length is ${ max }.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The maximum pet age plus name length is 14.\r\n */'}},81622:e=>{e.exports={"1.js":"let longs = [ 4294967296, 466855135, 81125 ];\r\n\r\nlet min = longs.asEnumerable().min();\r\n\r\nconsole.log(`The smallest number is ${ min }.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The smallest number is 81125.\r\n */","2.js":'let pets = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 }\r\n];\r\n\r\nlet min = pets.asEnumerable().min(pet => pet.age);\r\n\r\nconsole.log(`The youngest animal is age ${ min }.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The youngest animal is age 5.\r\n */'}},45849:e=>{e.exports={"1-2.1.19.js":'let fruits = ["Mango", "Orange", "Apple", 3.0, "Banana"];\r\n\r\n// Apply ofType() to the Array\r\nlet query1 = fruits.asEnumerable().ofType(String);\r\n\r\nconsole.log("Elements of type \'String\' are:");\r\nfor (let fruit of query1) {\r\n    console.log(fruit);\r\n}\r\n\r\n// The following query shows that the standard query operators such as\r\n// where() can be applied to the Array type after calling ofType().\r\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains("n", Enumerable.comparers.ignoreCase()));\r\n\r\nconsole.log("\\nThe following strings contain \'n\':");\r\nfor (let fruit of query2) {\r\n    console.log(fruit);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// Elements of type \'string\' are:\r\n// Mango\r\n// Orange\r\n// Apple\r\n// Banana\r\n//\r\n// The following strings contain \'n\':\r\n// Mango\r\n// Orange\r\n// Banana',"1.js":'let fruits = ["Mango", "Orange", "Apple", 3.0, "Banana"];\r\n\r\n// Apply ofType() to the Array\r\nlet query1 = fruits.asEnumerable().ofType(String);\r\n\r\nconsole.log("Elements of type \'String\' are:");\r\nfor (let fruit of query1) {\r\n    console.log(fruit);\r\n}\r\n\r\n// The following query shows that the standard query operators such as\r\n// where() can be applied to the Array type after calling ofType().\r\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains("n"));\r\n\r\nconsole.log("\\nThe following strings contain \'n\':");\r\nfor (let fruit of query2) {\r\n    console.log(fruit);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// Elements of type \'string\' are:\r\n// Mango\r\n// Orange\r\n// Apple\r\n// Banana\r\n//\r\n// The following strings contain \'n\':\r\n// Mango\r\n// Orange\r\n// Banana'}},93101:e=>{e.exports={"1.js":'let pets = [\r\n    { name: "Barley", age: 8 },\r\n    { name: "Boots", age: 4 },\r\n    { name: "Whiskers", age: 1 }\r\n];\r\n\r\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\r\n\r\nfor (let pet of query) {\r\n    console.log(`${ pet.name } - ${ pet.age }`);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Whiskers - 1\r\n Boots - 4\r\n Barley - 8\r\n*/'}},80098:e=>{e.exports={"1.js":"const specialComparer = (d1, d2) => {\r\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\r\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\r\n    if (f1 === f2) {\r\n        return d1 - d2;\r\n    } else if (f1 > f2) {\r\n        return 1;\r\n    } else {\r\n        return -1;\r\n    }\r\n};\r\n\r\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\r\n\r\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\r\n\r\nfor (let num of query) {\r\n    console.log(num);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 9.7\r\n 0.5\r\n 8.3\r\n 6.3\r\n 1.3\r\n 6.2\r\n*/"}},46805:e=>{e.exports={"1.js":"let squares = Enumerable.range(1, 10).select(x => x * x);\r\n\r\nfor (let num of squares) {\r\n    console.log(num);\r\n}\r\n/*\r\n This code produces the following output:\r\n\r\n 1\r\n 4\r\n 9\r\n 16\r\n 25\r\n 36\r\n 49\r\n 64\r\n 81\r\n 100\r\n*/","2.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\r\n\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n {"index":0,"str":""}\r\n {"index":1,"str":"b"}\r\n {"index":2,"str":"ma"}\r\n {"index":3,"str":"ora"}\r\n {"index":4,"str":"pass"}\r\n {"index":5,"str":"grape"}\r\n*/'}},16536:e=>{e.exports={"1.js":'let petOwners = [\r\n    { name: "Higa, Sidney", pets: [ "Scruffy", "Sam" ] },\r\n    { name: "Ashkenazi, Ronen", pets: [ "Walker", "Sugar" ] },\r\n    { name: "Price, Vernette", pets: [ "Scratches", "Diesel" ] }\r\n];\r\n\r\n// Query using selectMany().\r\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\r\n\r\nconsole.log("Using selectMany():");\r\n\r\n// Only one foreach loop is required to iterate\r\n// through the results since it is a\r\n// one-dimensional collection.\r\nfor (let pet of query1) {\r\n    console.log(pet);\r\n}\r\n\r\n// This code shows how to use select()\r\n// instead of selectMany().\r\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\r\n\r\nconsole.log("\\nUsing select():");\r\n\r\n// Notice that two foreach loops are required to\r\n// iterate through the results\r\n// because the query returns a collection of arrays.\r\nfor (let petList of query2) {\r\n    for (let pet of petList) {\r\n        console.log(pet);\r\n    }\r\n    console.log();\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Using selectMany():\r\n Scruffy\r\n Sam\r\n Walker\r\n Sugar\r\n Scratches\r\n Diesel\r\n\r\n Using select():\r\n Scruffy\r\n Sam\r\n\r\n Walker\r\n Sugar\r\n\r\n Scratches\r\n Diesel\r\n\r\n*/',"2.js":'let petOwners = [\r\n    { name: "Higa, Sidney", pets: [ "Scruffy", "Sam" ] },\r\n    { name: "Ashkenazi, Ronen", pets: [ "Walker", "Sugar" ] },\r\n    { name: "Price, Vernette", pets: [ "Scratches", "Diesel" ] },\r\n    { name: "Hines, Patrick", pets: [ "Dusty" ] }\r\n];\r\n\r\n// Project the items in the array by appending the index\r\n// of each PetOwner to each pet\'s name in that petOwner\'s\r\n// array of pets.\r\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\r\n        petOwner.pets.asEnumerable().select(pet => index + pet));\r\n\r\nfor (let pet of query) {\r\n    console.log(pet);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// 0Scruffy\r\n// 0Sam\r\n// 1Walker\r\n// 1Sugar\r\n// 2Scratches\r\n// 2Diesel\r\n// 3Dusty',"3.js":'let petOwners = [\r\n    { name: "Higa, Sidney", pets: [ "Scruffy", "Sam" ] },\r\n    { name: "Ashkenazi, Ronen", pets: [ "Walker", "Sugar" ] },\r\n    { name: "Price, Vernette", pets: [ "Scratches", "Diesel" ] },\r\n    { name: "Hines, Patrick", pets: [ "Dusty" ] }\r\n];\r\n\r\n// Project the pet owner\'s name and the pet\'s name.\r\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\r\n        .where(ownerAndPet => ownerAndPet.petName.startsWith("S"))\r\n        .select(ownerAndPet => ({\r\n            owner: ownerAndPet.petOwner.name,\r\n            pet: ownerAndPet.petName\r\n        }));\r\n\r\n// Print the results.\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// {"owner":"Higa","pet":"Scruffy"}\r\n// {"owner":"Higa","pet":"Sam"}\r\n// {"owner":"Ashkenazi","pet":"Sugar"}\r\n// {"owner":"Price","pet":"Scratches"}'}},42569:e=>{e.exports={"1.js":'let pet1 = { name: "Turbo", age: 2 };\r\nlet pet2 = { name: "Peanut", age: 8 };\r\n\r\n// Create two lists of pets.\r\nlet pets1 = [ pet1, pet2 ];\r\nlet pets2 = [ pet1, pet2 ];\r\n\r\nlet equal = pets1.asEnumerable().sequenceEqual(pets2);\r\n\r\nconsole.log(`The lists ${ equal ? "are" : "are not" } equal.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The lists are equal.\r\n*/',"2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和数目相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet storeA = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 }\r\n];\r\n\r\nlet storeB = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 }\r\n];\r\n\r\nlet equalAB = storeA.asEnumerable().sequenceEqual(storeB, productComparer);\r\n\r\nconsole.log("Equal? " + equalAB);\r\n\r\n/*\r\n    This code produces the following output:\r\n\r\n    Equal? True\r\n*/'}},3087:e=>{e.exports={"1.js":'let fruits1 = [ "orange" ];\r\n\r\nlet fruit1 = fruits1.asEnumerable().single();\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n orange\r\n*/',"2.js":'let fruits2 = [ "orange", "apple" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits2.asEnumerable().single();\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log("The collection does not contain exactly one element.");\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The collection does not contain exactly one element.\r\n*/\r\n',"3.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet fruit1 = fruits.asEnumerable().single(fruit => fruit.length > 10);\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n passionfruit\r\n*/',"4.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits.asEnumerable().single(fruit => fruit.length > 15);\r\n\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log("The collection does not contain exactly one element whose length is greater than 15.");\r\n}\r\n\r\n// This code produces the following output:\r\n//\r\n// The collection does not contain exactly one element whose length is greater than 15.'}},9249:e=>{e.exports={"1.js":'let fruits1 = [ "orange" ];\r\n\r\nlet fruit1 = fruits1.asEnumerable().singleOrDefault("No such string!");\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n orange\r\n*/',"2.js":'let fruits2 = [];\r\n\r\nlet fruit2 = fruits2.asEnumerable().singleOrDefault("No such string!");\r\n\r\nconsole.log(fruit2);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n No such string!\r\n*/',"3.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet fruit1 = fruits.asEnumerable().singleOrDefault("No such string!", fruit => fruit.length > 10);\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n passionfruit\r\n*/',"4.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet fruit2 = fruits.asEnumerable().singleOrDefault("No such string!", fruit => fruit.length > 15);\r\n\r\nconsole.log(fruit2);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n No such string!\r\n*/'}},3961:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet lowerGrades = grades.asEnumerable().orderByDescending(g => g).skip(3);\r\n\r\nconsole.log("All grades except the top three are:");\r\nfor (let grade of lowerGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n All grades except the top three are:\r\n 82\r\n 70\r\n 59\r\n 56\r\n*/'}},28613:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet lowerGrades = grades.asEnumerable().orderByDescending().skipWhile(grade => grade >= 80);\r\n\r\nconsole.log("All grades below 80:");\r\nfor (let grade of lowerGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n All grades below 80:\r\n 70\r\n 59\r\n 56\r\n*/',"2.js":"let amounts = [ 5000, 2500, 9000, 8000, 6500, 4000, 1500, 5500 ];\r\n\r\nlet query = amounts.asEnumerable().skipWhile((amount, index) => amount > index * 1000);\r\n\r\nfor (let amount of query) {\r\n    console.log(amount);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 4000\r\n 1500\r\n 5500\r\n*/"}},78846:e=>{e.exports={"1.js":"let numbers = [ 43.68, 1.25, 583.7, 6.5 ];\r\n\r\nlet sum = numbers.asEnumerable().sum();\r\n\r\nconsole.log(`The sum of the numbers is ${ sum }.`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The sum of the numbers is 635.13.\r\n*/","2.js":'let packages = [\r\n    { company: "Coho Vineyard", weight: 25.2 },\r\n    { company: "Lucerne Publishing", weight: 18.7 },\r\n    { company: "Wingtip Toys", weight: 6.0 },\r\n    { company: "Adventure Works", weight: 33.9 }\r\n];\r\n\r\nlet totalWeight = packages.asEnumerable().sum(pkg => pkg.weight);\r\n\r\nconsole.log(`The total weight of the packages is: ${ totalWeight }`);\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The total weight of the packages is: 83.8\r\n*/'}},84570:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet topThreeGrades = grades.asEnumerable().orderByDescending().take(3);\r\n\r\nconsole.log("The top three grades are:");\r\nfor (let grade of topThreeGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n The top three grades are:\r\n 98\r\n 92\r\n 85\r\n*/'}},55190:e=>{e.exports={"1.js":'let fruits = [ "apple", "banana", "mango", "orange", "passionfruit", "grape" ];\r\n\r\nlet query = fruits.asEnumerable().takeWhile(fruit => "orange" !== fruit);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n apple\r\n banana\r\n mango\r\n*/',"2.js":'let fruits = [ "apple", "passionfruit", "banana", "mango", "orange", "blueberry", "grape", "strawberry" ];\r\n\r\nlet query = fruits.asEnumerable().takeWhile((fruit, index) => fruit.length >= index);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n apple\r\n passionfruit\r\n banana\r\n mango\r\n orange\r\n blueberry\r\n*/'}},87941:e=>{e.exports={"1.js":"let ints1 = [ 5, 3, 9, 7, 5, 9, 3, 7 ];\r\nlet ints2 = [ 8, 3, 6, 4, 4, 9, 1, 0 ];\r\n\r\nlet union = ints1.asEnumerable().union(ints2);\r\n\r\nfor (let num of union) {\r\n    console.log(num);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 5\r\n 3\r\n 9\r\n 7\r\n 8\r\n 6\r\n 4\r\n 1\r\n 0\r\n*/","2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和编号相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet store1 = [\r\n    { name: "apple", code: 9 },\r\n    { name: "orange", code: 4 }\r\n];\r\n\r\nlet store2 = [\r\n    { name: "apple", code: 9 },\r\n    { name: "lemon", code: 12 }\r\n];\r\n\r\n//Get the products from the both arrays\r\n//excluding duplicates.\r\nlet union = store1.asEnumerable().union(store2, productComparer);\r\n\r\nfor (let product of union) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n    This code produces the following output:\r\n\r\n    apple 9\r\n    orange 4\r\n    lemon 12\r\n*/'}},47067:e=>{e.exports={"1.js":'let fruits = [ "apple", "passionfruit", "banana", "mango", "orange", "blueberry", "grape", "strawberry" ];\r\n\r\nlet query = fruits.asEnumerable().where(fruit => fruit.length < 6);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n/*\r\n This code produces the following output:\r\n\r\n apple\r\n mango\r\n grape\r\n*/',"2.js":"let numbers = [ 0, 30, 20, 15, 90, 85, 40, 75 ];\r\n\r\nlet query = numbers.asEnumerable().where((number, index) => number <= index * 10);\r\n\r\nfor (let number of query) {\r\n    console.log(number);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n 0\r\n 20\r\n 15\r\n 40\r\n*/"}},33808:e=>{e.exports={"1.js":'let numbers = [ 1, 2, 3, 4 ];\r\nlet words = [ "one", "two", "three" ];\r\n\r\nlet numbersAndWords = numbers.asEnumerable().zip(words, (first, second) => first + " " + second);\r\n\r\nfor (let item of numbersAndWords) {\r\n    console.log(item);\r\n}\r\n\r\n// This code produces the following output:\r\n\r\n// 1 one\r\n// 2 two\r\n// 3 three'}},14285:e=>{e.exports={"config.as.js":"Enumerable.config.as = 'em';\r\nlet enumerable = [1, 2, 3].em();","config.extends.js":"Enumerable.config.extends.array = true; //Open extends for Array. After open this, Array will have all the features of LINQ and you can use methods of LINQ for Array. (Suggest)\r\nEnumerable.config.extends.string = true; //Open extends for String. After open this, String will have all the features of LINQ and you can use methods of LINQ for String.(Not suggest)\r\nEnumerable.config.extends.object = true; //Open extends for Object. After open this, each object will have all the features of LINQ and you can use methods of LINQ for every object.(Not suggest)"}},80846:e=>{e.exports={"asEnumerable.js":"let a = [1, 2, 3].asEnumerable();\r\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\r\nlet s = 'abc'.asEnumerable();","Enumerable.asEnumerable.js":"let enumerable = Enumerable.asEnumerable([1, 2, 3]);","Enumerable.js":"let enumerable = Enumerable([1, 2, 3]);"}},67632:e=>{e.exports={"1.js":'let pets = [\r\n    { name: "Barley", props: { age: 10, weight: 59 } },\r\n    { name: "Boots", props: { age: 14, weight: 50 } },\r\n    { name: "Whiskers", props: { age: 6, weight: 36 } }\r\n];\r\n\r\npets.asEnumerable().select("name");\r\n//the above code and the following code are same feature.\r\npets.asEnumerable().select(pet => pet.name);',"1.try.js":'let pets = [\r\n    { name: "Barley", props: { age: 10, weight: 59 } },\r\n    { name: "Boots", props: { age: 14, weight: 50 } },\r\n    { name: "Whiskers", props: { age: 6, weight: 36 } }\r\n];\r\n\r\nconsole.log(pets.asEnumerable().select("name"));\r\n//the above code and the following code are same feature.\r\nconsole.log(pets.asEnumerable().select(pet => pet.name));',"2.js":"let arrays = [\r\n    [ 1, 2, 4, 8 ],\r\n    [ 1, 3, 9 ],\r\n    [ 1, 5 ]\r\n];\r\n\r\narrays.asEnumerable().select(1);\r\n//the above code and the following code are same feature.\r\narrays.asEnumerable().select(array => array[1]);"}},79741:e=>{e.exports={"1.js":'let pets = [ { name: "Barley", age: 8, vaccinated: true }, { name: "Boots", age: 4, vaccinated: false }, { name: "Whiskers", age: 1, vaccinated: false } ];\r\n\r\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\r\n\r\nconsole.log(`There ${ unvaccinated ? "are" : "are not any" } unvaccinated animals over age one.`);\r\n\r\n// This code produces the following output:\r\n//\r\n//  There are unvaccinated animals over age one.',"2.js":'let magnus = { name: "Hedlund, Magnus" }, terry = { name: "Adams, Terry" }, charlotte = { name: "Weiss, Charlotte" };\r\nlet barley = { name: "Barley", owner: terry }, boots = { name: "Boots", owner: terry }, whiskers = { name: "Whiskers", owner: charlotte }, daisy = { name: "Daisy", owner: magnus };\r\nlet people = [ magnus, terry, charlotte ];\r\nlet pets = [ barley, boots, whiskers, daisy ];\r\n\r\nlet query = people.asEnumerable().join(pets,\r\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\r\n}\r\n\r\n/*\r\n This code produces the following output:\r\n\r\n Hedlund, Magnus - Daisy\r\n Adams, Terry - Barley\r\n Adams, Terry - Boots\r\n Weiss, Charlotte - Whiskers\r\n */'}},80925:e=>{e.exports={title:"Action",contents:[{title:"What's the Action",descriptions:[{content:"Action is a function which is only execute some calculation for the parameters"},{content:"The Action function accept one parameter, or accept another parameter which is the index of the first parameter in the enumerable as the second parameter, then execute some calculation but return nothing"},{}]}]}},26854:e=>{e.exports={title:"Comparer"}},38471:e=>{e.exports={title:"Configuration"}},53226:e=>{e.exports={title:"Get IEnumerable instance",contents:[{title:"Use constructor of Enumerable class",descriptions:[{content:"You can use constructor of Enumerable class for get an IEnumerable object"}]},{title:"Use Enumerable.asEnumerable method"},{title:"Use asEnumerable method",descriptions:[{content:"After require linq-js, asEnumerable method war included by any object, you can use asEnumerable of any object for get an IEnumerable object"}]}]}},32948:e=>{e.exports={title:"Predicate"}},33193:e=>{e.exports={title:"Selector",contents:[{title:"What's the Selector",descriptions:[{content:"The Selector is a function which mapping an input value to an output value."},{content:"The function accept one or more arguments, sometimes, it also accept index of the collection as argument."}]},{title:"Unary Selector"},{title:"Binary Selector"},{title:"Use string/number/symbol value to replace the Selector",descriptions:[{content:"You can use a string or a number or a symbol value to replace an Unary Selector, the examples following will show you how to use string or number value to replace the Selector"}]}]}},63996:e=>{e.exports={title:"Start use"}},31836:e=>{e.exports={title:"Install",contents:[{title:"Add to project"},{title:"Require",details:[{remarks:["description:This module require ES6. I suggest you to use this with ES6. The following examples is already use ES6."]}]}]}},27775:e=>{e.exports={title:"Introduction",contents:["use linq and lambda in javascript for es6","&nbsp;","","Since 2.1.0, I rewrite all to use new features of ES6. The performance be better, memory is used less and using deferred execution.","&nbsp;","My English is poor!"]}},81326:e=>{e.exports={name:"English"}},60240:e=>{e.exports={author:"散漫的水元素",emails:["491029934@qq.com","wm123450405@hotmail.com"],projects:[{name:"github",href:"https://github.com/wm123450405/linqjs"},{name:"oschina",href:"http://git.oschina.net/wm123450405/linqjs"}],publishs:[{name:"node",href:"https://www.npmjs.com/package/linq-js"}]}},51769:e=>{e.exports={type:"class",since:"2.1.22",extends:["ITree"],name:"BinaryTree",properties:[{name:"left",historys:[{since:"2.1.22",deprecated:0,description:"此节点的左子树",readonly:!0}]},{name:"right",historys:[{since:"2.1.22",deprecated:0,description:"此节点的右子树",readonly:!0}]}],methods:[{name:"hasLeft",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"获取一个节点是否存在左子树",parameters:[]}]}]},{name:"hasRight",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"获取一个节点是否存在右子树",parameters:[]}]}]},{name:"inOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"对树形结构进行中序遍历,得到此树形结构按照中序遍历后的新序列",parameters:[]}]}]},{name:"postOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"对树形结构进行后序遍历,得到此树形结构按照后序遍历后的新序列",parameters:[]}]}]},{name:"preOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"对树形结构进行前序遍历,得到此树形结构按照前序遍历后的新序列",parameters:[]}]}]}]}},33798:e=>{e.exports={type:"class",since:"2.1.22",extends:["ITree"]}},48880:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否有左子树"]},description:"获取一个节点是否存在左子树",sees:[]}]}]}},75815:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否有右子树"]},description:"获取一个节点是否存在右子树",sees:[]}]}]}},53707:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["按照中序遍历得到的新序列"]},description:"对树形结构进行中序遍历,得到此树形结构按照中序遍历后的新序列",remarks:["此方法通过延迟执行的方式实现"],sees:[]}]}]}},75921:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["按照后序遍历得到的新序列"]},description:"对树形结构进行后序遍历,得到此树形结构按照后序遍历后的新序列",remarks:["此方法通过延迟执行的方式实现"],sees:[]}]}]}},4383:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["按照前序遍历得到的新序列"]},description:"对树形结构进行前序遍历,得到此树形结构按照前序遍历后的新序列",remarks:["此方法通过延迟执行的方式实现"],sees:[]}]}]}},45783:e=>{e.exports={historys:[{type:"any",since:"2.1.22",readonly:!0,description:"此节点的左子树"}]}},71485:e=>{e.exports={historys:[{type:"any",since:"2.1.22",readonly:!0,description:"此节点的右子树"}]}},66903:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:["IMapEnumerable"],name:"Directory",properties:[],methods:[{name:"delete",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"通过指定的相等比较器从 Directory 中移除指定的键",parameters:[{name:"key"},{name:"comparer"}]}]}]},{name:"get",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"通过指定的相等比较器查找指定键对应的值",parameters:[{name:"key"},{name:"comparer"}]}]}]},{name:"has",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"通过指定的相等比较器判断 Directory 中是否包含指定的键",parameters:[{name:"key"},{name:"comparer"}]}]}]},{name:"set",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"通过指定的相等比较器为指定键设置对应的值",parameters:[{name:"key"},{name:"value"},{name:"comparer"}]}]}]}]}},77924:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:["IMapEnumerable"]}},72468:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"boolean",descriptions:["返回是否包含指定的键"]},description:"通过指定的相等比较器从 Directory 中移除指定的键",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},13402:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"any",descriptions:["键所对应的值"]},description:"通过指定的相等比较器查找指定键对应的值",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},24291:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"boolean",descriptions:["返回是否包含指定的键"]},description:"通过指定的相等比较器判断 Directory 中是否包含指定的键",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},64918:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"value",types:["any"],descriptions:["要设置的值"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"any",descriptions:["返回 Directory 对象本身"]},description:"通过指定的相等比较器为指定键设置对应的值",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},26781:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[],name:"Entry",properties:[{name:"key",historys:[{since:"2.1.15",deprecated:0,description:"此entry的key"}]},{name:"value",historys:[{since:"2.1.15",deprecated:0,description:"此entry的value"}]}],methods:[]}},22950:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[]}},59720:e=>{e.exports={historys:[{type:"any",since:"2.1.15",description:"此entry的key"}]}},15686:e=>{e.exports={historys:[{type:"any",since:"2.1.15",description:"此entry的value"}]}},49751:e=>{e.exports={type:"object",since:"2.1.15",name:"Enumerable.actions",properties:[{name:"default",historys:[{since:"2.1.15",deprecated:0,description:"默认的执行器",readonly:!0}]}],methods:[]}},29744:e=>{e.exports={type:"object",since:"2.1.15"}},46353:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的执行器",remarks:["该执行器接受一个元素和该元素所在序列的索引作为参数, 但是不做任何处理, 通常表示为 defaultAction"],sees:[{guide:"action"}]}]}},24750:e=>{e.exports={type:"object",since:"2.1.15",name:"Enumerable.comparers",properties:[{name:"default",historys:[{since:"2.1.15",deprecated:0,description:"默认的大小比较器",readonly:!0}]},{name:"equality",historys:[{since:"2.1.15",deprecated:0,description:"默认的相等比较器",readonly:!0}]},{name:"same",historys:[{since:"2.1.15",deprecated:0,description:"默认的相同比较器",readonly:!0}]},{name:"strict",historys:[{since:"2.1.15",deprecated:0,description:"默认的全等比较器",readonly:!0}]}],methods:[{name:"array",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"获取一个大小比较器",parameters:[{name:"array"},{name:"last"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个大小比较器",parameters:[{name:"array"},{name:"last"},{name:"comparer"}]}]}]},{name:"greater",historys:[{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"通过一个大于判断函数与一个相等比较器生成一个大小比较器",parameters:[{name:"greaterThen"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"通过一个大于判断函数与一个相等比较器生成一个大小比较器",parameters:[{name:"greaterThen"},{name:"comparer"}]}]}]},{name:"ignoreCase",historys:[{since:"2.1.18",deprecated:"2.1.18",overloads:[{description:"通过一个键选择器生成一个忽略大小写的相等比较器",parameters:[{name:"selector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"通过一个键选择器生成一个忽略大小写的相等比较器",parameters:[{name:"selector"}]}]}]},{name:"less",historys:[{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"通过一个小于判断函数与一个相等比较器生成一个大小比较器",parameters:[{name:"lessThen"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"通过一个小于判断函数与一个相等比较器生成一个大小比较器",parameters:[{name:"lessThen"},{name:"comparer"}]}]}]},{name:"predicate",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"获取一个大小比较器",parameters:[{name:"predicateArray"},{name:"last"}]}]}]}]}},17215:e=>{e.exports={type:"object",since:"2.1.15"}},40202:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"array",types:["array"]},{name:"last",types:["boolean"],defaultValue:"false"},{name:"comparer",types:["function","string"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},description:"获取一个大小比较器",remarks:["返回一个大小比较器函数, 该比较器按照指定的 array 值的循序(作为从小到大的方式)判别待比较的元素"],sees:[{guide:"comparer"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{},{types:["function","string","symbol","number"]}]}]}]}},3832:e=>{e.exports={historys:[{since:"2.1.17",overloads:[{parameters:[{name:"greaterThen",types:["function"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},description:"通过一个大于判断函数与一个相等比较器生成一个大小比较器",remarks:["返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 greaterThen 函数后返回 true 时该函数返回 1 表示传入的第一个参数值大于第二个参数值, 否则返回 -1 表示传入的第一个参数值小于第二个参数值"],sees:[{apis:"Enumerable.comparers",method:"less"},{guide:"comparer"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},21295:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{parameters:[{name:"selector",types:["function","string"],defaultValue:"defaultSelector",declare:{returns:{type:"string"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["string"]},{name:"other",types:["string"]}]}},description:"通过一个键选择器生成一个忽略大小写的相等比较器",sees:[{guide:"comparer"},{apis:"Enumerable.selectors",property:"default"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},17154:e=>{e.exports={historys:[{since:"2.1.17",overloads:[{parameters:[{name:"lessThen",types:["function"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},description:"通过一个小于判断函数与一个相等比较器生成一个大小比较器",remarks:["返回一个大小比较器函数, 该函数两个参数在调用 comparer 后返回 true 时该函数返回 0 表示两个参数值相等, 否则在调用 lessThen 函数后返回 true 时该函数返回 -1 表示传入的第一个参数值小于第二个参数值, 否则返回 1 表示传入的第一个参数值大于第二个参数值"],sees:[{apis:"Enumerable.comparers",method:"greater"},{guide:"comparer"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},74913:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicateArray",types:["array"]},{name:"last",types:["boolean"],defaultValue:"false"}],returns:{type:"function",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},description:"获取一个大小比较器",remarks:["返回一个大小比较器函数, 该比较器按照指定的 predicateArray 中的函数的匹配循序(作为从小到大的方式)判别待比较的元素"],sees:[{guide:"comparer"}]}]}]}},87645:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的大小比较器",remarks:["该比较器是一个大小比较器, 它接受两个用于比较的元素作为参数, 返回一个number表示大小, 通常表示为 defaultComparer","如果返回值大于0, 则表示第一个参数大于第二个参数. 如果返回值小于0, 则表示第一个参数小于第二个参数. 如果返回值等于0, 则表示两个参数相等"],sees:[{guide:"comparer"}]}]}},63091:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的相等比较器",remarks:["defaultEqualityComparer"],sees:[{guide:"comparer"}]}]}},46162:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的相同比较器",remarks:["defaultSameComparer"],sees:[{guide:"comparer"}]}]}},58251:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的全等比较器",remarks:["defaultStrictEqualityComparer"],sees:[{guide:"comparer"}]}]}},37557:e=>{e.exports={type:"object",since:"2.1.15",name:"Enumerable.config",properties:[{name:"as",historys:[{since:"2.1.15",deprecated:0,description:"设置 asEnumerable 方法的别名",default:"asEnumerable"}]},{name:"extends.array",historys:[{since:"2.1.15",deprecated:0,description:"开启或关闭对原生 Array 对象的扩展",default:!1}]},{name:"extends.lazy",historys:[{since:"2.1.18",deprecated:0,description:"开启或关闭调用原生对象的原生方法时使用延迟执行功能",default:!1}]},{name:"extends.object",historys:[{since:"2.1.15",deprecated:0,description:"开启或关闭对原生 Object 对象的扩展",default:!1}]},{name:"extends.string",historys:[{since:"2.1.15",deprecated:0,description:"开启或关闭对原生 String 对象的扩展",default:!1}]}],methods:[]}},43735:e=>{e.exports={type:"object",since:"2.1.15"}},47853:e=>{e.exports={historys:[{type:"string",since:"2.1.15",description:"设置 asEnumerable 方法的别名",default:"asEnumerable",remarks:["为所有对象的 asEnumerable 方法设置一个别名"],warnings:["设置此别名后 asEnumerable 方法依然有效"]}]}},52494:e=>{e.exports={historys:[{type:"boolean",since:"2.1.15",description:"开启或关闭对原生 Array 对象的扩展",default:!1,sees:[{guide:"extend"}]}]}},14063:e=>{e.exports={historys:[{type:"boolean",since:"2.1.18",description:"开启或关闭调用原生对象的原生方法时使用延迟执行功能",default:!1,sees:[{guide:"extend"}]}]}},29606:e=>{e.exports={historys:[{type:"boolean",since:"2.1.15",description:"开启或关闭对原生 Object 对象的扩展",default:!1,sees:[{guide:"extend"}]}]}},43148:e=>{e.exports={historys:[{type:"boolean",since:"2.1.15",description:"开启或关闭对原生 String 对象的扩展",default:!1,sees:[{guide:"extend"}]}]}},82001:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[],constructors:{historys:[{since:"2.1.15",overloads:[{parameters:[{name:"source",types:["any"]}],returns:{type:"IEnumerable"},newInstance:"cannot",description:"通过指定的 source 创建一个 IEnumerable 对象",sees:[{apis:"Enumerable",method:"asEnumerable"}]}]}]},name:"Enumerable",properties:[{name:"actions",historys:[{since:"2.1.15",deprecated:0,static:!0,description:"一个包含了一些常用执行器的对象",readonly:!0}]},{name:"comparers",historys:[{since:"2.1.15",deprecated:0,static:!0,description:"一个包含了一些常用比较器的对象",readonly:!0}]},{name:"config",historys:[{since:"2.1.15",deprecated:0,static:!0,description:"全局配置",readonly:!0}]},{name:"predicates",historys:[{since:"2.1.15",deprecated:0,static:!0,description:"一个包含了一些常用筛选器的对象",readonly:!0}]},{name:"selectors",historys:[{since:"2.1.15",deprecated:0,static:!0,description:"一个包含了一些常用选择器的对象",readonly:!0}]},{name:"version",historys:[{since:"2.2.0",deprecated:0,static:!0,description:"获取当前库的版本号",readonly:!0}]}],methods:[{name:"asEnumerable",historys:[{since:"2.1.15",deprecated:"2.1.19",overloads:[{static:!0,description:"通过指定的 source 创建一个 IEnumerable 对象",parameters:[{name:"source"}]}]},{since:"2.1.20",deprecated:"2.1.21",overloads:[{static:!0,description:"通过指定的 source 创建一个 IEnumerable 对象",parameters:[{name:"source"}]}]},{since:"2.1.22",deprecated:0,overloads:[{static:!0,description:"通过指定的 source 创建一个 IEnumerable 对象",parameters:[{name:"source"}]},{static:!0,description:"将一个对象通过子节点选择器与值选择器转化为一个树形结构",parameters:[{name:"childrenSelector"},{name:"valueSelector"}]}]}]},{name:"between",historys:[{since:"2.1.20",deprecated:0,overloads:[{static:!0,description:"生成指定范围内的整数序列",parameters:[{name:"start"},{name:"end"},{name:"step"}]}]}]},{name:"empty",historys:[{since:"2.1.15",deprecated:0,overloads:[{static:!0,description:"生成一个空序列",parameters:[]}]}]},{name:"from",historys:[{since:"2.1.20",deprecated:0,overloads:[{static:!0,description:"通过指定的 source 创建一个 IEnumerable 对象",parameters:[{name:"source"}]}]}]},{name:"generate",historys:[{since:"2.1.20",deprecated:0,overloads:[{static:!0,description:"将使用生成器生成一个序列",parameters:[{name:"generate"},{name:"count"}]}]}]},{name:"noConflict",historys:[{since:"2.1.19",deprecated:0,overloads:[{static:!0,description:"释放当前的全局 Enumerable 对象, 解决冲突",parameters:[{name:"callback"}]}]}]},{name:"range",historys:[{since:"2.1.15",deprecated:"2.1.19",overloads:[{static:!0,description:"生成指定范围内的整数序列",parameters:[{name:"start"},{name:"count"}]}]},{since:"2.1.20",deprecated:0,overloads:[{static:!0,description:"生成指定范围内的整数序列",parameters:[{name:"start"},{name:"count"},{name:"step"}]}]}]},{name:"repeat",historys:[{since:"2.1.15",deprecated:0,overloads:[{static:!0,description:"将生成一个序列, 其中包含指定数量个重复的值",parameters:[{name:"element"},{name:"count"}]}]}]}]}},6493:e=>{e.exports={type:"object",since:"2.1.15",name:"Enumerable.predicates",properties:[{name:"default",historys:[{since:"2.1.15",deprecated:0,description:"默认的筛选器",readonly:!0}]},{name:"exists",historys:[{since:"2.1.15",deprecated:0,description:"非空筛选器",readonly:!0}]}],methods:[{name:"equality",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"获取一个相等筛选器",parameters:[{name:"value"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个相等筛选器",parameters:[{name:"value"},{name:"comparer"}]}]}]},{name:"not",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"获取一个否定筛选器",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"获取一个否定筛选器",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个否定筛选器",parameters:[{name:"predicate"}]}]}]},{name:"properties",historys:[{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"获取一个属性筛选器",parameters:[{name:"properties"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个属性筛选器",parameters:[{name:"properties"},{name:"comparer"}]}]}]},{name:"regexp",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"获取一个正则筛选器",parameters:[{name:"regexp"},{name:"keySelector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个正则筛选器",parameters:[{name:"regexp"},{name:"keySelector"}]}]}]},{name:"same",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"获取一个相同筛选器",parameters:[{name:"value"}]}]}]},{name:"selector",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"获取一个映射筛选器",parameters:[{name:"selector"},{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"获取一个映射筛选器",parameters:[{name:"selector"},{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取一个映射筛选器",parameters:[{name:"selector"},{name:"predicate"}]}]}]},{name:"strict",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"获取一个全等筛选器",parameters:[{name:"value"}]}]}]}]}},69724:e=>{e.exports={type:"object",since:"2.1.15"}},71910:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"value",types:["any"]},{name:"comparer",types:["function","string"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}},description:"获取一个相等筛选器",remarks:["返回一个筛选器函数, 通过指定的相等比较器比较参数是否与指定的值相等"],sees:[{guide:"predicate"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},57546:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],defaultValue:"defaultExistsPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},description:"获取一个否定筛选器",remarks:["返回一个筛选器函数, 如果 predicate 返回 true, 这该函数返回 false, 反之亦然"],sees:[{guide:"predicate"},{apis:"Enumerable.predicates",property:"exists"}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},31681:e=>{e.exports={historys:[{since:"2.1.17",overloads:[{parameters:[{name:"properties",types:["object","array"]},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},description:"获取一个属性筛选器",remarks:["返回一个筛选器函数, 该筛选器通过深度对比 properties 所描述的键值对关系来判断传入参数是否符合条件"],sees:[{guide:"predicate"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},52161:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"regexp",types:["RegExp"]},{name:"keySelector",types:["function","string"],defaultValue:"defaultSelector",declare:{returns:{type:"string"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},description:"获取一个正则筛选器",remarks:["返回一个筛选器函数, 比较通过指定的 selector 映射传入的参数值后的值是否与匹配指定的正则表达式"],sees:[{guide:"predicate"},{apis:"Enumerable.selectors",property:"default"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},55570:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"value",types:["any"]}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}},description:"获取一个相同筛选器",remarks:["返回一个筛选器函数, 比较参数是否与指定的值相同"],sees:[{guide:"predicate"},{apis:"Enumerable.comparers",property:"same"}]}]}]}},29670:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"selector",types:["function","string"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"predicate",types:["function","string"],defaultValue:"defaultExistsPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},description:"获取一个映射筛选器",remarks:["返回一个筛选器函数, 该筛选器通过判断由 selector 映射传入的参数值后的值是否符合指定的 predicate 条件"],sees:[{guide:"predicate"},{apis:"Enumerable.predicates",property:"exists"}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{},{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number","array","object"]}]}]}]}},56180:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"value",types:["any"]}],returns:{type:"function",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}},description:"获取一个全等筛选器",remarks:["返回一个筛选器函数, 比较参数是否与指定的值全等"],sees:[{guide:"predicate"},{apis:"Enumerable.comparers",property:"strict"}]}]}]}},50988:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的筛选器",remarks:["该筛选器接受一个元素和该元素所在序列的索引作为参数, 在任何时候都返回 true, 表示满足条件, 通常表示为 defaultPredicate"],sees:[{guide:"predicate"}]}]}},31068:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"非空筛选器",remarks:["该筛选器接受一个元素和该元素所在序列的索引作为参数, 在参数值不为空( undefined, null )的时候返回 true, 表示满足条件, 通常表示为 defaultExistsPredicate"],sees:[{guide:"predicate"}]}]}},67882:e=>{e.exports={type:"object",since:"2.1.15",name:"Enumerable.selectors",properties:[{name:"children",historys:[{since:"2.1.20",deprecated:0,description:"默认的子节点集选择器",readonly:!0}]},{name:"default",historys:[{since:"2.1.15",deprecated:0,description:"默认的选择器",readonly:!0}]},{name:"join",historys:[{since:"2.1.19",deprecated:0,description:"默认的联接选择器",readonly:!0}]},{name:"key",historys:[{since:"2.1.15",deprecated:0,description:"默认的键选择器",readonly:!0}]},{name:"parent",historys:[{since:"2.1.20",deprecated:0,description:"默认的父节点键选择器",readonly:!0}]},{name:"result",historys:[{since:"2.1.15",deprecated:0,description:"默认的结果选择器",readonly:!0}]},{name:"value",historys:[{since:"2.1.15",deprecated:0,description:"默认的值选择器",readonly:!0}]}],methods:[{name:"property",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"获取一个属性选择器",parameters:[{name:"property"}]}]},{since:"2.1.19",deprecated:"2.1.22",overloads:[{description:"获取一个属性选择器",parameters:[{name:"property"}]}]},{since:"2.1.23",deprecated:0,overloads:[{description:"获取一个属性选择器",parameters:[{name:"property"},{name:"ignoreInvalid"}]}]}]}]}},66194:e=>{e.exports={type:"object",since:"2.1.15"}},22350:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"property",types:["string"]}],returns:{type:"function",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}},description:"获取一个属性选择器",remarks:["返回一个一元选择器函数, 该选择器返回输入对象的指定属性值"],sees:[{guide:"selector"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["string","symbol","number"]}]}]},{since:"2.1.23",ref:!0,overloads:[{parameters:[{},{name:"ignoreInvalid",types:["boolean"],defaultValue:"false",descriptions:["是否忽略错误的属性参数. 设置为忽略后设置错误的属性将不会抛出异常"]}]}]}]}},61979:e=>{e.exports={historys:[{type:"function",since:"2.1.20",readonly:!0,description:"默认的子节点集选择器",remarks:["该选择器是一个一元选择器, 它接受一个输入值, 如果输入值包含 children 属性, 将返回输入值的 children 属性值, 否则返回输入的值本身. 通常表示为 defaultChildrenSelector"],sees:[{guide:"selector"}]}]}},23444:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的选择器",remarks:["该选择器是一个一元选择器, 它接受一个输入值, 并返回输入的值本身. 通常表示为 defaultSelector"],sees:[{guide:"selector"}]}]}},35495:e=>{e.exports={historys:[{type:"function",since:"2.1.19",readonly:!0,description:"默认的联接选择器",remarks:["该选择器是一个二元选择器, 它接受两个输入值, 返回一个对象, 该对象的 outer 属性对应第一个参数值, inner 属性对应第二个参数值"],sees:[{guide:"selector"}]}]}},75347:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的键选择器",remarks:["该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 key 属性值, 否则返回输入的值本身. 通常表示为 defaultKeySelector"],sees:[{guide:"selector"}]}]}},65121:e=>{e.exports={historys:[{type:"function",since:"2.1.20",readonly:!0,description:"默认的父节点键选择器",remarks:["该选择器是一个一元选择器, 它接受一个输入值, 返回输入值的 parent 属性值. 通常表示为 defaultParentSelector"],sees:[{guide:"selector"}]}]}},15910:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的结果选择器",remarks:["该选择器是一个二元选择器, 它接受两个输入值, 并返回第二个参数值. 通常表示为 defaultResultSelector","通常情况下, 此函数的第一个参数为源序列的元素, 第二个参数为需要与第一个序列关联操作的第二个序列的元素或者是一个通过计算得来的与第一个参数有一定联系的数值"],sees:[{guide:"selector"}]}]}},31085:e=>{e.exports={historys:[{type:"function",since:"2.1.15",readonly:!0,description:"默认的值选择器",remarks:["该选择器是一个一元选择器, 它接受一个输入值, 如果输入值为 key-value 类型结构的数据, 将返回输入值的 value 属性值, 否则返回输入的值本身. 通常表示为 defaultValueSelector"],sees:[{guide:"selector"}]}]}},47357:e=>{e.exports={type:"object",since:"2.1.23",name:"Enumerable.setters",properties:[{name:"children",historys:[{since:"2.1.20",deprecated:0,description:"默认的子节点选择器",readonly:!0}]},{name:"value",historys:[{since:"2.1.23",deprecated:0,description:"默认的值设置器",readonly:!0}]}],methods:[{name:"property",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"获取一个属性设置器",parameters:[{name:"property"},{name:"ignoreInvalid"}]}]}]}]}},51226:e=>{e.exports={type:"object",since:"2.1.23"}},74867:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"property",types:["string","symbol","number"]},{name:"ignoreInvalid",types:["boolean"],defaultValue:"false",descriptions:["是否忽略错误的属性参数. 设置为忽略后设置错误的属性将不会抛出异常"]}],returns:{type:"function",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"value",types:["any"]}]}},description:"获取一个属性设置器",remarks:["返回一个设置器函数, 该设置器使用第二个输入值设置第一个输入值的指定属性值"],sees:[{guide:"setter"}]}]}]}},788:e=>{e.exports={historys:[{type:"function",since:"2.1.20",readonly:!0,description:"默认的子节点选择器",remarks:["该选择器接受两个输入值, 并将第二个输入值设置为第一个输入值的 children 属性的值. 通常表示为 defaultChildrenSetter"],sees:[{guide:"setter"}]}]}},66825:e=>{e.exports={historys:[{type:"function",since:"2.1.23",readonly:!0,description:"默认的值设置器",remarks:["该选择器接受两个输入值, 并将第二个输入值设置为第一个输入值的 value 属性的值. 通常表示为 defaultValueSetter"],sees:[{guide:"setter"}]}]}},64360:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[],constructors:{historys:[{since:"2.1.15",overloads:[{parameters:[{name:"source",types:["any"]}],returns:{type:"IEnumerable"},newInstance:"cannot",description:"通过指定的 source 创建一个 IEnumerable 对象",sees:[{apis:"Enumerable",method:"asEnumerable"}]}]}]}}},39426:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{static:!0,parameters:[{name:"source",types:["any"]}],returns:{type:"IEnumerable"},description:"通过指定的 source 创建一个 IEnumerable 对象",remarks:["其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象"]}]},{since:"2.1.20",ref:!0,overloads:[{sees:[{apis:"Enumerable",method:"from"}]}]},{since:"2.1.22",ref:!0,overloads:[{},{static:!0,parameters:[{name:"childrenSelector",types:["function","string","symbol","number","array","object"],descriptions:["用来从对象中查找子节点的选择器"],defaultValue:"defaultChildrenSelector",declare:{returns:{type:"IEnumerable"},parameters:[{name:"node",types:["any"]}]}},{name:"valueSelector",types:["function","string","symbol","number","array","object"],descriptions:["用来从对象中映射值的选择器"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"node",types:["any"]}]}}],returns:{type:"ITree",descriptions:["转化后的树形结构"]},description:"将一个对象通过子节点选择器与值选择器转化为一个树形结构",sees:[{apis:"ITree"}]}]}]}},13862:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{static:!0,parameters:[{name:"start",types:["number"],descriptions:["序列中第一个整数的值"]},{name:"end",types:["number"],descriptions:["序列中最后一个整数的最大值"]},{name:"step",types:["number"],defaultValue:1,descriptions:["步长"]}],returns:{type:"IEnumerable",descriptions:["一个包含范围内连续的整数序列"]},description:"生成指定范围内的整数序列",remarks:["此方法通过延迟执行的方式实现","一般的, 生成的新序列中包含 start 与 end."]}]}]}},6655:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{static:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["一个不包含任何元素的序列"]},description:"生成一个空序列",remarks:["此方法通过延迟执行的方式实现"]}]}]}},73640:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{static:!0,parameters:[{name:"source",types:["any"]}],returns:{type:"IEnumerable"},description:"通过指定的 source 创建一个 IEnumerable 对象",remarks:["其中 source 可以是 IEnumerable, Iterator, array, string 甚至 object 对象, 不建议使用 boolean, number 对象"],sees:[{apis:"Enumerable",method:"asEnumerable"}]}]}]}},14890:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{static:!0,parameters:[{name:"generate",types:["function"],declare:{returns:{type:"any"},parameters:[{name:"index",types:["number"]}]},descriptions:["用于生成每个元素的函数"]},{name:"count",types:["number"],defaultValue:0,descriptions:["在生成序列中元素的数目"]}],returns:{type:"IEnumerable",descriptions:["一个使用指定的生成器生成了所有元素的新序列"]},description:"将使用生成器生成一个序列",remarks:["此方法通过延迟执行的方式实现"]}]}]}},15057:e=>{e.exports={historys:[{since:"2.1.19",overloads:[{static:!0,parameters:[{name:"callback",types:["function","boolean"],defaultValue:!1,declare:{parameters:[{name:"Enumerable",types:["class"]}],returns:{type:"void"}}}],returns:{type:"class"},description:"释放当前的全局 Enumerable 对象, 解决冲突"}]}]}},97280:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{static:!0,parameters:[{name:"start",types:["number"],descriptions:["序列中第一个整数的值"]},{name:"count",types:["number"],descriptions:["要生成的连续整数的数目"]}],returns:{type:"IEnumerable",descriptions:["一个包含范围内连续的整数序列"]},description:"生成指定范围内的整数序列",remarks:["此方法通过延迟执行的方式实现"]}]},{since:"2.1.20",ref:!0,overloads:[{parameters:[{},{},{name:"step",types:["number"],defaultValue:1,descriptions:["步长"]}]}]}]}},25717:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{static:!0,parameters:[{name:"element",types:["any"],descriptions:["要重复的值"]},{name:"count",types:["number"],descriptions:["在生成序列中重复该值的次数"]}],returns:{type:"IEnumerable",descriptions:["一个包含指定数量重复值的序列"]},description:"将生成一个序列, 其中包含指定数量个重复的值",remarks:["此方法通过延迟执行的方式实现"]}]}]}},8158:e=>{e.exports={historys:[{type:"object",static:!0,readonly:!0,since:"2.1.15",description:"一个包含了一些常用执行器的对象",sees:[{apis:"Enumerable.actions"}]}]}},6733:e=>{e.exports={historys:[{type:"object",static:!0,readonly:!0,since:"2.1.15",description:"一个包含了一些常用比较器的对象",sees:[{apis:"Enumerable.comparers"}]}]}},27610:e=>{e.exports={historys:[{type:"object",static:!0,readonly:!0,since:"2.1.15",description:"全局配置",sees:[{apis:"Enumerable.config"}]}]}},14395:e=>{e.exports={historys:[{type:"object",static:!0,readonly:!0,since:"2.1.15",description:"一个包含了一些常用筛选器的对象",sees:[{apis:"Enumerable.predicates"}]}]}},88818:e=>{e.exports={historys:[{type:"object",static:!0,readonly:!0,since:"2.1.15",description:"一个包含了一些常用选择器的对象",sees:[{apis:"Enumerable.selectors"}]}]}},69983:e=>{e.exports={historys:[{type:"string",static:!0,readonly:!0,since:"2.2.0",description:"获取当前库的版本号"}]}},18128:e=>{e.exports={type:"interface",since:"2.1.18",extends:["IEnumerable"],implements:[],name:"IChunk",properties:[{name:"index",historys:[{since:"2.1.18",deprecated:"2.1.18",description:"此分块的索引"},{since:"2.1.19",deprecated:0,readonly:!0}]}],methods:[]}},62666:e=>{e.exports={type:"interface",since:"2.1.18",extends:["IEnumerable"],implements:[]}},12962:e=>{e.exports={historys:[{type:"number",since:"2.1.18",description:"此分块的索引"},{since:"2.1.19",readonly:!0}]}},38967:e=>{e.exports={type:"interface",since:"2.1.22",extends:["ITree"],name:"ICombine",properties:[{name:"key",historys:[{since:"2.1.22",deprecated:0,description:"此聚合的key",readonly:!0}]},{name:"parent",historys:[{since:"2.1.22",deprecated:0,description:"此聚合父节点的key",readonly:!0}]}],methods:[]}},86083:e=>{e.exports={type:"interface",since:"2.1.22",extends:["ITree"]}},6233:e=>{e.exports={historys:[{type:"any",since:"2.1.22",readonly:!0,description:"此聚合的key"}]}},17727:e=>{e.exports={historys:[{type:"any",since:"2.1.22",readonly:!0,description:"此聚合父节点的key"}]}},24442:e=>{e.exports={type:"interface",since:"2.1.15",extends:["array"],implements:[],name:"IEnumerable",properties:[{name:"length",historys:[{since:"2.1.15",deprecated:0,override:!0,description:"所包含的元素个数",readonly:!0}]},{name:"size",historys:[{since:"2.1.15",deprecated:0,description:"所包含的元素个数",readonly:!0}]}],methods:[{name:"aggregate",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.",parameters:[{name:"seed"},{name:"func"},{name:"resultSelector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.",parameters:[{name:"seed"},{name:"func"},{name:"resultSelector"}]}]}]},{name:"all",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"确定是否对序列中的所有元素都满足条件",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"确定是否对序列中的所有元素都满足条件",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"确定是否对序列中的所有元素都满足条件",parameters:[{name:"predicate"}]}]}]},{name:"any",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"确定序列中是否存在满足条件的元素",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"确定序列中是否存在满足条件的元素",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"确定序列中是否存在满足条件的元素",parameters:[{name:"predicate"}]}]}]},{name:"asEnumerable",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"获取一个 IEnumerable 对象",parameters:[]}]}]},{name:"average",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值",parameters:[{name:"selector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值",parameters:[{name:"selector"}]}]}]},{name:"chunk",historys:[{since:"2.1.18",deprecated:0,overloads:[{description:"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合",parameters:[{name:"chunk"},{name:"offset"}]}]}]},{name:"combination",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"从源序列中的抽取指定个数的元素不管顺序组成一个组合项, 并由所有不同的组合项组成新的序列",parameters:[{name:"count"},{name:"repeatable"}]}]}]},{name:"combine",historys:[{since:"2.1.20",deprecated:"2.1.21",overloads:[{description:"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列",parameters:[{name:"parentSelector"},{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.22",deprecated:0,overloads:[{description:"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列",parameters:[{name:"parentSelector"},{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]},{name:"concat",historys:[{since:"2.1.15",deprecated:"2.1.19",overloads:[{override:!0,description:"连接两个序列",parameters:[{name:"other"}]}]},{since:"2.1.20",deprecated:0,overloads:[{override:!0,description:"连接两个序列",parameters:[{name:"other"}]}]}]},{name:"conflict",historys:[{since:"2.1.24.pre",deprecated:0,overloads:[{description:"返回序列中是否存在相同元素",parameters:[{name:"selector"},{name:"comparer"}]}]}]},{name:"contains",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"确定使用指定的相等比较器时, 序列是否包含指定的元素",parameters:[{name:"value"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"确定使用指定的相等比较器时, 序列是否包含指定的元素",parameters:[{name:"value"},{name:"comparer"}]}]}]},{name:"copyWithin",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小",parameters:[{name:"target"},{name:"start"},{name:"end"}]}]}]},{name:"count",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回一个数字来表示多少个元素指定序列中的满足条件",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回一个数字来表示多少个元素指定序列中的满足条件",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回一个数字来表示多少个元素指定序列中的满足条件",parameters:[{name:"predicate"}]}]}]},{name:"defaultIfEmpty",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列",parameters:[{name:"defaultValue"}]}]}]},{name:"distinct",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"获取包含源序列中所有非重复元素的新序列",parameters:[{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"获取包含源序列中所有非重复元素的新序列",parameters:[{name:"comparer"}]}]}]},{name:"each",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"遍历序列中的每个元素, 为每一个元素执行指定的操作, 然后返回序列本身",parameters:[{name:"action"}]}]}]},{name:"elementAt",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"返回序列中的指定索引处的元素",parameters:[{name:"index"}]}]}]},{name:"elementAtOrDefault",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值",parameters:[{name:"index"},{name:"defaultValue"}]}]}]},{name:"every",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"测试数组的所有元素是否都通过了指定函数的测试",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"测试数组的所有元素是否都通过了指定函数的测试",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"except",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"生成两个序列的差集",parameters:[{name:"other"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"生成两个序列的差集",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"fill",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"将一个数组的所有元素从开始索引填充到具有静态值的结束索引",parameters:[{name:"value"},{name:"start"},{name:"end"}]}]}]},{name:"filter",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"find",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"返回数组中满足提供的测试函数的第一个元素的值",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"返回数组中满足提供的测试函数的第一个元素的值",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"findIndex",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"返回数组中满足提供的测试函数的第一个元素的索引",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"返回数组中满足提供的测试函数的第一个元素的索引",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"findLast",historys:[{since:"2.1.17",deprecated:"2.1.18",overloads:[{override:!0,description:"返回数组中满足提供的测试函数的最后一个元素的值",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"返回数组中满足提供的测试函数的最后一个元素的值",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"findLastIndex",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"返回数组中满足提供的测试函数的最后一个元素的索引",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"返回数组中满足提供的测试函数的最后一个元素的索引",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"first",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足指定条件的第一个元素",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足指定条件的第一个元素",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足指定条件的第一个元素",parameters:[{name:"predicate"}]}]}]},{name:"firstOrDefault",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]}]},{name:"forEach",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"遍历序列中的每个元素, 使用元素执行指定的操作",parameters:[{name:"action"},{name:"thisArg"}]}]}]},{name:"getEnumerator",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"获取序列的枚举器",parameters:[]}]}]},{name:"groupBy",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",parameters:[{name:"keySelector"},{name:"elementSelector"},{name:"resultSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",parameters:[{name:"keySelector"},{name:"elementSelector"},{name:"resultSelector"},{name:"comparer"}]}]}]},{name:"groupJoin",historys:[{since:"2.1.15",deprecated:"2.1.17",overloads:[{description:"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.18",deprecated:"2.1.18",overloads:[{description:"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]}]},{name:"includes",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"用来判断当前数组是否包含某指定的值",parameters:[{name:"element"},{name:"start"}]}]}]},{name:"indexOf",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"返回在数组中可以找到给定元素的第一个索引",parameters:[{name:"element"},{name:"start"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"返回在数组中可以找到给定元素的第一个索引",parameters:[{name:"element"},{name:"start"},{name:"comparer"}]}]}]},{name:"indices",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"使用指定的索引序列从源序列中生成一个新的序列",parameters:[{name:"indices"}]}]}]},{name:"innerJoin",historys:[{since:"2.1.19",deprecated:0,overloads:[{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]}]},{name:"intersect",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"生成两个序列的交集",parameters:[{name:"other"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"生成两个序列的交集",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"isSub",historys:[{since:"2.1.21",deprecated:0,overloads:[{description:"确定一个源序列是否是另一个序列的子集",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"isSuper",historys:[{since:"2.1.21",deprecated:0,overloads:[{description:"确定一个源序列是否是另一个序列的超集",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"join",historys:[{since:"2.1.15",deprecated:"2.1.17",overloads:[{parameters:[{name:"split"}]},{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.18",deprecated:"2.1.18",overloads:[{parameters:[{name:"split"}]},{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{parameters:[{name:"split"}]},{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]}]},{name:"last",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足指定条件的最后一个元素",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足指定条件的最后一个元素",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足指定条件的最后一个元素",parameters:[{name:"predicate"}]}]}]},{name:"lastIndexOf",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"法返回指定元素在数组中的最后一个的索引",parameters:[{name:"element"},{name:"start"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"法返回指定元素在数组中的最后一个的索引",parameters:[{name:"element"},{name:"start"},{name:"comparer"}]}]}]},{name:"lastOrDefault",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",parameters:[{name:"defaultValue"},{name:"predicate"}]}]}]},{name:"leftJoin",historys:[{since:"2.1.18",deprecated:"2.1.18",overloads:[{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]}]},{name:"leftPad",historys:[{since:"2.1.18",deprecated:0,overloads:[{description:"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",parameters:[{name:"length"},{name:"value"}]}]}]},{name:"map",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"max",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值",parameters:[{name:"selector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:"2.1.24",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值",parameters:[{name:"selector"},{name:"comparer"}]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素",parameters:[{name:"selector"},{name:"comparer"}]}]}]},{name:"maxIndex",historys:[{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中所在的索引位置",parameters:[{name:"selector"},{name:"comparer"}]}]}]},{name:"maxOrDefault",historys:[{since:"2.1.22",deprecated:"2.1.24",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值，如果序列中不包含任何元素则返回一个默认值",parameters:[{name:"defaultValue"},{name:"selector"},{name:"comparer"}]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",parameters:[{name:"defaultValue"},{name:"selector"},{name:"comparer"}]}]}]},{name:"min",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值",parameters:[{name:"selector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:"2.1.24",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值",parameters:[{name:"selector"},{name:"comparer"}]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素",parameters:[{name:"selector"},{name:"comparer"}]}]}]},{name:"minIndex",historys:[{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中所在的索引位置",parameters:[{name:"selector"},{name:"comparer"}]}]}]},{name:"minOrDefault",historys:[{since:"2.1.22",deprecated:"2.1.24",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值，如果序列中不包含任何元素则返回一个默认值",parameters:[{name:"defaultValue"},{name:"selector"},{name:"comparer"}]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",parameters:[{name:"defaultValue"},{name:"selector"},{name:"comparer"}]}]}]},{name:"nearBy",historys:[{since:"2.1.20",deprecated:0,overloads:[{description:"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",parameters:[{name:"keySelector"},{name:"elementSelector"},{name:"resultSelector"},{name:"comparer"}]}]}]},{name:"nearSplit",historys:[{since:"2.1.24.pre",deprecated:0,overloads:[{description:"通过筛选器筛拆分序列,相邻的符合条件的元素之间将不会拆分成新的空序列",parameters:[{name:"splitPredicate"}]}]}]},{name:"ofType",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"根据指定的类型筛选出的新序列",parameters:[{name:"type"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"根据指定的类型筛选出的新序列",parameters:[{name:"type"}]}]}]},{name:"orderBy",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"按使用指定的比较器按升序对序列的元素进行排序",parameters:[{name:"keySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"按使用指定的比较器按升序对序列的元素进行排序",parameters:[{name:"keySelector"},{name:"comparer"}]}]}]},{name:"orderByDescending",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"按使用指定的比较器按降序对序列的元素进行排序",parameters:[{name:"keySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"按使用指定的比较器按降序对序列的元素进行排序",parameters:[{name:"keySelector"},{name:"comparer"}]}]}]},{name:"permutation",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"从源序列中的抽取指定个数的元素组成一个排列项, 并由所有不同的排列项组成新的序列",parameters:[{name:"count"},{name:"repeatable"}]}]}]},{name:"pop",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"从数组中删除最后一个元素, 并返回该元素的值",parameters:[]}]}]},{name:"product",historys:[{since:"2.1.18",deprecated:"2.1.18",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积",parameters:[{name:"selector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积",parameters:[{name:"selector"}]}]}]},{name:"proportion",historys:[{since:"2.1.25",deprecated:0,overloads:[{description:"通过筛选器获取符合条件的元素占比",parameters:[{name:"predicate"}]}]}]},{name:"push",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"将一个或多个元素添加到数组的末尾, 并返回数组的新长度",parameters:[{name:"values"}]}]}]},{name:"rand",historys:[{since:"2.1.18",deprecated:0,overloads:[{description:"随机获取序列中的指定数量的元素,组成新的序列",parameters:[{name:"count"}]}]}]},{name:"random",historys:[{since:"2.1.25",deprecated:"2.1.24",overloads:[{description:"返回序列中随机的一个元素",parameters:[]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"返回序列中随机的一个元素",parameters:[]}]}]},{name:"randomIndexProbability",historys:[{since:"2.2.0",deprecated:0,overloads:[{description:"根据概率(权重)返回序列中随机的一个元素所在序列中的索引位置",parameters:[{name:"selector"}]}]}]},{name:"randomOrDefault",historys:[{since:"2.1.25",deprecated:"2.1.24",overloads:[{description:"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值",parameters:[{name:"defaultValue"}]}]},{since:"2.2.0",deprecated:0,overloads:[{description:"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值",parameters:[{name:"defaultValue"}]}]}]},{name:"randomProbability",historys:[{since:"2.2.0",deprecated:0,overloads:[{description:"根据概率(权重)返回序列中随机的一个元素",parameters:[{name:"selector"}]}]}]},{name:"randomProbabilityOrDefault",historys:[{since:"2.2.0",deprecated:0,overloads:[{description:"根据概率(权重)返回序列中随机的一个元素。 如果未找到元素，则返回默认值",parameters:[{name:"defaultValue"},{name:"selector"}]}]}]},{name:"reduce",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值",parameters:[{name:"callback"},{name:"initialValue"}]}]}]},{name:"reduceRight",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值",parameters:[{name:"callback"},{name:"initialValue"}]}]}]},{name:"reverse",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"反转序列中元素的顺序",parameters:[]}]}]},{name:"rightJoin",historys:[{since:"2.1.18",deprecated:"2.1.18",overloads:[{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",parameters:[{name:"inner"},{name:"resultSelector"},{name:"outerKeySelector"},{name:"innerKeySelector"},{name:"comparer"}]}]}]},{name:"rightPad",historys:[{since:"2.1.18",deprecated:0,overloads:[{description:"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",parameters:[{name:"length"},{name:"value"}]}]}]},{name:"select",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"将序列中的每个元素投影到新序列",parameters:[{name:"selector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"将序列中的每个元素投影到新序列",parameters:[{name:"selector"}]}]}]},{name:"selectMany",historys:[{since:"2.1.16",deprecated:"2.1.18",overloads:[{description:"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列",parameters:[{name:"collectionSelector"},{name:"resultSelector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列",parameters:[{name:"collectionSelector"},{name:"resultSelector"}]}]}]},{name:"separate",historys:[{since:"2.1.20",deprecated:0,overloads:[{description:"将一个递归结构的序列的展开为一个一维解构的序列",parameters:[{name:"childrenSelector"},{name:"valueSelector"}]}]}]},{name:"sequenceEqual",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等",parameters:[{name:"other"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"shift",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"从数组中删除第一个元素, 并返回该元素的值",parameters:[]}]}]},{name:"single",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",parameters:[{name:"predicate"}]}]}]},{name:"singleOrDefault",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",parameters:[{name:"defaultValue"},{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",parameters:[{name:"defaultValue"},{name:"predicate"}]}]}]},{name:"skip",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"跳过指定的数量的序列中的元素，然后返回剩余元素",parameters:[{name:"count"}]}]}]},{name:"skipProportion",historys:[{since:"2.1.25",deprecated:0,overloads:[{description:"从序列的开头忽略指定的比例的连续元素, 返回剩余元素",parameters:[{name:"proportion"}]}]}]},{name:"skipSame",historys:[{since:"2.1.24",deprecated:0,overloads:[{description:"跳过序列开头与第一个元素相同的所有元素，然后返回剩余元素",parameters:[{name:"comparer"}]}]}]},{name:"skipWhile",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"跳过序列中指定条件为 true 的元素，然后返回剩余元素",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"跳过序列中指定条件为 true 的元素，然后返回剩余元素",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"跳过序列中指定条件为 true 的元素，然后返回剩余元素",parameters:[{name:"predicate"}]}]}]},{name:"slice",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象",parameters:[{name:"start"},{name:"end"}]}]}]},{name:"some",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"测试数组中的某些元素是否通过了指定函数的测试",parameters:[{name:"callback"},{name:"thisArg"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"测试数组中的某些元素是否通过了指定函数的测试",parameters:[{name:"callback"},{name:"thisArg"}]}]}]},{name:"sort",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"在适当的位置对数组的元素进行排序, 并返回数组",parameters:[{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"在适当的位置对数组的元素进行排序, 并返回数组",parameters:[{name:"comparer"}]}]}]},{name:"splice",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"通过删除现有元素和/或添加新元素来更改数组的内容",parameters:[{name:"start"},{name:"count"},{name:"values"}]}]}]},{name:"split",historys:[{since:"2.1.23",deprecated:"2.1.23",overloads:[{description:"通过筛选器筛拆分序列",parameters:[{name:"splitPredicate"}]}]},{since:"2.1.24.pre",deprecated:0,overloads:[{description:"通过筛选器筛拆分序列",parameters:[{name:"splitPredicate"}]}]}]},{name:"sum",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值",parameters:[{name:"selector"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值",parameters:[{name:"selector"}]}]}]},{name:"symmetric",historys:[{since:"2.1.21",deprecated:0,overloads:[{description:"生成两个序列的对称差分",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"take",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"从序列的开头返回指定的数量的连续元素",parameters:[{name:"count"}]}]}]},{name:"takeProportion",historys:[{since:"2.1.25",deprecated:0,overloads:[{description:"从序列的开头返回指定的比例的连续元素",parameters:[{name:"proportion"}]}]}]},{name:"takeSame",historys:[{since:"2.1.24",deprecated:0,overloads:[{description:"捡取序列开头与第一个元素相同的所有元素，返回被捡取的所有元素，含第一个元素",parameters:[{name:"comparer"}]}]}]},{name:"takeWhile",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"返回序列中从起始位置开始指定的条件为 true 的连续元素",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"返回序列中从起始位置开始指定的条件为 true 的连续元素",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"返回序列中从起始位置开始指定的条件为 true 的连续元素",parameters:[{name:"predicate"}]}]}]},{name:"toArray",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"使用源序列创建一个数组",parameters:[]}]}]},{name:"toDirectory",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]},{name:"toInOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"创建一个完全二叉树,使得此二叉树的中序遍历结果与源序列一致",parameters:[]}]}]},{name:"toLookup",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]},{name:"toObject",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"从 IEnumerable 中获取一个对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"从 IEnumerable 中获取一个对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]},{name:"toPostOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"创建一个完全二叉树,使得此二叉树的后序遍历结果与源序列一致",parameters:[]}]}]},{name:"toPreOrder",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"创建一个完全二叉树,使得此二叉树的前序遍历结果与源序列一致",parameters:[]}]}]},{name:"union",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"生成两个序列的并集",parameters:[{name:"other"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"生成两个序列的并集",parameters:[{name:"other"},{name:"comparer"}]}]}]},{name:"unshift",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"将一个或多个元素添加到数组的开头, 并返回新数组的长度",parameters:[{name:"values"}]}]}]},{name:"where",historys:[{since:"2.1.15",deprecated:"2.1.16",overloads:[{description:"通过筛选器筛选值序列",parameters:[{name:"predicate"}]}]},{since:"2.1.17",deprecated:"2.1.18",overloads:[{description:"通过筛选器筛选值序列",parameters:[{name:"predicate"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"通过筛选器筛选值序列",parameters:[{name:"predicate"}]}]}]},{name:"wipe",historys:[{since:"2.1.20",deprecated:0,overloads:[{description:"通过筛选器剔除序列中满足条件的一定数量的元素",parameters:[{name:"predicate"},{name:"count"}]}]}]},{name:"zip",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"通过依次合并元素的方式合并两个序列",parameters:[{name:"other"},{name:"resultSelector"}]}]}]}]}},18209:e=>{e.exports={type:"interface",since:"2.1.15",extends:["array"],implements:[]}},81279:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"seed",types:["any"],descriptions:["累加器的初始值"]},{name:"func",types:["function"],descriptions:["要对每个元素调用的累加器函数"],declare:{returns:{type:"any"},parameters:[{name:"seed",types:["any"]},{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"resultSelector",types:["function","string"],defaultValue:"defaultSelector",descriptions:["将累加器的最终值转换为结果值的函数"],declare:{returns:{type:"any"},parameters:[{name:"result",types:["any"]}]}}],returns:{type:"any",descriptions:["已转换的累加器最终值"]},description:"对一个序列应用累加器函数. 将指定的种子值用作累加器的初始值, 并使用指定的函数选择结果值.",remarks:["此方法可以很容易地通过一系列值执行计算. 此方法的原理是使用 source 中的每一个元素依次调用一次 func, 每次 func 调用时此方法将传递聚合的值(作为第一个参数传递给 func)与该序列中的元素. 参数 seed 的值作为聚合的初始值来使用. func 执行的结果替换之前的聚合的值. 最后一次 func 执行的结果传递给 resultSelector 得到此方法要获取的最终结果。"],sees:[{apis:"IEnumerable",method:"count"},{apis:"IEnumerable",method:"min"},{apis:"IEnumerable",method:"max"},{apis:"IEnumerable",method:"sum"},{apis:"IEnumerable",method:"average"},{apis:"Enumerable.selectors",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548744(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 aggregate 应用累加器函数和结果选择器",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{},{types:["function","string","symbol","number"]}]}]}]}},11430:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"boolean",descriptions:["如果源序列中的每一个元素都在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false"]},description:"确定是否对序列中的所有元素都满足条件",remarks:["在循环过程中, 当可以确定的结果时, 循环就会立即停止。"],warnings:["此方法不会返回序列中任何元素, 它只会确认集合中的所有元素是否满足条件"],sees:[{apis:"IEnumerable",method:"any"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548541(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 all 以确定是否在序列中的所有元素都满足条件",script:{type:"javascript",href:"1.js"}},{description:"",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},34758:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"boolean",descriptions:["如果源序列中的有任何元素能在指定筛选器的检测中返回true或者序列为空,则返回true,否则返回false"]},description:"确定序列中是否存在满足条件的元素",remarks:["在循环过程中, 当可以确定的结果时, 循环就会立即停止。"],warnings:["此方法不会返回序列中任何元素, 它只会确认集合中是否存在满足条件的元素"],sees:[{apis:"IEnumerable",method:"all"},{apis:"IEnumerable",method:"contains"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb534972(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 any 以确定在序列中是否存在满足条件的元素。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},65683:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[],returns:{type:"IEnumerable",descriptions:["一个 IEnumerable 对象"]},description:"获取一个 IEnumerable 对象",remarks:["因为本身已经是 IEnumerable 对象, 所以此方法将返回对象本身"]}]}]}},93726:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"number",descriptions:["值序列的平均值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的平均值",sees:[{apis:"IEnumerable",method:"aggregate"},{apis:"IEnumerable",method:"sum"},{apis:"Enumerable.selectors",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549067(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 average 计算平均值。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},23564:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"chunk",types:["number"],descriptions:["用于表示分块后每块的数量"]},{name:"offset",types:["number"],descriptions:["用于表示起始分块的位移"],defaultValue:0}],returns:{type:"IEnumerable",generics:[{name:"IChunk"}],descriptions:["分块后的序列"]},description:"对序列按指定数量进行分块, 分块后的序列是一个包含一组数量相同的序列的集合",remarks:["此方法通过延迟执行的方式实现"],warnings:["由于受参数 offset 与原序列总长度的影响, 分块后的首个序列与末尾序列的长度可能不等于参数 chunk 的值"],sees:[{apis:"IEnumerable",method:"groupBy"},{apis:"IChunk"}]}]}]}},40374:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"count",types:["number"],descriptions:["组合中的每个组合项的元素个数"]},{name:"repeatable",types:["boolean"],defaultValue:"false",descriptions:["指示组合项中的元素是否可重复"]}],returns:{type:"IEnumerable",generics:[{name:"IEnumerable"}],descriptions:["包含所有组合项的新序列"]},description:"从源序列中的抽取指定个数的元素不管顺序组成一个组合项, 并由所有不同的组合项组成新的序列",remarks:["此方法通过延迟执行的方式实现"],warnings:["源序列中索引不相同的元素被视为不同的元素, 即使元素的值可能相同."],sees:[{apis:"IEnumerable",method:"permutation"}],examples:[{description:"下面的代码示例演示如何使用 combination 计算序列按指定数量的所有组合。",script:{type:"javascript",href:"1.js"}}]}]}]}},32983:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{lazy:!0,parameters:[{name:"parentSelector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的父节点键的函数"],defaultValue:"defaultParentSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}},{name:"keySelector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}},{name:"valueSelector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的值的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["聚合后的新序列"]},description:"通过将一组序列中每个元素中父节点的键与元素的键进行比对, 聚合成一个新的递归结构的序列",remarks:["此方法通过延迟执行的方式实现","所有父节点键未被匹配的元素将成为新序列的顶层元素"],sees:[{apis:"IEnumerable",method:"groupBy"},{apis:"IEnumerable",method:"separate"},{apis:"Enumerable.selectors",property:"parent"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"}]}]},{ref:!0,since:"2.1.22",overloads:[{returns:{type:"IEnumerable<ICombine>"},sees:[{},{},{},{},{},{apis:"ICombine"}]}]}]}},74334:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,override:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列连接的另一个序列"]}],returns:{type:"IEnumerable",descriptions:["一个将两个序列所有元素的串联产生的新序列"]},description:"连接两个序列",remarks:["此方法通过延迟执行的方式实现","此方法不用 union 方法因为此方法返回输入序列中的所有原始元素, 而 union 方法只返回唯一元素"],sees:[{apis:"IEnumerable",method:"union"},{href:"https://msdn.microsoft.com/{language}/library/bb302894(v=vs.110).aspx",title:"Microsoft MSDN"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/concat",title:"Mozilla MDN"}],examples:[{description:"下面的代码示例演示如何使用 concat 可串联两个序列。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.20",ref:!0,overloads:[{parameters:[{params:!0,descriptions:["要与源序列连接的另一个(或多个)序列"]}]}]}]}},15603:e=>{e.exports={historys:[{since:"2.1.24.pre",overloads:[{parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的属性的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"boolean",descriptions:["表示序列中是否存在相同元素"]},description:"返回序列中是否存在相同元素",sees:[{apis:"Enumerable.selects",property:"default"},{apis:"Enumerable.comparers",property:"equality"}]}]}]}},94759:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"value",types:["any"],descriptions:["要在序列中定位的值"]},{name:"comparer",types:["function","string"],descriptions:["一个对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"boolean",descriptions:["如果源序列包含具有指定的值的元素, 则返回true, 否则返回false"]},description:"确定使用指定的相等比较器时, 序列是否包含指定的元素",remarks:["只要找到匹配的元素, 将停止循环比较的过程"],sees:[{apis:"IEnumerable",method:"any"},{apis:"Enumerable.comparers",property:"equality"}],examples:[{description:"下面的代码示例演示如何使用 contains 确定数组是否包含特定元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的示例演示如何实现可在 contains 方法中使用的相等比较器，与使用此比较器确定数组是否包含特定元素。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},69347:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"target",types:["number"],defaultValue:"0"},{name:"start",types:["number"],defaultValue:"0"},{name:"end",types:["number"],defaultValue:"infinity"}],returns:{type:"IEnumerable"},description:"浅复制数组的一部分到同一数组中的另一个位置, 并返回它, 而不修改其大小",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin",title:"Mozilla MDN"}]}]}]}},99296:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"number",descriptions:["一个数字，表示序列中满足函数条件的元素数量"]},description:"返回一个数字来表示多少个元素指定序列中的满足条件",sees:[{apis:"IEnumerable",property:"length"},{apis:"IEnumerable",property:"size"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb535181(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 count 对数组中的元素进行计数。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 count 对数组中满足条件的元素进行计数。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}],examples:[{},{},{description:"下面的代码示例演示如何使用 count 对数组与指定值相符的元素进行计数。",script:{type:"javascript",href:"3.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},7397:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["序列为空时要返回的序列所包含的值"]}],returns:{type:"IEnumerable",descriptions:["如果源序列为空, 返回包含单一 defaultValue 元素的新序列, 否则返回源序列"]},description:"如果源序列为空, 返回包含单一元素的新序列, 否则返回源序列",remarks:["此方法通过延迟执行的方式实现","此方法可以用于与 groupJoin 方法结合使用, 生成一个左外部联接"],sees:[{apis:"IEnumerable",method:"groupJoin"},{href:"https://msdn.microsoft.com/{language}/library/bb355419(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 defaultIfEmpty 方法并指定默认值。 第一个序列不为空，且第二个序列为空。",script:{type:"javascript",href:"1.js"}}]}]}]}},46325:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"comparer",types:["function","string"],descriptions:["用于对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"IEnumerable",descriptions:["包含源序列中所有非重复元素的结果序列"]},description:"获取包含源序列中所有非重复元素的新序列",remarks:["此方法通过延迟执行的方式实现"],warnings:["此方法的结果可能是无序的"],sees:[{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb338049(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 distinct 要返回的整数序列中非重复元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何实现在 distinct 中可用的相等比较器，并在实现此比较器后对一系列数据使用 distinct 方法返回去除重复数据后的新序列。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},59909:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"action",types:["function"],descriptions:["循环的执行体"],defaultValue:"defaultAction",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["源序列本身"]},description:"遍历序列中的每个元素, 为每一个元素执行指定的操作, 然后返回序列本身",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"Enumerable.actions",property:"default"},{apis:"IEnumerable",method:"forEach"}]}]}]}},38002:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"index",types:["number"],descriptions:["要检索的从零开始的元素索引"]}],returns:{type:"any",descriptions:["源序列中指定位置处的元素"]},description:"返回序列中的指定索引处的元素",remarks:["如果 index 超出范围, 此方法将引发异常. 如果希望 index 超出范围时返回默认值, 请使用 elementAtOrDefault 方法"],sees:[{apis:"IEnumerable",method:"elementAtOrDefault"},{href:"https://msdn.microsoft.com/{language}/library/bb299233(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 elementAt 以返回特定位置处的元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},60353:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"index",types:["number"],descriptions:["要检索的从零开始的元素索引"]},{name:"defaultValue",types:["any"],descriptions:["如果 index 超出范围时返回的默认值"]}],returns:{type:"any",descriptions:["如果索引超出源序列中的界限返回 defaultValue, 否则返回源序列中的指定位置处的元素"]},description:"返回序列中的指定索引处的元素, 如果索引超出范围, 则返回默认值",sees:[{apis:"IEnumerable",method:"elementAt"},{href:"https://msdn.microsoft.com/{language}/library/bb494386(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 elementAtOrDefault 获取一个索引超出数组界限的元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},73737:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"boolean"},description:"测试数组的所有元素是否都通过了指定函数的测试",sees:[{guide:"predicate"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/every",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},58395:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要在返回序列中移除存在于源序列中的元素序列"]},{name:"comparer",types:["function","string"],descriptions:["用于判定两个序列元素的值是否相等的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"IEnumerable",descriptions:["包含这两个序列的元素的差集的序列"]},description:"生成两个序列的差集",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"union"},{apis:"IEnumerable",method:"intersect"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb336390(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 except 方法来比较两个数字序列并将其返回仅在第一个序列中出现的元素组成的新序列。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何实现在 except 中可用的相等比较器，并在实现此比较器后对连个序列中的元素使用此比较器比较后返回仅在第一个序列中出现的元素组成的新序列。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},54864:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"value",types:["any"]},{name:"start",types:["number"],defaultValue:"0"},{name:"end",types:["number"],defaultValue:"infinity"}],returns:{type:"IEnumerable"},description:"将一个数组的所有元素从开始索引填充到具有静态值的结束索引",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",title:"Mozilla MDN"}]}]}]}},24975:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"IEnumerable"},description:"使用指定的函数测试所有元素, 并创建一个包含所有通过测试的元素的新数组",sees:[{guide:"predicate"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},4933:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"any"},description:"返回数组中满足提供的测试函数的第一个元素的值",sees:[{guide:"predicate"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/find",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},15892:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"number"},description:"返回数组中满足提供的测试函数的第一个元素的索引",sees:[{guide:"predicate"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},27713:e=>{e.exports={historys:[{since:"2.1.17",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"any"},description:"返回数组中满足提供的测试函数的最后一个元素的值",sees:[{guide:"predicate"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},82633:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"number"},description:"返回数组中满足提供的测试函数的最后一个元素的索引",sees:[{guide:"predicate"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},25444:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的第一个元素"]},description:"返回序列中满足指定条件的第一个元素",remarks:["如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 firstOrDefault 方法"],sees:[{apis:"IEnumerable",method:"firstOrDefault"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb535050(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 first 返回数组的第一个元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 first 返回数组中满足条件的第一个元素。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},1033:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["找不到匹配元素时返回的默认值"]},{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的第一个元素. 如果未找到匹配元素, 则返回 defaultValue"]},description:"返回序列中满足条件的第一个元素. 如果未找到这样的元素, 则返回默认值",sees:[{apis:"IEnumerable",method:"first"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549039(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何对空数组使用 firstOrDefault 。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何通过传入一个筛选器使用 firstOrDefault 。 在第二个调用到方法中，在满足条件的数组中没有任何元素。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{},{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number","array","object"]}]}]}]}},27643:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"action",types:["function"],descriptions:["循环的执行体"],defaultValue:"defaultAction",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"void"},description:"遍历序列中的每个元素, 使用元素执行指定的操作",sees:[{apis:"Enumerable.actions",property:"default"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach",title:"Mozilla MDN"}]}]}]}},23079:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[],returns:{type:"IEnumerator"},description:"获取序列的枚举器",sees:[{apis:"IEnumerator"}]}]}]}},49535:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"elementSelector",types:["function","string"],descriptions:["用于将每个源元素映射到组中的元素的函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"resultSelector",types:["function","string"],descriptions:["用于从每个组中创建结果值的函数"],defaultValue:"defaultResultSelector",declare:{returns:{type:"any"},parameters:[{name:"key",types:["any"]},{name:"grouping",types:["IGrouping"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"IGrouping"}],descriptions:["对一组及其键的投影的结果的集合"]},description:"根据指定的键选择器函数对序列中的元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"selectMany"},{apis:"IEnumerable",method:"groupJoin"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.selectors",property:"value"},{apis:"Enumerable.selectors",method:"result"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb535049(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 groupBy 对序列的元素进行分组。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 groupBy 分组一系列元素并对结果进行映射。",script:{type:"javascript",href:"2.js"}},{description:"下面的代码示例演示如何使用 groupBy 对要投影的一系列元素进行分组并对结果进行映射。",script:{type:"javascript",href:"3.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}],examples:[{},{script:{href:"2-2.1.19.js"}},{script:{href:"3-2.1.19.js"}}]}]}]}},85333:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"inner",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列联接的序列"]},{name:"resultSelector",types:["function"],descriptions:["用于从源序列的元素和联接序列的匹配元素集合中创建结果元素的函数"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"grouping",types:["IGrouping"]}]}},{name:"outerKeySelector",types:["function","string"],descriptions:["用于从源序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"innerKeySelector",types:["function","string"],descriptions:["用于从联接序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["通过对两个序列执行分组的联接获得的结果集合"]},description:"基于匹配键对两个序列的元素关联, 并对结果进行分组, 使用指定的相等比较器对键进行比较",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"join",index:1},{apis:"IEnumerable",method:"groupBy"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 groupJoin 来对两个序列执行分组的联接。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.18",ref:!0,overloads:[{sees:[{},{},{apis:"IEnumerable",method:"leftJoin"},{apis:"IEnumerable",method:"rightJoin"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb535047(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{defaultValue:"defaultJoinSelector"},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},38573:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"element",types:["any"]},{name:"start",types:["number"],defaultValue:"0"}],returns:{type:"boolean"},description:"用来判断当前数组是否包含某指定的值",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/includes",title:"Mozilla MDN"}]}]}]}},72822:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"element",types:["any"]},{name:"start",types:["number"],defaultValue:"0"},{name:"comparer",types:["function","string"],defaultValue:"defaultStrictEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"number"},description:"返回在数组中可以找到给定元素的第一个索引",sees:[{apis:"Enumerable.comparers",property:"strict"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{},{types:["function","string","symbol","number"]}]}]}]}},4631:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"indices",types:["array < number >","IEnumerable < number >"],descriptions:["用于检测每个元素是否满足条件的函数"]}],returns:{type:"IEnumerable",descriptions:["使用索引序列从源序列中生成的新序列"]},description:"使用指定的索引序列从源序列中生成一个新的序列",remarks:["此方法通过延迟执行的方式实现","新序列中包含元素与索引序列的元素个数一致. 若索引序列在索引位 N 的元素值为 M, 则新序列在索引为 N 的元素值等于源序列在索引为 M 的元素值."],sees:[{guide:"predicate"}],examples:[]}]}]}},79824:e=>{e.exports={historys:[{since:"2.1.19",overloads:[{lazy:!0,parameters:[{name:"inner",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列联接的序列"]},{name:"resultSelector",types:["function"],descriptions:["用于从两个匹配元素创建结果元素的函数"],defaultValue:"defaultJoinSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"outerKeySelector",types:["function","string","symbol","number"],descriptions:["用于从源序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"innerKeySelector",types:["function","string","symbol","number"],descriptions:["用于从联接序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["通过对两个序列执行内部联接获得的结果集合"]},description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"groupJoin"},{apis:"IEnumerable",method:"leftJoin"},{apis:"IEnumerable",method:"rightJoin"},{apis:"IEnumerable",method:"join",index:1},{apis:"Enumerable.selectors",property:"join"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 innerJoin 来执行基于对一个公共键的两个序列的内部联接。",script:{type:"javascript",href:"1.js"}}]}]}]}},10473:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要在返回序列中返回存在于源序列中的元素序列"]},{name:"comparer",types:["function","string"],descriptions:["用于判定两个序列元素的值是否相等的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"IEnumerable",descriptions:["包含这两个序列的元素的交集的序列"]},description:"生成两个序列的交集",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"union"},{apis:"IEnumerable",method:"except"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb355408(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 intersect 获取在两个整数的序列中都存在的元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何实现在 intersect 中可用的相等比较器，并在实现此比较器后对两个序列使用 intersect 方法返回由每个原序列中都存在的元素组成新序列。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},42855:e=>{e.exports={historys:[{since:"2.1.21",overloads:[{parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要与源序列做比较的另一个序列"]},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"boolean",descriptions:["表示源序列是否是指定的另一个序列的子集"]},description:"确定一个源序列是否是另一个序列的子集",sees:[{apis:"Enumerable.comparers",property:"equality"}]}]}]}},55083:e=>{e.exports={historys:[{since:"2.1.21",overloads:[{parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要与源序列做比较的另一个序列"]},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"boolean",descriptions:["表示源序列是否是指定的另一个序列的超集"]},description:"确定一个源序列是否是另一个序列的超集",sees:[{apis:"Enumerable.comparers",property:"equality"}]}]}]}},59298:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"split",types:["string"]}],returns:{type:"string"},sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/join",title:"Mozilla MDN"}],examples:[{script:{type:"javascript",href:"0.1.js"}}]},{lazy:!0,parameters:[{name:"inner",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列联接的序列"]},{name:"resultSelector",types:["function"],descriptions:["用于从两个匹配元素创建结果元素的函数"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"outerKeySelector",types:["function","string"],descriptions:["用于从源序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"innerKeySelector",types:["function","string"],descriptions:["用于从联接序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["通过对两个序列执行内部联接获得的结果集合"]},description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"groupJoin"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 join 来执行基于对一个公共键的两个序列的内部联接。",script:{type:"javascript",href:"1.1.js"}}]}]},{since:"2.1.18",ref:!0,overloads:[{},{sees:[{},{apis:"IEnumerable",method:"leftJoin",property:""},{apis:"IEnumerable",method:"rightJoin",property:""},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{},{parameters:[{},{},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}],sees:[{},{},{},{apis:"IEnumerable",method:"innerJoin",property:""},{apis:"Enumerable.selectors",property:"join"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb549267(v=vs.110).aspx",title:"Microsoft MSDN"}]}]}]}},74062:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的最后一个元素"]},description:"返回序列中满足指定条件的最后一个元素",remarks:["如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 lastOrDefault 方法"],sees:[{apis:"IEnumerable",method:"lastOrDefault"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549138(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},53131:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"element",types:["any"]},{name:"start",types:["number"],defaultValue:"0"},{name:"comparer",types:["function","string"],defaultValue:"defaultStrictEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"number"},description:"法返回指定元素在数组中的最后一个的索引",sees:[{apis:"Enumerable.comparers",property:"strict"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{},{types:["function","string","symbol","number"]}]}]}]}},45601:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["找不到匹配元素时返回的默认值"]},{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的最后一个元素, 如果未找到匹配元素, 则返回 defaultValue"]},description:"返回序列中满足条件的最后一个元素. 如果未找到这样的元素, 则返回默认值",sees:[{apis:"IEnumerable",method:"last"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548915(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{},{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number","array","object"]}]}]}]}},27751:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"inner",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列联接的序列"]},{name:"resultSelector",types:["function"],descriptions:["用于从两个匹配元素创建结果元素的函数","其中参数 other 的值可能为 undefined"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"outerKeySelector",types:["function","string"],descriptions:["用于从源序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"innerKeySelector",types:["function","string"],descriptions:["用于从联接序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["通过对两个序列执行内部左联接获得的结果集合"]},description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"join",index:1},{apis:"IEnumerable",method:"groupJoin"},{apis:"IEnumerable",method:"rightJoin"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{defaultValue:"defaultJoinSelector"},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},81339:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"length",types:["number"],descriptions:["补充后的总长度","必须为正整数"]},{name:"value",types:["any"],descriptions:["补充的元素"]}],returns:{type:"IEnumerable",descriptions:["补充了指定内容后的新序列"]},description:"在一个序列的开始部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",remarks:["此方法通过延迟执行的方式实现","如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素"],sees:[{apis:"IEnumerable",method:"rightPad"}]}]}]}},28387:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"IEnumerable"},description:"创建一个新序列, 其结果是该数组中的每个元素调用一个提供的函数",sees:[{guide:"selector"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/map",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},94839:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最大值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"TResult",descriptions:["值序列的最大值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值",sees:[{apis:"IEnumerable",method:"min"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548659(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 max 来确定序列中的最大值。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 max 来确定序列中投影值的最大值。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",deprecated:"2.1.24",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]},{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最大值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"any",descriptions:["值序列的最大值对应的原序列中的元素"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素",sees:[{apis:"IEnumerable",method:"min"},{apis:"IEnumerable",method:"maxOrDefault"},{apis:"IEnumerable",method:"maxIndex"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548659(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 max 来确定序列中的最大值。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 max 来确定序列中投影值的最大值对应的元素。",script:{type:"javascript",href:"3.js"}}]}]}]}},62914:e=>{e.exports={historys:[{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最大值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"number",descriptions:["值序列的最大值对应的原序列中所在的索引位置"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中所在的索引位置",remarks:["如果原序列是一个空序列则返回 -1"],sees:[{apis:"IEnumerable",method:"max"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}]}]}]}},55248:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最大值的可比较的结果类型"]}],parameters:[{name:"defaultValue",types:["TResult"],descriptions:["如果序列中不包含元素时返回的默认值"]},{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"TResult",descriptions:["值序列的最大值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值，如果序列中不包含任何元素则返回一个默认值",sees:[{apis:"IEnumerable",method:"max"},{apis:"IEnumerable",method:"minOrDefault"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}],examples:[]}]},{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最大值的可比较的结果类型"]}],parameters:[{name:"defaultValue",types:["any"],descriptions:["如果序列中不包含元素时返回的默认值"]},{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"any",descriptions:["值序列的最大值对应的原序列中的元素"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最大值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",sees:[{apis:"IEnumerable",method:"max"},{apis:"IEnumerable",method:"maxIndex"},{apis:"IEnumerable",method:"minOrDefault"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}],examples:[]}]}]}},80605:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最小值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"TResult",descriptions:["值序列的最小值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值",sees:[{apis:"IEnumerable",method:"max"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548779(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 min 来确定序列中的最小值。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 min 来确定序列中投影值的最小值。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",deprecated:"2.1.24",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]},{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最小值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"any",descriptions:["值序列的最小值对应的原序列中的元素"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素",sees:[{apis:"IEnumerable",method:"max"},{apis:"IEnumerable",method:"minOrDefault"},{apis:"IEnumerable",method:"minIndex"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548659(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 min 来确定序列中的最小值。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 min 来确定序列中投影值的最小值对应的元素。",script:{type:"javascript",href:"3.js"}}]}]}]}},59877:e=>{e.exports={historys:[{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最小值的可比较的结果类型"]}],parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"number",descriptions:["值序列的最小值对应的原序列中所在的索引位置"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中所在的索引位置",sees:[{apis:"IEnumerable",method:"max"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}]}]}]}},6152:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最小值的可比较的结果类型"]}],parameters:[{name:"defaultValue",types:["TResult"],descriptions:["如果序列中不包含元素时返回的默认值"]},{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"TResult",descriptions:["值序列的最小值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值，如果序列中不包含任何元素则返回一个默认值",sees:[{apis:"IEnumerable",method:"min"},{apis:"IEnumerable",method:"maxOrDefault"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}],examples:[]}]},{since:"2.2.0",overloads:[{generics:[{name:"TResult",wheres:[{type:"number"},{type:"string"},{type:"IComparable"}],descriptions:["用于计算的最小值的可比较的结果类型"]}],parameters:[{name:"defaultValue",types:["any"],descriptions:["如果序列中不包含元素时返回的默认值"]},{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出可用于比较的数值"],defaultValue:"defaultSelector",declare:{returns:{type:"TResult"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于比较每个元素大小的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["TResult"]},{name:"other",types:["TResult"]}]}}],returns:{type:"any",descriptions:["值序列的最小值对应的原序列中的元素"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的最小值对应的原序列中的元素，如果序列中不包含任何元素则返回一个默认值",sees:[{apis:"IEnumerable",method:"min"},{apis:"IEnumerable",method:"minIndex"},{apis:"IEnumerable",method:"maxOrDefault"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"}],examples:[]}]}]}},14391:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"elementSelector",types:["function","string","symbol","number"],descriptions:["用于将每个源元素映射到组中的元素的函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"resultSelector",types:["function","string","symbol","number"],descriptions:["用于从每个组中创建结果值的函数"],defaultValue:"defaultResultSelector",declare:{returns:{type:"any"},parameters:[{name:"key",types:["any"]},{name:"grouping",types:["IGrouping"]}]}},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"IGrouping"}],descriptions:["对一组及其键的投影的结果的集合"]},description:"根据指定的键选择器函数对序列中相邻的相同元素进行分组, 并且从每个组及其键中创建结果值. 通过使用指定的比较器对键值进行比较, 并且通过使用指定的函数对每个组的元素进行投影",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"selectMany"},{apis:"IEnumerable",method:"groupBy"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.selectors",property:"value"},{apis:"Enumerable.selectors",method:"result"},{apis:"Enumerable.comparers",property:"equality"}]}]}]}},4522:e=>{e.exports={historys:[{since:"2.1.24.pre",overloads:[{lazy:!0,parameters:[{name:"splitPredicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",generics:[{name:"IChunk"}],descriptions:["包含输入序列中被所有满足条件的元素拆分成若干序列的新序列"]},description:"通过筛选器筛拆分序列,相邻的符合条件的元素之间将不会拆分成新的空序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{guide:"predicate"},{apis:"IChunk"},{apis:"IEnumerable",method:"split"}],examples:[]}]}]}},80416:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"type",types:["class","function","string"],descriptions:["筛选序列元素所根据的类型"]}],returns:{type:"IEnumerable",descriptions:["包含输入序列中的元素类型为指定类型的所有元素组成的新序列"]},description:"根据指定的类型筛选出的新序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{href:"https://msdn.microsoft.com/{language}/library/bb360913(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 ofType 来筛选序列中的元素。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{examples:[{script:{href:"1-2.1.19.js"}}]}]}]}},4239:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于从元素中提取键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["键进行大小比较的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IOrderedEnumerable",descriptions:["元素根据某个键进行升序排序后的结果序列"]},description:"按使用指定的比较器按升序对序列的元素进行排序",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"orderByDescending"},{apis:"IOrderedEnumerable"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549422(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 orderBy 序列的元素进行排序。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},70702:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于从元素中提取键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["键进行大小比较的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IOrderedEnumerable",descriptions:["元素根据某个键进行降序排序后的结果序列"]},description:"按使用指定的比较器按降序对序列的元素进行排序",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"orderBy"},{apis:"IOrderedEnumerable"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb548916(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 orderByDescending 对序列中使用转换函数和自定义比较器按降序对元素进行排序。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},67639:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"count",types:["number"],descriptions:["排列中的每个排列项的元素个数"]},{name:"repeatable",types:["boolean"],defaultValue:"false",descriptions:["指示排列项中的元素是否可重复"]}],returns:{type:"IEnumerable",generics:[{name:"IEnumerable"}],descriptions:["包含所有排列项的新序列"]},description:"从源序列中的抽取指定个数的元素组成一个排列项, 并由所有不同的排列项组成新的序列",remarks:["此方法通过延迟执行的方式实现"],warnings:["源序列中索引不相同的元素被视为不同的元素, 即使元素的值可能相同."],sees:[{apis:"IEnumerable",method:"combination"}],examples:[{description:"下面的代码示例演示如何使用 permutation 计算序列按指定数量的所有排列。",script:{type:"javascript",href:"1.js"}}]}]}]}},16031:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[],returns:{type:"any"},description:"从数组中删除最后一个元素, 并返回该元素的值",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/pop",title:"Mozilla MDN"}]}]}]}},93077:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"number",descriptions:["值序列的乘积","如果值序列不包含任何元素,返回NaN"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的乘积",sees:[{apis:"IEnumerable",method:"sum"},{apis:"Enumerable.selectors",property:"default"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},14246:e=>{e.exports={historys:[{since:"2.1.25",overloads:[{parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"number",descriptions:["输入序列中所有满足条件的元素占总元素个数的比例"]},description:"通过筛选器获取符合条件的元素占比",sees:[{apis:"IEnumerable",method:"skipProportion"},{apis:"IEnumerable",method:"takeProportion"}],examples:[{description:"下面的代码示例演示如何使用 proportion 来获取符合条件的元素占比。",script:{type:"javascript",href:"1.js"}}]}]}]}},92871:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"values",types:["any"],params:!0}],returns:{type:"number"},description:"将一个或多个元素添加到数组的末尾, 并返回数组的新长度",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/push",title:"Mozilla MDN"}]}]}]}},97721:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"count",types:["number"],descriptions:["新序列的长度","必须是正整数","为 0 时新序列包含原序列的全部元素"],defaultValue:0}],returns:{type:"IEnumerable",descriptions:["随机排序后的序列"]},description:"随机获取序列中的指定数量的元素,组成新的序列",remarks:["此方法通过延迟执行的方式实现"]}]}]}},69158:e=>{e.exports={historys:[{since:"2.1.25",overloads:[{parameters:[],returns:{type:"any",descriptions:["序列中随机的一个元素"]},description:"返回序列中随机的一个元素",remarks:["如果在源序列不包含任何元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 randomOrDefault 方法"],sees:[{apis:"IEnumerable",method:"randomOrDefault"}]}]},{since:"2.2.0",ref:!0,sees:[{},{apis:"IEnumerable",method:"randomProbability"}]}]}},60893:e=>{e.exports={historys:[{since:"2.2.0",overloads:[{parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出元素出现的概率或权重"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中随机的一个元素所在序列中的索引位置"]},description:"根据概率(权重)返回序列中随机的一个元素所在序列中的索引位置",remarks:["如果在源序列不包含任何元素, 则返回 -1","所有元素的概率(权重)可以是浮点数，概率(权重)之和也可以是浮点数，实际抽取的概率按照每个元素转换出的概率(权重)占总概率(权重)的比例进行计算"],sees:[{apis:"IEnumerable",method:"randomProbability"}]}]}]}},98033:e=>{e.exports={historys:[{since:"2.1.25",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["找不到元素时返回的默认值"]}],returns:{type:"any",descriptions:["序列中随机的一个元素. 如果未找到元素, 则返回 defaultValue"]},description:"返回序列中随机的一个元素. 如果未找到元素, 则返回默认值",sees:[{apis:"IEnumerable",method:"random"}]}]},{since:"2.2.0",ref:!0,sees:[{},{apis:"IEnumerable",method:"randomProbability"}]}]}},13628:e=>{e.exports={historys:[{since:"2.2.0",overloads:[{parameters:[{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出元素出现的概率或权重"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中随机的一个元素"]},description:"根据概率(权重)返回序列中随机的一个元素",remarks:["如果在源序列不包含任何元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 randomProbabilityOrDefault 方法","所有元素的概率(权重)可以是浮点数，概率(权重)之和也可以是浮点数，实际抽取的概率按照每个元素转换出的概率(权重)占总概率(权重)的比例进行计算"],sees:[{apis:"IEnumerable",method:"random"},{apis:"IEnumerable",method:"randomProbabilityOrDefault"},{apis:"IEnumerable",method:"randomIndexProbability"}]}]}]}},96589:e=>{e.exports={historys:[{since:"2.2.0",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["找不到元素时返回的默认值"]},{name:"selector",types:["function","string","symbol","number"],descriptions:["应用于每个元素的转换函数，用于转换出元素出现的概率或权重"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中随机的一个元素"]},description:"根据概率(权重)返回序列中随机的一个元素。 如果未找到元素，则返回默认值",remarks:["所有元素的概率(权重)可以是浮点数，概率(权重)之和也可以是浮点数，实际抽取的概率按照每个元素转换出的概率(权重)占总概率(权重)的比例进行计算"],sees:[{apis:"IEnumerable",method:"randomOrDefault"},{apis:"IEnumerable",method:"randomProbability"}]}]}]}},29329:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function"],declare:{returns:{type:"void"},parameters:[{name:"seed",types:["any"]},{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"initialValue",types:["any"]}],returns:{type:"IEnumerable"},description:"对累加器和数组的每个值(从左到右)应用一个函数, 以将其聚合为单个值",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",title:"Mozilla MDN"}]}]}]}},12032:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function"],declare:{returns:{type:"void"},parameters:[{name:"seed",types:["any"]},{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"initialValue",types:["any"]}],returns:{type:"IEnumerable"},description:"对累加器和数组的每个值(从右到左)应用一个函数, 以将其聚合为单个值",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight",title:"Mozilla MDN"}]}]}]}},69767:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,override:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["一个序列，其元素以相反顺序对应于输入序列的元素"]},description:"反转序列中元素的顺序",warnings:["如果开启对 Array 的扩展, 则 Array 对象原生的 reverse 方法也将返回 IEnumerable 对象, 而不只是 Array 对象"],sees:[{href:"https://msdn.microsoft.com/{language}/library/bb358497(v=vs.110).aspx",title:"Microsoft MSDN"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse",title:"Mozilla MDN"}]}]}]}},84916:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"inner",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要与源序列联接的序列"]},{name:"resultSelector",types:["function"],descriptions:["用于从两个匹配元素创建结果元素的函数","其中参数 element 的值可能为 undefined"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{name:"outerKeySelector",types:["function","string"],descriptions:["用于从源序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"innerKeySelector",types:["function","string"],descriptions:["用于从联接序列的每个元素提取联接键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["用于对键进行比较相等比较器"],defaultValue:"defaultEqualityComparer",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["通过对两个序列执行内部右联接获得的结果集合"]},description:"基于匹配键对两个序列的元素关联, 使用指定的相等比较器对键进行比较",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"join",index:1},{apis:"IEnumerable",method:"groupJoin"},{apis:"IEnumerable",method:"leftJoin"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.comparers",property:"equality"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{defaultValue:"defaultJoinSelector"},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},96529:e=>{e.exports={historys:[{since:"2.1.18",overloads:[{lazy:!0,parameters:[{name:"length",types:["number"],descriptions:["补充后的总长度","必须为正整数"]},{name:"value",types:["any"],descriptions:["补充的元素"]}],returns:{type:"IEnumerable",descriptions:["补充了指定内容后的新序列"]},description:"在一个序列的结束部分补充一定数量的指定的元素以生成新的序列,使得新生成的序列元素数量达到指定的数量",remarks:["此方法通过延迟执行的方式实现","如果原序列的元素数量已经达到或超过指定的数量,则新序列不会在原序列的基础上补充元素"],sees:[{apis:"IEnumerable",method:"leftPad"}]}]}]}},70663:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["一个序列，其元素以相反顺序对应于输入序列的元素"]},description:"将序列中的每个元素投影到新序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"selectMany"},{guide:"selector"},{href:"https://msdn.microsoft.com/{language}/library/bb534869(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 select 对序列中的每个元素进行投影。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 select 对一系列值进行投影，并使用每个元素的索引。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},97836:e=>{e.exports={historys:[{since:"2.1.16",overloads:[{lazy:!0,parameters:[{name:"collectionSelector",types:["function","string"],descriptions:["要应用于输入序列中的每个元素转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"IEnumerable"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"resultSelector",types:["function"],descriptions:["要应用于中间序列的每个元素的转换函数"],defaultValue:"defaultResultSelector",declare:{returns:{type:"any"},parameters:[{name:"sourceElement",types:["any"]},{name:"collectionElement",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["一对多转换函数对输入序列中的每个元素调用的结果序列"]},description:"一个序列的每个元素投影为一个序列, 并将结果展开合并为一个结果序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"select"},{apis:"IEnumerable",method:"groupBy"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.selectors",method:"result"},{href:"https://msdn.microsoft.com/{language}/library/bb534732(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并使用每个外部元素的索引。",script:{type:"javascript",href:"2.js"}},{description:"下面的代码示例演示如何使用 selectMany 在数组上执行的一对多投影并且使用结果选择器函数来保持结果元素与源序列的对应关系。",script:{type:"javascript",href:"3.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},65842:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{lazy:!0,parameters:[{name:"childrenSelector",types:["function","string","symbol","number"],descriptions:["用于提取每个元素的子节点集合的函数"],defaultValue:"defaultChildrenSelector",declare:{returns:{type:"IEnumerable"},parameters:[{name:"element",types:["any"]}]}},{name:"valueSelector",types:["function","string","symbol","number"],descriptions:["用于将每个源节点映射到结果序列中的元素的函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["展开后的序列"]},description:"将一个递归结构的序列的展开为一个一维解构的序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"selectMany"},{apis:"IEnumerable",method:"combine"},{apis:"Enumerable.selectors",property:"children"},{apis:"Enumerable.selectors",property:"value"}]}]}]}},76959:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要做对比的另一个序列"]},{name:"comparer",types:["function","string"],descriptions:["用于对值进行比较的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"boolean",descriptions:["如果两个源序列的长度相等, 并且其相应元素根据 comparer 比较器比较的结果都为相等, 则返回true, 否则返回 false"]},description:"确定两个序列通过使用指定的相等比较器比较它们的元素是否相等",sees:[{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb342073(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 sequenceEqual 以确定两个序列是否相等。",script:{type:"javascript",href:"1.js"}},{description:"下面的示例演示如何实现可在 sequenceEqual 方法中使用的相等比较器，并通过此比较器确定两个序列是否相等。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},18396:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[],returns:{type:"any"},description:"从数组中删除第一个元素, 并返回该元素的值",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/shift",title:"Mozilla MDN"}]}]}]}},91804:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的唯一个元素"]},description:"返回序列中满足指定条件的唯一元素. 如果有多个这样的元素存在, 则会引发异常",remarks:["如果在源序列中找不到任何匹配的元素, 则会引发异常. 如果希望在找不到任何元素时返回默认值, 请使用 singleOrDefault 方法"],sees:[{apis:"IEnumerable",method:"singleOrDefault"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb535118(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 single 来选择数组的唯一元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示 single 在序列不包含恰好一个元素时引发异常。",script:{type:"javascript",href:"2.js"}},{description:"下面的代码示例演示如何使用 single 来选择数组中满足条件的唯一元素。",script:{type:"javascript",href:"3.js"}},{description:"下面的代码示例演示 single 在序列不包含恰好一个元素满足条件时引发异常。",script:{type:"javascript",href:"4.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},85115:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"defaultValue",types:["any"],descriptions:["找不到匹配元素时返回的默认值"]},{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],defaultValue:"defaultPredicate",declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"any",descriptions:["序列中通过指定函数检测的唯一元素. 如果未找到匹配元素, 则返回 defaultValue"]},description:"返回序列中满足条件的唯一元素. 如果未找到这样的元素, 则返回默认值. 如果有多个元素满足该条件, 此方法将引发异常",sees:[{apis:"IEnumerable",method:"single"},{apis:"Enumerable.predicates",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549274(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 singleOrDefault 来选择数组的唯一元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示 singleOrDefault 在序列不包含恰好一个元素时时将返回默认值。",script:{type:"javascript",href:"2.js"}},{description:"下面的代码示例演示如何使用 singleOrDefault 来选择数组中满足条件的唯一元素。",script:{type:"javascript",href:"3.js"}},{description:"下面的代码示例演示 singleOrDefault 在序列不包含恰好一个元素满足条件时时将返回默认值。",script:{type:"javascript",href:"4.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{},{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number","array","object"]}]}]}]}},59559:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"count",types:["number"],descriptions:["返回剩余元素前要跳过的元素数量"]}],returns:{type:"IEnumerable",descriptions:["包含输入序列中的指定索引后出现的所有元素的新序列"]},description:"跳过指定的数量的序列中的元素，然后返回剩余元素",remarks:["此方法通过延迟执行的方式实现","如果源序列中元素的个数少于count个, 则返回空序列","如果count小于或等于0, 则返回包含全部源序列元素的新序列"],sees:[{apis:"IEnumerable",method:"skipWhile"},{apis:"IEnumerable",method:"take"},{href:"https://msdn.microsoft.com/{language}/library/bb358985(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 skip 跳过指定的数量的已排序数组中的元素并返回其余元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},56380:e=>{e.exports={historys:[{since:"2.1.25",overloads:[{lazy:!0,parameters:[{name:"proportion",types:["number"],descriptions:["要忽略的元素占总元素个数的比例"]}],returns:{type:"IEnumerable",descriptions:["忽略从输入序列的起始位置开始, 指定的比例的连续元素后, 剩余元素组成的新序列"]},description:"从序列的开头忽略指定的比例的连续元素, 返回剩余元素",remarks:["此方法通过延迟执行的方式实现","如果参数proportion大于等于1, 则返回空序列","如果proportion小于等于0, 则返回包含全部源序列元素的新序列"],sees:[{apis:"IEnumerable",method:"skip"},{apis:"IEnumerable",method:"skipWhile"},{apis:"IEnumerable",method:"skipSame"},{apis:"IEnumerable",method:"takeProportion"}],examples:[{description:"下面的代码示例演示如何使用 skipProportion 从序列的开头忽略指定比例的元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},89728:e=>{e.exports={historys:[{since:"2.1.24",overloads:[{lazy:!0,parameters:[{name:"comparer",types:["function","string","number","symbol"],descriptions:["用于检测与第一个元素是否相同的相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["跳过从源序列第一个元素开始, 连续所有与第一个元素相同的元素, 后剩余的元素组成的序列"]},description:"跳过序列开头与第一个元素相同的所有元素，然后返回剩余元素",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"skip"},{apis:"IEnumerable",method:"skipWhile"},{apis:"IEnumerable",method:"takeSame"},{guide:"comparer"}],examples:[]}]}]}},39847:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["跳过从源序列第一个元素开始, 连续的所有执行 predicate 检测返回 true 的元素, 后剩余的元素组成的序列"]},description:"跳过序列中指定条件为 true 的元素，然后返回剩余元素",remarks:["此方法通过延迟执行的方式实现","如果源序列中所有元素执行 predicate 检测时都返回 true, 则返回空序列"],sees:[{apis:"IEnumerable",method:"skip"},{apis:"IEnumerable",method:"takeWhile"},{guide:"predicate"},{href:"https://msdn.microsoft.com/{language}/library/bb549288(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 skipWhile 跳过数组开头部分连续的通过条件测试的元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 skipWhile 跳过一个数组开头部分取决于元素的索引某个条件为真的元素。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},77504:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"start",types:["number"],defaultValue:"0"},{name:"end",types:["number"],defaultValue:"infinity"}],returns:{type:"IEnumerable"},description:"将数组的一部分浅拷贝, 返回到从开始到结束(不包括结束)选择的新数组对象",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/slice",title:"Mozilla MDN"}]}]}]}},14133:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"callback",types:["function","string"],declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"boolean"},description:"测试数组中的某些元素是否通过了指定函数的测试",sees:[{guide:"predicate"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/some",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},6289:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"comparer",types:["function","string"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"number"},description:"在适当的位置对数组的元素进行排序, 并返回数组",sees:[{apis:"Enumerable.comparers",property:"default"},{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",title:"Mozilla MDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},25502:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"start",types:["number"]},{name:"count",types:["number"],defaultValue:"infinity"},{name:"values",types:["any"],params:!0}],returns:{type:"IEnumerable"},description:"通过删除现有元素和/或添加新元素来更改数组的内容",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/splice",title:"Mozilla MDN"}]}]}]}},63423:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"splitPredicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",generics:[{name:"IChunk"}],descriptions:["包含输入序列中被所有满足条件的元素拆分成若干序列的新序列"]},description:"通过筛选器筛拆分序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{guide:"predicate"},{apis:"IChunk"}],examples:[]}]},{ref:!0,since:"2.1.24.pre",overloads:[{sees:[{},{},{apis:"IEnumerable",method:"nearSplit"}]}]}]}},73792:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"selector",types:["function","string"],descriptions:["应用于每个元素的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"number",descriptions:["值序列的和值"]},description:"计算通过对序列中的每个元素调用转换函数获得的新的值序列的和值",sees:[{apis:"IEnumerable",method:"average"},{apis:"Enumerable.selectors",property:"default"},{href:"https://msdn.microsoft.com/{language}/library/bb549046(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 sum 序列的值的和。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 sum 序列的投影的值的和。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]}]}]}]}},31668:e=>{e.exports={historys:[{since:"2.1.21",overloads:[{lazy:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["需要与源序列合并计算对称差分的序列"]},{name:"comparer",types:["function","string","symbol","number"],descriptions:["用于判定两个序列元素的值是否相等的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"IEnumerable",descriptions:["包含这两个序列不出现在对方序列中的所有元素的集合"]},description:"生成两个序列的对称差分",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"Enumerable.comparers",property:"equality"}]}]}]}},16362:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"count",types:["number"],descriptions:["要返回的元素数量"]}],returns:{type:"IEnumerable",descriptions:["包含从输入序列的起始位置开始, 指定的数量的连续元素组成的新序列"]},description:"从序列的开头返回指定的数量的连续元素",remarks:["此方法通过延迟执行的方式实现","如果源序列中元素的个数少于count个, 则返回包含全部源序列元素的新序列","如果count小于或等于0, 则返回空序列"],sees:[{apis:"IEnumerable",method:"skip"},{apis:"IEnumerable",method:"takeWhile"},{href:"https://msdn.microsoft.com/{language}/library/bb503062(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 take 从序列的开头返回元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},46982:e=>{e.exports={historys:[{since:"2.1.25",overloads:[{lazy:!0,parameters:[{name:"proportion",types:["number"],descriptions:["要返回的元素占总元素个数的比例"]}],returns:{type:"IEnumerable",descriptions:["包含从输入序列的起始位置开始, 指定的比例的连续元素组成的新序列"]},description:"从序列的开头返回指定的比例的连续元素",remarks:["此方法通过延迟执行的方式实现","如果参数proportion大于等于1, 则返回包含全部源序列元素的新序列","如果proportion小于等于0, 则返回空序列"],sees:[{apis:"IEnumerable",method:"take"},{apis:"IEnumerable",method:"takeWhile"},{apis:"IEnumerable",method:"takeSame"},{apis:"IEnumerable",method:"skipProportion"}],examples:[{description:"下面的代码示例演示如何使用 takeProportion 从序列的开头返回指定比例的元素。",script:{type:"javascript",href:"1.js"}}]}]}]}},41924:e=>{e.exports={historys:[{since:"2.1.24",overloads:[{lazy:!0,parameters:[{name:"comparer",types:["function","string","number","symbol"],descriptions:["用于检测与第一个元素是否相同的相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["获取从源序列第一个元素开始, 连续所有与第一个元素相同的元素, 组成新的元素序列"]},description:"捡取序列开头与第一个元素相同的所有元素，返回被捡取的所有元素，含第一个元素",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"take"},{apis:"IEnumerable",method:"takeWhile"},{apis:"IEnumerable",method:"skipSame"},{guide:"comparer"}],examples:[]}]}]}},30705:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["包含输入序列中出现检测不能够通过在元素之前的所有元素组成的新序列"]},description:"返回序列中从起始位置开始指定的条件为 true 的连续元素",remarks:["此方法通过延迟执行的方式实现","如果源序列中第一个元素执行 predicate 检测时返回 false, 则返回空序列"],sees:[{apis:"IEnumerable",method:"skipWhile"},{apis:"IEnumerable",method:"take"},{guide:"predicate"},{href:"https://msdn.microsoft.com/{language}/library/bb548775(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 takeWhile 从序列的开头返回通过条件测试的元素。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 takeWhile 从序列的开头返回元素，只要使用该元素与其索引某个条件为真。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},47454:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[],returns:{type:"array",descriptions:["一个包含输入序列中的所有元素的数组"]},description:"使用源序列创建一个数组",sees:[{href:"https://msdn.microsoft.com/{language}/library/bb298736(v=vs.110).aspx",title:"Microsoft MSDN"}]}]}]}},71695:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"valueSelector",types:["function","string"],descriptions:["用于从每个元素产生结果元素值的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"Directory",descriptions:["根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象"]},description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",sees:[{apis:"IEnumerable",method:"toObject"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"same"},{apis:"Directory"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},26712:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"BinaryTree",descriptions:["一个二叉树"]},description:"创建一个完全二叉树,使得此二叉树的中序遍历结果与源序列一致",remarks:["可以理解为树形结构中序遍历的逆运算"],sees:[]}]}]}},52174:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"valueSelector",types:["function","string"],descriptions:["用于从每个元素产生结果元素值的转换函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"Lookup",descriptions:["根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象"]},description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",sees:[{apis:"Lookup"},{apis:"Enumerable.selectors",property:"default"},{apis:"Enumerable.comparers",property:"same"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},3174:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"string"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"valueSelector",types:["function","string"],descriptions:["用于从每个元素产生结果元素值的转换函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["string"]},{name:"other",types:["string"]}]}}],returns:{type:"any",descriptions:["提取出的 Object 对象"]},description:"从 IEnumerable 中获取一个对象",sees:[{apis:"IEnumerable",method:"toDirectory"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.selectors",property:"value"},{apis:"Enumerable.comparers",property:"same"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},72579:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"BinaryTree",descriptions:["一个二叉树"]},description:"创建一个完全二叉树,使得此二叉树的后序遍历结果与源序列一致",remarks:["可以理解为树形结构后序遍历的逆运算"],sees:[]}]}]}},87125:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"BinaryTree",descriptions:["一个二叉树"]},description:"创建一个完全二叉树,使得此二叉树的前序遍历结果与源序列一致",remarks:["可以理解为树形结构前序遍历的逆运算"],sees:[]}]}]}},45263:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["构成并集的第二个序列"]},{name:"comparer",types:["function","string"],descriptions:["用于判定两个序列元素的值是否相等的相等比较器"],defaultValue:"defaultEqualityComparer",declare:{parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}],returns:{type:"boolean"}}}],returns:{type:"IEnumerable",descriptions:["包含这两个序列的元素的并集的序列"]},description:"生成两个序列的并集",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"union"},{apis:"IEnumerable",method:"intersect"},{apis:"Enumerable.comparers",property:"equality"},{href:"https://msdn.microsoft.com/{language}/library/bb358407(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 union 以获取两个整数的序列的并集。",script:{type:"javascript",href:"1.js"}},{description:"下面的示例演示如何实现在 union 方法中可用的相等比较器，并使用此比较器获取两个序列的并集。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{},{types:["function","string","symbol","number"]}]}]}]}},55488:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"values",types:["any"],params:!0}],returns:{type:"number"},description:"将一个或多个元素添加到数组的开头, 并返回新数组的长度",sees:[{href:"https://developer.mozilla.org/{language}/docs/Web/JavaScript/Reference/Global_Objects/Array/unshift",title:"Mozilla MDN"}]}]}]}},94640:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["包含输入序列中所有满足条件的元素组成的新序列"]},description:"通过筛选器筛选值序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{guide:"predicate"},{href:"https://msdn.microsoft.com/{language}/library/bb549418(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 where 来筛选序列。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 where 基于一个涉及到每个元素的索引的筛选器来筛选序列。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.17",ref:!0,overloads:[{parameters:[{types:["function","string","array","object"]}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number","array","object"]}]}]}]}},49360:e=>{e.exports={historys:[{since:"2.1.20",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"count",types:["number"],defaultValue:0,descriptions:["需要剔除的数量, 默认全部剔除"]}],returns:{type:"IEnumerable",descriptions:["剔除输入序列中满足条件的指定数量的元素组成的新序列"]},description:"通过筛选器剔除序列中满足条件的一定数量的元素",remarks:["此方法通过延迟执行的方式实现"],sees:[{guide:"predicate"}]}]}]}},52236:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"other",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要合并的第二个序列"]},{name:"resultSelector",types:["function"],descriptions:["一个指定如何合并来自两个序列的元素的函数"],declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]},{name:"index",types:["number"]}]}}],returns:{type:"IEnumerable",descriptions:["包含合并的两个输入序列的元素组成的新序列"]},description:"通过依次合并元素的方式合并两个序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{guide:"selector"},{href:"https://msdn.microsoft.com/{language}/library/dd267698(v=vs.110).aspx",title:"Microsoft MSDN"}],examples:[{description:"下面的代码示例演示如何使用 zip 方法以合并两个序列。",script:{type:"javascript",href:"1.js"}}]}]}]}},69992:e=>{e.exports={historys:[{type:"number",since:"2.1.15",override:!0,readonly:!0,description:"所包含的元素个数",sees:[{apis:"IEnumerable",property:"size"},{apis:"IEnumerable",method:"count"}]}]}},24472:e=>{e.exports={historys:[{type:"number",since:"2.1.15",readonly:!0,description:"所包含的元素个数",sees:[{apis:"IEnumerable",property:"length"},{apis:"IEnumerable",method:"count"}]}]}},83158:e=>{e.exports={type:"interface",since:"2.1.15",extends:[],implements:[],name:"IEnumerator",properties:[{name:"current",historys:[{since:"2.1.15",deprecated:0,description:"当前游标所指向的元素",readonly:!0}]}],methods:[{name:"moveNext",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"将游标移动到下一个元素, 并返回状态",parameters:[]}]}]},{name:"reset",historys:[{since:"2.1.15",deprecated:0,overloads:[{description:"重置 IEnumerator 对象, 将游标重置为指向第一个元素",parameters:[]}]}]}]}},28547:e=>{e.exports={type:"interface",since:"2.1.15",extends:[],implements:[]}},80470:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["如果游标成功移动至下一个元素, 则返回true, 否则返回false"]},description:"将游标移动到下一个元素, 并返回状态"}]}]}},22444:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{parameters:[],returns:{type:"void"},description:"重置 IEnumerator 对象, 将游标重置为指向第一个元素"}]}]}},53760:e=>{e.exports={historys:[{since:"2.1.15",readonly:!0,description:"当前游标所指向的元素"}]}},59381:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[],name:"IGrouping",properties:[{name:"key",historys:[{since:"2.1.15",deprecated:"2.1.18",description:"此分组的key"},{since:"2.1.19",deprecated:0,readonly:!0}]}],methods:[]}},58123:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[]}},43061:e=>{e.exports={historys:[{type:"any",since:"2.1.15",description:"此分组的key"},{since:"2.1.19",readonly:!0}]}},34697:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[],name:"IMapEnumerable",properties:[],methods:[{name:"forEach",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"遍历序列中的每个元素, 使用元素执行指定的操作",parameters:[{name:"action"},{name:"thisArg"}]}]}]},{name:"toDirectory",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]},{name:"toLookup",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{override:!0,description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{override:!0,description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",parameters:[{name:"keySelector"},{name:"valueSelector"},{name:"comparer"}]}]}]}]}},87008:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[]}},18274:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"action",types:["function"],descriptions:["循环的执行体"],defaultValue:"defaultAction",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"key",types:["any"]},{name:"source",types:["IEnumerable"]}]}},{name:"thisArg",types:["any"]}],returns:{type:"void"},description:"遍历序列中的每个元素, 使用元素执行指定的操作",sees:[{apis:"IEnumerable",method:"forEach"},{apis:"Enumerable.actions",property:"default"}]}]}]}},61530:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"valueSelector",types:["function","string"],descriptions:["用于从每个元素产生结果元素值的转换函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"Directory",descriptions:["根据指定的键选择器函数、 比较器和元素选择器函数创建的 Directory 对象"]},description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Directory 对象",sees:[{apis:"IEnumerable",method:"toDirectory"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.selectors",property:"value"},{apis:"Enumerable.comparers",property:"same"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},64910:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于提取每个元素的键的函数"],defaultValue:"defaultKeySelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"valueSelector",types:["function","string"],descriptions:["用于从每个元素产生结果元素值的转换函数"],defaultValue:"defaultValueSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"Lookup",descriptions:["根据指定的键选择器函数、 比较器和元素选择器函数创建的 Lookup 对象"]},description:"根据指定的键选择器函数、 比较器和元素选择器函数创建一个 Lookup 对象",sees:[{apis:"IEnumerable",method:"toLookup"},{apis:"Enumerable.selectors",property:"key"},{apis:"Enumerable.selectors",property:"value"},{apis:"Enumerable.comparers",property:"same"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},86019:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[],name:"IOrderedEnumerable",properties:[],methods:[{name:"thenBy",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"执行后续排序中使用指定的比较器按升序对序列的元素",parameters:[{name:"keySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"执行后续排序中使用指定的比较器按升序对序列的元素",parameters:[{name:"keySelector"},{name:"comparer"}]}]}]},{name:"thenByDescending",historys:[{since:"2.1.15",deprecated:"2.1.18",overloads:[{description:"执行后续排序中使用指定的比较器按降序对序列的元素",parameters:[{name:"keySelector"},{name:"comparer"}]}]},{since:"2.1.19",deprecated:0,overloads:[{description:"执行后续排序中使用指定的比较器按降序对序列的元素",parameters:[{name:"keySelector"},{name:"comparer"}]}]}]}]}},59757:e=>{e.exports={type:"interface",since:"2.1.15",extends:["IEnumerable"],implements:[]}},60427:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于从元素中提取键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["键进行大小比较的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IOrderedEnumerable",descriptions:["元素根据某个键进行升序排序后的结果序列"]},description:"执行后续排序中使用指定的比较器按升序对序列的元素",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"orderBy"},{href:"https://msdn.microsoft.com/{language}/library/bb534500(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},58045:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{lazy:!0,parameters:[{name:"keySelector",types:["function","string"],descriptions:["用于从元素中提取键的函数"],defaultValue:"defaultSelector",declare:{returns:{type:"any"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"]}]}},{name:"comparer",types:["function","string"],descriptions:["键进行大小比较的大小比较器"],defaultValue:"defaultComparer",declare:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IOrderedEnumerable",descriptions:["元素根据某个键进行降序排序后的结果序列"]},description:"执行后续排序中使用指定的比较器按降序对序列的元素",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"IEnumerable",method:"orderByDescending"},{href:"https://msdn.microsoft.com/{language}/library/bb534489(v=vs.110).aspx",title:"Microsoft MSDN"}]}]},{since:"2.1.19",ref:!0,overloads:[{parameters:[{types:["function","string","symbol","number"]},{types:["function","string","symbol","number"]}]}]}]}},29707:e=>{e.exports={type:"interface",since:"2.1.22",extends:["IEnumerable"],name:"ITree",properties:[{name:"children",historys:[{since:"2.1.22",deprecated:0,description:"包含当前节点所有子节点的集合",readonly:!0}]},{name:"value",historys:[{since:"2.1.22",deprecated:0,description:"当前节点的值",readonly:!0}]},{name:"values",historys:[{since:"2.1.22",deprecated:0,description:"包含当前节点所有子节点值的集合",readonly:!0}]}],methods:[{name:"asBinary",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"将一个满足二叉树结构的树形结构转化为一个二叉树",parameters:[]}]}]},{name:"breadthSearch",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过广度优先遍历算法查找树形结构,找到满足条件的元素",parameters:[{name:"predicate"}]}]}]},{name:"breadthSubTree",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过广度优先遍历算法遍历树形结构,获取所有满足条件的子树组成的序列",parameters:[{name:"predicate"}]}]}]},{name:"breadthTraverse",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过广度优先遍历算法遍历树形结构,将其展开得到新的值序列",parameters:[]}]}]},{name:"degree",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"获取节点的度(子节点数),只计算满足条件的子节点",parameters:[{name:"predicate"}]}]}]},{name:"depth",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"获取树的深度,只计算符合条件的子孙节点",parameters:[{name:"predicate"}]}]}]},{name:"depthSearch",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过深度优先遍历算法查找树形结构,找到满足条件的元素",parameters:[{name:"predicate"}]}]}]},{name:"depthSubTree",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过深度优先遍历算法遍历树形结构,获取所有满足条件的子树组成的序列",parameters:[{name:"predicate"}]}]}]},{name:"depthTraverse",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"通过深度优先遍历算法遍历树形结构,将其展开得到新的值序列",parameters:[]}]}]},{name:"getChild",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"返回当前节点所有子节点的指定索引处的节点",parameters:[{name:"index"}]}]}]},{name:"getParent",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点的父节点的值",parameters:[{name:"node"}]}]}]},{name:"getParentNode",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点的父节点,返回以其父节点为根的子树",parameters:[{name:"node"}]}]}]},{name:"getValue",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"返回当前节点所有子节点的指定索引处的节点值",parameters:[{name:"index"}]}]}]},{name:"isAncestorOf",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断一个节点是否是另一个节点的祖先节点",parameters:[{name:"node"}]}]}]},{name:"isBinary",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断树形结构是否是二叉树，即所有的节点的度(子节点数)不超过2",parameters:[]}]}]},{name:"isChildOf",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"判断一个节点是否是另一个节点的子节点",parameters:[{name:"root"}]}]}]},{name:"isCompleteBinary",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断树形结构是否是完全二叉树。若设二叉树的深度为 h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边",parameters:[]}]}]},{name:"isDescendantOf",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断一个节点是否是另一个节点的子孙节点",parameters:[{name:"root"}]}]}]},{name:"isFullBinary",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断树形结构是否是满二叉树，即所有的节点的度(子节点数)为0或者为2",parameters:[]}]}]},{name:"isParentOf",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"判断一个节点是否是另一个节点的父节点",parameters:[{name:"node"}]}]}]},{name:"isPerfectBinary",historys:[{since:"2.1.22",deprecated:0,overloads:[{description:"判断树形结构是否是完美二叉树，即一个每一个层的结点数都达到最大值的二叉树",parameters:[]}]}]},{name:"lowestAncestor",historys:[{since:"2.1.22",deprecated:"2.1.22",overloads:[{description:"在树形结构中查找所有指定节点的最小公共祖先节点值",parameters:[{name:"tree"},{name:"trees"}]}]},{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找所有指定节点的最小公共祖先节点值",parameters:[{name:"nodes"}]}]}]},{name:"next",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之后的满足条件的同辈节点的值",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"nextAll",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之后的满足条件的同辈节点的值序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"nextAllNodes",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之后的满足条件的同辈节点序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"nextNode",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之后的满足条件的同辈节点",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"path",historys:[{since:"2.1.22",deprecated:"2.1.22",overloads:[{description:"获取从祖先节点到当前节点路径上所有的节点值序列",parameters:[{name:"root"}]}]},{since:"2.1.23",deprecated:0,overloads:[{description:"获取从祖先节点到当前节点路径上所有的节点值序列",parameters:[{name:"root"}]}]}]},{name:"pathNodes",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"获取从祖先节点到当前节点路径上所有的节点序列",parameters:[{name:"root"}]}]}]},{name:"pathNodesTo",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"获取从当前节点到子孙节点路径上所有的节点序列",parameters:[{name:"root"}]}]}]},{name:"pathTo",historys:[{since:"2.1.22",deprecated:"2.1.22",overloads:[{description:"获取从当前节点到子孙节点路径上所有的节点值序列",parameters:[{name:"root"}]}]},{since:"2.1.23",deprecated:0,overloads:[{description:"获取从当前节点到子孙节点路径上所有的节点值序列",parameters:[{name:"root"}]}]}]},{name:"prev",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之前的满足条件的同辈节点的值",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"prevAll",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之前的满足条件的同辈节点的值序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"prevAllNodes",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之前的满足条件的同辈节点序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"prevNode",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点之前的满足条件的同辈节点",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"siblingNodes",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点的满足条件的同辈节点序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"siblings",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"在树形结构中查找指定节点的满足条件的同辈节点的值序列",parameters:[{name:"node"},{name:"predicate"}]}]}]},{name:"toValue",historys:[{since:"2.1.23",deprecated:0,overloads:[{description:"将树形结构转化为一个 object 对象 ( JSON 数据 ). 每个节点生成一个新对象, 使用节点值设置函数设置对象的值, 并将所有子节点生成的对象联合成数组通过设置器设置到节点对象中.",parameters:[{name:"childrenSetter"},{name:"valueSetter"}]}]}]}]}},11531:e=>{e.exports={type:"interface",since:"2.1.22",extends:["IEnumerable"]}},74827:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"BinaryTree",descriptions:["转化后的二叉树"]},description:"将一个满足二叉树结构的树形结构转化为一个二叉树",sees:[{apis:"ITree",method:"isBinary"}],examples:[{description:"下面的代码示例演示如何使用 asBinary 将一个树转化为一个二叉树。",script:{type:"javascript",href:"1.js"}}]}]}]}},115:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["通过广度优先遍历算法查找树形结构得到第一个满足条件的元素"]},description:"通过广度优先遍历算法查找树形结构,找到满足条件的元素",sees:[{apis:"ITree",method:"breadthTraverse"},{apis:"ITree",method:"depthSearch"}],examples:[{description:"下面的代码示例演示如何使用 breadthSearch 对一个树进行广度优先遍历查找。",script:{type:"javascript",href:"1.js"}}]}]}]}},61079:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["满足指定条件的子树组成的序列"]},description:"通过广度优先遍历算法遍历树形结构,获取所有满足条件的子树组成的序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"ITree",method:"depthSubTree"}],examples:[{description:"下面的代码示例演示如何使用 breadthSubTree 获得所有满足条件的子树。",script:{type:"javascript",href:"1.js"}}]}]}]}},35817:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["一个通过广度优先遍历算法遍历树形结构得到元素序列"]},description:"通过广度优先遍历算法遍历树形结构,将其展开得到新的值序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"ITree",method:"breadthSearch"},{apis:"ITree",method:"depthTraverse"}],examples:[{description:"下面的代码示例演示如何使用 breadthTraverse 对一个树进行广度优先遍历。",script:{type:"javascript",href:"1.js"}}]}]}]}},52934:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["当前节点的度"]},description:"获取节点的度(子节点数),只计算满足条件的子节点",sees:[{apis:"ITree",method:"depth"}],examples:[{description:"下面的代码示例演示如何使用 degree 获取一个节点的度。",script:{type:"javascript",href:"1.js"}}]}]}]}},95229:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["当前树的深度"]},description:"获取树的深度,只计算符合条件的子孙节点",sees:[{apis:"ITree",method:"degree"}],examples:[{description:"下面的代码示例演示如何使用 depth 获取一个树的深度。",script:{type:"javascript",href:"1.js"}}]}]}]}},288:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["通过深度优先遍历算法查找树形结构得到第一个满足条件的元素"]},description:"通过深度优先遍历算法查找树形结构,找到满足条件的元素",sees:[{apis:"ITree",method:"depthTraverse"},{apis:"ITree",method:"breadthSearch"}],examples:[{description:"下面的代码示例演示如何使用 depthSearch 对一个树进行深度优先遍历查找。",script:{type:"javascript",href:"1.js"}}]}]}]}},1242:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个元素是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["满足指定条件的子树组成的序列"]},description:"通过深度优先遍历算法遍历树形结构,获取所有满足条件的子树组成的序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"ITree",method:"breadthSubTree"}],examples:[{description:"下面的代码示例演示如何使用 depthSubTree 获得所有满足条件的子树。",script:{type:"javascript",href:"1.js"}}]}]}]}},95934:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[],returns:{type:"IEnumerable",descriptions:["一个通过深度优先遍历算法遍历树形结构得到元素序列"]},description:"通过深度优先遍历算法遍历树形结构,将其展开得到新的值序列",remarks:["此方法通过延迟执行的方式实现"],sees:[{apis:"ITree",method:"depthSearch"},{apis:"ITree",method:"breadthTraverse"}],examples:[{description:"下面的代码示例演示如何使用 breadthTraverse 对一个树进行深度优先遍历。",script:{type:"javascript",href:"1.js"}}]}]}]}},4064:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"index",types:["number"],descriptions:["要检索的从零开始的子节点索引"]}],returns:{type:"ITree",descriptions:["子节点中指定位置处的节点"]},description:"返回当前节点所有子节点的指定索引处的节点",remarks:["如果 index 超出范围, 此方法将引发异常."],sees:[{apis:"ITree",method:"getValue"},{apis:"IEnumerable",method:"elementAt"}],examples:[{description:"下面的代码示例演示如何使用 getChild 以返回特定位置处的节点。",script:{type:"javascript",href:"1.js"}}]}]}]}},70074:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其父节点值的子节点"]}],returns:{type:"any",descriptions:["指定节点的父节点值"]},description:"在树形结构中查找指定节点的父节点的值",sees:[{apis:"ITree",method:"getParentNode"}],examples:[{description:"下面的代码示例演示如何使用 getParent 查找指定节点父节点的值。",script:{type:"javascript",href:"1.js"}}]}]}]}},92678:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其父节点的子节点"]}],returns:{type:"ITree",descriptions:["指定节点的父节点"]},description:"在树形结构中查找指定节点的父节点,返回以其父节点为根的子树",sees:[{apis:"ITree",method:"getParent"}],examples:[]}]}]}},34960:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"index",types:["number"],descriptions:["要检索的从零开始的子节点索引"]}],returns:{type:"ITree",descriptions:["子节点中指定位置处的节点值"]},description:"返回当前节点所有子节点的指定索引处的节点值",remarks:["如果 index 超出范围, 此方法将引发异常."],sees:[{apis:"ITree",method:"getChild"}],examples:[{description:"下面的代码示例演示如何使用 getValue 以返回特定位置处的节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},76906:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用来校验节点关系的子孙节点或节点的值"]}],returns:{type:"boolean",descriptions:["一个节点是否为另一个节点的祖先节点"]},description:"判断一个节点是否是另一个节点的祖先节点",sees:[{apis:"ITree",method:"isDescendantOf"}],examples:[{description:"下面的代码示例演示如何使用 isAncestorOf 判断节点是否为指定节点的祖先节点。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 isAncestorOf 判断值是否为指定节点值的祖先节点。",script:{type:"javascript",href:"2.js"}}]}]}]}},66225:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否是二叉树"]},description:"判断树形结构是否是二叉树，即所有的节点的度(子节点数)不超过2",sees:[{apis:"ITree",method:"asBinary"},{apis:"ITree",method:"isFullBinary"},{apis:"ITree",method:"isCompleteBinary"},{apis:"ITree",method:"isPerfectBinary"}],examples:[{description:"下面的代码示例演示如何使用 isBinary 判断一个树是否为二叉树。",script:{type:"javascript",href:"1.js"}}]}]}]}},23725:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"root",types:["ITree"],descriptions:["用来校验节点关系的父节点"]}],returns:{type:"boolean",descriptions:["一个节点是否为另一个节点的子节点"]},description:"判断一个节点是否是另一个节点的子节点",sees:[{apis:"ITree",method:"isAncestorOf"}],examples:[{description:"下面的代码示例演示如何使用 isChildOf 判断节点是否为指定节点的子节点。",script:{type:"javascript",href:"1.js"}}]}]}]}},36598:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否是完全二叉树"]},description:"判断树形结构是否是完全二叉树。若设二叉树的深度为 h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第 h 层所有的结点都连续集中在最左边",sees:[{apis:"ITree",method:"isBinary"},{apis:"ITree",method:"isFullBinary"},{apis:"ITree",method:"isPerfectBinary"}],examples:[{description:"下面的代码示例演示如何使用 isCompleteBinary 判断一个树是否为完全二叉树。",script:{type:"javascript",href:"1.js"}}]}]}]}},7661:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"root",types:["ITree"],descriptions:["用来校验节点关系的祖先节点"]}],returns:{type:"boolean",descriptions:["一个节点是否为另一个节点的子孙节点"]},description:"判断一个节点是否是另一个节点的子孙节点",sees:[{apis:"ITree",method:"isAncestorOf"}],examples:[{description:"下面的代码示例演示如何使用 isDescendantOf 判断节点是否为指定节点的子孙节点。",script:{type:"javascript",href:"1.js"}}]}]}]}},52625:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否是满二叉树"]},description:"判断树形结构是否是满二叉树，即所有的节点的度(子节点数)为0或者为2",sees:[{apis:"ITree",method:"isBinary"},{apis:"ITree",method:"isCompleteBinary"},{apis:"ITree",method:"isPerfectBinary"}],examples:[{description:"下面的代码示例演示如何使用 isFullBinary 判断一个树是否为满二叉树。",script:{type:"javascript",href:"1.js"}}]}]}]}},48515:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用来校验节点关系的子节点或节点的值"]}],returns:{type:"boolean",descriptions:["一个节点是否为另一个节点的父节点"]},description:"判断一个节点是否是另一个节点的父节点",sees:[{apis:"ITree",method:"isDescendantOf"}],examples:[{description:"下面的代码示例演示如何使用 isParentOf 判断节点是否为指定节点的父节点。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 isParentOf 判断值是否为指定节点值的父节点。",script:{type:"javascript",href:"2.js"}}]}]}]}},79832:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[],returns:{type:"boolean",descriptions:["是否是完美二叉树"]},description:"判断树形结构是否是完美二叉树，即一个每一个层的结点数都达到最大值的二叉树",sees:[{apis:"ITree",method:"isBinary"},{apis:"ITree",method:"isFullBinary"},{apis:"ITree",method:"isCompleteBinary"}],examples:[{description:"下面的代码示例演示如何使用 isPerfectBinary 判断一个树是否为完美二叉树。",script:{type:"javascript",href:"1.js"}}]}]}]}},83430:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{parameters:[{name:"tree",types:["ITree","any"],descriptions:["用于共同计算结果的第一个节点"]},{name:"trees",types:["ITree","any"],params:!0,descriptions:["用于共同计算结果的其他节点"]}],returns:{type:"any",descriptions:["所有参与运算的节点在指定树形结构中的最小公共祖先节点值"]},description:"在树形结构中查找所有指定节点的最小公共祖先节点值",sees:[],examples:[{description:"下面的代码示例演示如何使用 lowestAncestor 查找多个节点的最小公共祖先节点值。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.23",overloads:[{parameters:[{name:"nodes",types:["ITree","any"],params:!0,descriptions:["用于共同计算结果的所有节点"]}],returns:{type:"any",descriptions:["所有参与运算的节点在指定树形结构中的最小公共祖先节点值"]},description:"在树形结构中查找所有指定节点的最小公共祖先节点值",sees:[],examples:[{description:"下面的代码示例演示如何使用 lowestAncestor 查找多个节点的最小公共祖先节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},4873:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之后的同辈节点值的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["指定节点之后的同辈节点值"]},description:"在树形结构中查找指定节点之后的满足条件的同辈节点的值",sees:[{apis:"ITree",method:"prev"},{apis:"ITree",method:"nextAll"},{apis:"ITree",method:"nextNode"}],examples:[{description:"下面的代码示例演示如何使用 next 查找指定节点之后的同辈节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},37070:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之后的同辈节点值序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["指定节点之后的同辈节点值的序列"]},description:"在树形结构中查找指定节点之后的满足条件的同辈节点的值序列",sees:[{apis:"ITree",method:"next"},{apis:"ITree",method:"prevAll"},{apis:"ITree",method:"siblings"},{apis:"ITree",method:"nextAllNodes"}],examples:[{description:"下面的代码示例演示如何使用 nextAll 查找指定节点之后的所有同辈节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},16046:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之后的同辈节点序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["指定节点之后的同辈节点的序列"]},description:"在树形结构中查找指定节点之后的满足条件的同辈节点序列",sees:[{apis:"ITree",method:"nextAll"}],examples:[]}]}]}},95007:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之后的同辈节点的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"ITree",descriptions:["指定节点之后的同辈节点"]},description:"在树形结构中查找指定节点之后的满足条件的同辈节点",sees:[{apis:"ITree",method:"next"}],examples:[]}]}]}},14018:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[{name:"root",types:["ITree"],descriptions:["祖先节点"]}],returns:{type:"IEnumerable",descriptions:["从祖先节点到当前节点路径上所有的节点值序列"]},description:"获取从祖先节点到当前节点路径上所有的节点值序列",remarks:["此方法通过延迟执行的方式实现","此路径的结果序列中包含祖先节点与当前节点本身"],sees:[{apis:"ITree",method:"pathTo"}],examples:[{description:"下面的代码示例演示如何使用 path 获取从祖先节点到当前节点路径上所有的节点。",script:{type:"javascript",href:"1.js"}}]}]},{since:"2.1.23",ref:!0,overloads:[{sees:[{},{apis:"ITree",method:"pathNodes"}]}]}]}},58573:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"root",types:["ITree"],descriptions:["祖先节点"]}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["从祖先节点到当前节点路径上所有的节点序列"]},description:"获取从祖先节点到当前节点路径上所有的节点序列",remarks:["此方法通过延迟执行的方式实现","此路径的结果序列中包含祖先节点与当前节点本身"],sees:[{apis:"ITree",method:"path"},{apis:"ITree",method:"pathNodesTo"}],examples:[]}]}]}},23033:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{lazy:!0,parameters:[{name:"root",types:["ITree","any"],descriptions:["子孙节点或节点的值"]}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["从当前节点到子孙节点路径上所有的节点序列"]},description:"获取从当前节点到子孙节点路径上所有的节点序列",remarks:["此方法通过延迟执行的方式实现","此路径的结果序列中包含当前节点与子孙节点本身"],sees:[{apis:"ITree",method:"pathTo"},{apis:"ITree",method:"pathNodes"}],examples:[]}]}]}},68265:e=>{e.exports={historys:[{since:"2.1.22",overloads:[{lazy:!0,parameters:[{name:"root",types:["ITree","any"],descriptions:["子孙节点或节点的值"]}],returns:{type:"IEnumerable",descriptions:["从当前节点到子孙节点路径上所有的节点值序列"]},description:"获取从当前节点到子孙节点路径上所有的节点值序列",remarks:["此方法通过延迟执行的方式实现","此路径的结果序列中包含当前节点与子孙节点本身"],sees:[{apis:"ITree",method:"path"}],examples:[{description:"下面的代码示例演示如何使用 pathTo 获取从当前节点到子孙节点路径上所有的节点值。",script:{type:"javascript",href:"1.js"}},{description:"下面的代码示例演示如何使用 pathTo 获取从当前节点到子孙节点值的路径上所有的节点值。",script:{type:"javascript",href:"2.js"}}]}]},{since:"2.1.23",ref:!0,overloads:[{sees:[{},{apis:"ITree",method:"pathNodesTo"}]}]}]}},71578:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之前的同辈节点值的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"any",descriptions:["指定节点之前的同辈节点值"]},description:"在树形结构中查找指定节点之前的满足条件的同辈节点的值",sees:[{apis:"ITree",method:"next"},{apis:"ITree",method:"prevAll"},{apis:"ITree",method:"prevNode"}],examples:[{description:"下面的代码示例演示如何使用 prev 查找指定节点之前的同辈节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},54337:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之前的同辈节点值序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["指定节点之前的同辈节点值的序列"]},description:"在树形结构中查找指定节点之前的满足条件的同辈节点的值序列",sees:[{apis:"ITree",method:"prev"},{apis:"ITree",method:"nextAll"},{apis:"ITree",method:"siblings"},{apis:"ITree",method:"prevAllNodes"}],examples:[{description:"下面的代码示例演示如何使用 prevAll 查找指定节点之前的所有同辈节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},31161:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之前的同辈节点序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["指定节点之前的同辈节点的序列"]},description:"在树形结构中查找指定节点之前的满足条件的同辈节点序列",sees:[{apis:"ITree",method:"prevAll"}],examples:[]}]}]}},4133:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其之前的同辈节点的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"ITree",descriptions:["指定节点之前的同辈节点"]},description:"在树形结构中查找指定节点之前的满足条件的同辈节点",sees:[{apis:"ITree",method:"prev"}],examples:[]}]}]}},74710:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其同辈节点序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",generics:[{name:"ITree"}],descriptions:["指定节点的同辈节点序列"]},description:"在树形结构中查找指定节点的满足条件的同辈节点序列",sees:[{apis:"ITree",method:"siblings"}],examples:[]}]}]}},84843:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"node",types:["ITree","any"],descriptions:["用于计算其同辈节点值序列的节点"]},{name:"predicate",types:["function","string","symbol","number","array","object"],descriptions:["用于检测每个节点值是否满足条件的函数"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["指定节点的同辈节点值的序列"]},description:"在树形结构中查找指定节点的满足条件的同辈节点的值序列",sees:[{apis:"ITree",method:"prevAll"},{apis:"ITree",method:"nextAll"},{apis:"ITree",method:"siblingNodes"}],examples:[{description:"下面的代码示例演示如何使用 siblings 查找指定节点的所有同辈节点值。",script:{type:"javascript",href:"1.js"}}]}]}]}},50106:e=>{e.exports={historys:[{since:"2.1.23",overloads:[{parameters:[{name:"childrenSetter",types:["function","string","symbol","number"],descriptions:["应用在每个节点上用于设置子节点集合的函数"],defaultValue:"defaultChildrenSetter",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"children",types:["any[]"]}]}},{name:"valueSetter",types:["function","string","symbol","number"],descriptions:["应用在每个节点上用于设置节点值的函数"],defaultValue:"defaultValueSetter",declare:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"value",types:["any"]}]}}],returns:{type:"object",descriptions:["转换后的对象"]},description:"将树形结构转化为一个 object 对象 ( JSON 数据 ). 每个节点生成一个新对象, 使用节点值设置函数设置对象的值, 并将所有子节点生成的对象联合成数组通过设置器设置到节点对象中.",sees:[{apis:"Enumerable.setters",property:"children"},{apis:"Enumerable.setters",property:"value"},{guide:"setter"}]}]}]}},64946:e=>{e.exports={historys:[{type:"IEnumerable",since:"2.1.22",readonly:!0,description:"包含当前节点所有子节点的集合"}]}},65320:e=>{e.exports={historys:[{type:"any",since:"2.1.22",readonly:!0,description:"当前节点的值"}]}},7699:e=>{e.exports={historys:[{type:"IEnumerable",since:"2.1.22",readonly:!0,description:"包含当前节点所有子节点值的集合"}]}},56179:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:["Directory"],name:"Lookup",properties:[],methods:[{name:"get",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"通过指定的相等比较器查找指定键对应的序列",parameters:[{name:"key"},{name:"comparer"}]}]}]},{name:"set",historys:[{since:"2.1.15",deprecated:0,overloads:[{override:!0,description:"通过指定的相等比较器为指定键设置对应的序列",parameters:[{name:"key"},{name:"value"},{name:"comparer"}]}]}]}]}},46890:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:["Directory"]}},87678:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"IEnumerable",descriptions:["键所对应的序列"]},description:"通过指定的相等比较器查找指定键对应的序列",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},14087:e=>{e.exports={historys:[{since:"2.1.15",overloads:[{override:!0,parameters:[{name:"key",types:["any"],descriptions:["用于查找的键"]},{name:"value",types:["IEnumerable","Iterator","array","object","string"],descriptions:["要设置的序列"]},{name:"comparer",types:["function","string","symbol","number"],defaultValue:"defaultSameComparer",descriptions:["用于对键进行比较相等比较器"],declare:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}}],returns:{type:"any",descriptions:["返回 Directory 对象本身"]},description:"通过指定的相等比较器为指定键设置对应的序列",sees:[{apis:"Enumerable.comparers",property:"same"}]}]}]}},440:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[],name:"Plugin",properties:[],methods:[]}},63770:e=>{e.exports={type:"class",since:"2.1.15",extends:[],implements:[]}},6634:e=>{e.exports={class:"类",interface:"接口",object:"对象",constructor:"构造方法",constructors:"构造方法",property:"属性",properties:"属性",method:"方法",methods:"方法",since:"最低版本",deprecated:"最高版本",override:"重写",details:"详情",description:"描述",summary:"摘要",warning:"注意",warnings:"注意",remark:"备注",remarks:"备注",example:"示例",examples:"示例",static:"静态的",new:"最新",see:"参考",declare:"声明",parameters:"参数",parameter:"参数",returns:"返回值",generics:"类型参数",apis:"API文档",guide:"教程",publish:"发布",time:"时间",date:"日期",prepublish:"预发布",version:"版本",author:"作者",email:"邮箱",project:"项目",default:"默认",value:"值",defaultValue:"默认值",readonly:"只读",lazy:"延迟执行",try:"试一试",run:"运行",clear:"清空",close:"收起",loadRuntime:"载入运行时",executing:"执行中",enableExtend:"启用 Array 扩展",newInstance:{only:"只能使用new运算符",both:"可以使用new运算符,也可以直接调用",cannot:"不能使用new运算符"}}},33238:e=>{e.exports=[{publish:"2017-03-27",contents:["优化了部分代码结构","新增 对 arrayComparer 的默认支持","新增了 对绝大部分 selector, predicate, comparer 参数校验","新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能","新增 Enumerable.predicates.exists 属性, 表示非空筛选器","新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器","新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器","新增 Enumerable.predicates.selector 方法, 生成选择筛选器","新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器"],version:"2.1.15"},{publish:"2017-04-05",contents:["优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug","修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result","修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致","增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector"],version:"2.1.16"},{publish:"2017-04-12",contents:["新增 findLast 方法","新增 Enumerable.comparers.greater 方法","新增 Enumerable.comparers.less 方法","新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器","新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器","优化 comparer / predicate / selector 类型的参数 转化过程的效率"],version:"2.1.17"},{publish:"2017-08-30",contents:["新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型","新增 Enumerable.types 对象,包含各参考类型的常量值","Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用","新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器","新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接","修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug","移除过时的功能 arrayComparer、predicateComparer","新增 Enumerable.extends.lazy 配置选项","修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题","新增 IEnumerable.prototype.chunk 方法用来对序列进行分块","新增 IEnumerable.prototype.product 方法用来计算乘积","新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法","新增 IEnumerable.prototype.rand 方法","","Bugs","调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果"],version:"2.1.18"},{publish:"2017-09-08",contents:["新增(New):","1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持","2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector","3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑","4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题","","优化(Optimization):","1. 优化了 join 方法的处理逻辑","2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读","3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值","4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法","","修复(Fixed):","1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题","2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题","3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug"],version:"2.1.19"},{publish:"2017-09-22",contents:["新增(New):","1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素","2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素","3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组","4. 新增 Enumerable.between 方法, 生成范围内的整数序列","5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致","6. 为 Enumerable.range 方法新增第三个参数, 设置步长","7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列","8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并","","优化(Optimization):","1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑","2. 优化 defaultValueSelector","","修复(Fixed):","1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug"],version:"2.1.20"},{publish:"2017-11-20",contents:["新增(New):","1. 新增 IEnumerable.prototype.isSub / IEnumerable.prototype.isSuper 方法, 用来判断两个序列的从属关系","2. 新增 IEnumerable.prototype.symmetric 方法, 用来计算两个序列的对称差集","","优化(Optimization):","1. 优化 orderBy/orderByDescending/thenBy/thenByDescending 方法的性能","","修复(Fixed):"],version:"2.1.21"},{publish:"2018-03-21",contents:["新增(New):","1. 新增 ITree 接口, 拥有对树形结构的基本操作. 包含: value, children, values 等属性, 包含: depth, degree, getChild, getValue, breadthTraverse, breadthSearch, breadthSubTree, depthTraverse, depthSearch, depthSubTree, lowestAncestor, isDescendantOf, isAncestorOf, path, pathTo, isBinary, isFullBinary, isCompleteBinary, isProfectBinary, asBinary 等方法","2. 新增 BinaryTree 类, 拥有对二叉树的基本操作. 包含: left, right 等属性, 包含: hasLeft, hasRight, preOrder, inOrder, postOrder 等方法","3. 修改 ICombine 继承 ITree 接口, 可进行树形结构的操作","4. 新增 IEnumerable.prototype.maxOrDefault, IEnumerable.prototype.minOrDefault 方法","5. 为 object 对象新增 asEnumerable(childrenSelector, valueSelector) 重载, 用于或一个 ITree 对象","6. 新增 toPreOrder, toInOrder, toPostOrder 方法, 用于生成一个完全二叉树, 分别使得此二叉树的 前序遍历|中序遍历|后序遍历 的结果与源序列一致","","优化(Optimization):","1. 优化 IteratorEnumerable","","修复(Fixed):"],version:"2.1.22"},{publish:"2018-03-29",contents:["新增(New):","1. 增加 ITree.prototype.toValue 方法,将树形结构转化 object 对象 ( JSON 数据 )","2. 增加 ITree.prototype.isParentOf, ITree.prototype.isChildOf, ITree.prototype.getParent, ITree.prototype.prev, ITree.prototype.prevAll, ITree.prototype.next, ITree.prototype.nextAll, ITree.prototype.siblings, ITree.prototype.getParentNode, ITree.prototype.prevNode, ITree.prototype.prevAllNodes, ITree.prototype.nextNode, ITree.prototype.nextAllNodes, ITree.prototype.siblingNodes, ITree.prototype.pathNodes, ITree.prototype.pathNodesTo 方法,操作树形的各节点关系","3. 增加 IEnumerable.prototype.each 方法,对序列中的每个元素执行一次操作,并返回序列本身 ( 与 forEach 方法的区别在于 each 方法可以继续链式调用 )","4. 增加 IEnumerable.prototype.split 方法,对序列按照指定的条件进行拆分","5. 增加 IEnumerable.prototype.indices 方法,用使用一个索引序列从源序列中生成一个新序列","6. 增加 IEnumerable.prototype.permutation, IEnumerable.prototype.combination 方法,用来计算排列与组合","7. 增加 Enumerable.setters.children, Enumerable.setters.value 属性,一个默认的 children/value 设置器","8. 增加 Enumerable.setters.property 方法,用来生成一个属性设置器","","优化(Optimization):","1. 优化 ITree.prototype.isAncestorOf, ITree.prototype.isDescendantOf 方法的性能","2. 优化 IEnumerable.prototype.chunk, IEnumerable.prototype.groupBy, IEnumerable.prototype.groupJoin 等方法性能","3. 优化 ITree.prototype.lowestAncestor 方法的性能","4. 优化 Enumerable.selectors.property 方法, 增加一个参数控制是否忽略无效的属性","","修复(Fixed):","1. 修复 ITree.prototype.lowestAncestor 在处理节点值为false的情况下返回错误的问题","2. 修复 ITree.prototype.lowestAncestor 在处理节点值类型与参数值类型不同但数值相等的情况下返回错误的问题"],version:"2.1.23"},{publish:"2020-03-03",contents:["新增(New):","1. 为一些方法增加别名, 方便其他语言使用者更容易的转移","2. 新增 conflict 方法用来判断一个序列中是否包含重复的元素","3. 新增 nearSplit 方法用来分割一个序列,与 split 方法区别在于连续的符合条件的分割元素之间将不会被分割出空序列","4. 新增 skipSame, takeSame 方法用来获取或忽略开头部分相同的元素","","优化(Optimization):","","修复(Fixed):","1. 修复 skipWhile, takeWhile 方法默认参数错误的bug"],version:"2.1.24"},{publish:"2021-07-06",contents:["调整(Change)","1. 调整了 min、minOrDefault、max、maxOrDefault 方法的逻辑；","","新增(New):","1. 新增了 proportion、skipProportion、takeProportion 方法；","2. 新增了 minIndex, maxIndex 方法；","3. 新增了 randomProbability, randomProbabilityOrDefault, randomIndexProbability 方法；","4. 增加了性能基准的单元测试，方便查看方法的性能与传统写法性能的差距。延时方法势必会消耗部分性能；","","优化(Optimization):","1. 更新使用Babel7、Webpack5进行项目编译打包；","2. 优化了 rand 方法的性能及表现；","3. 优化了 min、minOrDefault、max、maxOrDefault 方法的性能及表现；","4. 优化了 groupBy、distinct 等方法的性能及表现；","","修复(Fixed):","1. 修复了 IEnumerable 中未注册 random、 randomOrDefault 方法的问题；"],version:"2.2.0"},{prepublish:!0,contents:["调整(Change):","","新增(New):","","优化(Optimization):","","修复(Fixed):"],version:"2.2.1.pre"}]},55449:e=>{e.exports={publish:"2017-03-27",contents:["优化了部分代码结构","新增 对 arrayComparer 的默认支持","新增了 对绝大部分 selector, predicate, comparer 参数校验","新增 绝大部分的 selector, predicate, comparer 参数均支持 String 或 Symbol 类型数据 表示选择对象对应的字段 的功能","新增 Enumerable.predicates.exists 属性, 表示非空筛选器","新增 Enumerable.predicates.regexp 方法, 生成正则匹配的筛选器","新增 Enumerable.predicates.not 方法, 生成逻辑非筛选器","新增 Enumerable.predicates.selector 方法, 生成选择筛选器","新增 Enumerable.predicates.equality, Enumerable.predicates.strict, Enumerable.predicates.same 方法, 生成比较筛选器"]}},36485:e=>{e.exports={publish:"2017-04-05",contents:["优化 selectMany 方法, 使的使用上更接近linq原生的方法. 修复 selectMany 方法 collectionSelector 返回 Iterator,string,object 对象是出现异常的bug","修改 defaultGroupResultSelector 为 defaultResultSelector, 修改 Enumerable.selectors.groupResult 为 Enumerable.selectors.result","修改 selectMany 方法的 resultSelector 参数的结构和默认值, 与 defaultResultSelector 一致","增加 zip 方法的 resultSelector 的默认值为 defaultResultSelector"]}},52523:e=>{e.exports={publish:"2017-04-12",contents:["新增 findLast 方法","新增 Enumerable.comparers.greater 方法","新增 Enumerable.comparers.less 方法","新增 Enumerable.predicates.properties 方法, 生成一个属性筛选器","新增所有的 predicate 参数, 如果使用 Array 或者 Object 类型作为参数时, 自动经过 Enumerable.predicates.properties 方法转译成一个筛选器","优化 comparer / predicate / selector 类型的参数 转化过程的效率"]}},72063:e=>{e.exports={publish:"2017-08-30",contents:["新增 Enumerable.typeAs 方法用来对指定类型设置 asEnumerable 转换时的参考类型","新增 Enumerable.types 对象,包含各参考类型的常量值","Enumerable.addPlugins、Enumerable.removePlugins 方法增加返回值,方便链式调用","新增 Enumerable.comparers.ignoreCase 忽略大小写的相等比较器","新增 IEnumerable.prototype.leftJoin、IEnumerable.prototype.rightJoin 方法用来对两个序列分别进行内部左联接与内部右联接","修复 concat 方法在参数值为 String 或 Arguments 类型是结果超出预期的bug","移除过时的功能 arrayComparer、predicateComparer","新增 Enumerable.extends.lazy 配置选项","修复 启用扩展后 对象上不能使用 getEnumerator 方法的问题","新增 IEnumerable.prototype.chunk 方法用来对序列进行分块","新增 IEnumerable.prototype.product 方法用来计算乘积","新增 IEnumerable.prototype.leftPad、IEnumerable.prototype.rightPad 方法","新增 IEnumerable.prototype.rand 方法","","Bugs","调用 Object 对象的 asEnumerable 方法将会返回一个不可控的结果"]}},79342:e=>{e.exports={publish:"2017-09-08",contents:["新增(New):","1. 增加各 选择器(Selector)/比较器(Comparer)/筛选器(Predicate) 对 Number/Symbol 类型参数的支持","2. 新增 Enumerable.selectors.join 作为 defaultJoinSelector","3. 新增 IEnumerable.prototype.innerJoin 方法与原先的 join 方法功能一致, 主要为了区别仅有一个参数的情况下的逻辑","4. 新增 Enumerable.noConflict 方法 用于解决重复引用的问题","","优化(Optimization):","1. 优化了 join 方法的处理逻辑","2. 将 IGrouping.prototype.key 与 IChunk.prototype.index 设置成只读","3. 为 groupJoin, leftJoin, rightJoin 等方法的 resultSelector 参数设置了 defaultJoinSelector 默认值","4. 优化了 Enumerable.extend/Enumerable.unextend/Enumerable.addPlugins/Enumerble.removePlugins 等方法, 并新增了 Enumerable.extendAll/Enumerable.unextendAll 方法","","修复(Fixed):","1. 修复一处针对 String 扩展后 String.prototype.slice 返回超出预期的问题","2. 修复由 groupBy/groupJoin/chunk 等方法获取到的 IGrouping/IChunk 对象不能被重复遍历的问题","3. 修复对 Object 对象使用 asEnumerable 方法时不能返回此对象键值对序列或出现错误的bug"]}},68785:e=>{e.exports={publish:"2017-09-22",contents:["新增(New):","1. 新增 IEnumerable.prototype.random / IEnumerable.prototype.randomOrDefault 方法, 用来从序列中随机获取一个元素","2. 新增 IEnumerable.prototype.wipe 方法, 用来剔除序列中满足条件指定数量的元素","3. 新增 IEnumerable.prototype.nearBy 方法, 用来对序列中相同且相邻的元素进行分组","4. 新增 Enumerable.between 方法, 生成范围内的整数序列","5. 新增 Enumerable.from 方法, 功能与 asEnumerable 方法一致","6. 为 Enumerable.range 方法新增第三个参数, 设置步长","7. 新增 Enumerable.generate 方法, 通过生成方法构建新序列","8. 新增 IEnumerable.prototype.separate / IEnumerable.prototype.combine 方法, 分别用来对递归的结构进行拆解与合并","","优化(Optimization):","1. 优化 chunk/leftPad/rightPad/rand 方法的逻辑","2. 优化 defaultValueSelector","","修复(Fixed):","1. 修复 开启扩展后 average/defaultIfEmpty/join 方法返回超出预期或报错的bug"]}},54804:e=>{e.exports={publish:"2017-11-20",contents:["新增(New):","1. 新增 IEnumerable.prototype.isSub / IEnumerable.prototype.isSuper 方法, 用来判断两个序列的从属关系","2. 新增 IEnumerable.prototype.symmetric 方法, 用来计算两个序列的对称差集","","优化(Optimization):","1. 优化 orderBy/orderByDescending/thenBy/thenByDescending 方法的性能","","修复(Fixed):"]}},6140:e=>{e.exports={publish:"2018-03-21",contents:["新增(New):","1. 新增 ITree 接口, 拥有对树形结构的基本操作. 包含: value, children, values 等属性, 包含: depth, degree, getChild, getValue, breadthTraverse, breadthSearch, breadthSubTree, depthTraverse, depthSearch, depthSubTree, lowestAncestor, isDescendantOf, isAncestorOf, path, pathTo, isBinary, isFullBinary, isCompleteBinary, isProfectBinary, asBinary 等方法","2. 新增 BinaryTree 类, 拥有对二叉树的基本操作. 包含: left, right 等属性, 包含: hasLeft, hasRight, preOrder, inOrder, postOrder 等方法","3. 修改 ICombine 继承 ITree 接口, 可进行树形结构的操作","4. 新增 IEnumerable.prototype.maxOrDefault, IEnumerable.prototype.minOrDefault 方法","5. 为 object 对象新增 asEnumerable(childrenSelector, valueSelector) 重载, 用于或一个 ITree 对象","6. 新增 toPreOrder, toInOrder, toPostOrder 方法, 用于生成一个完全二叉树, 分别使得此二叉树的 前序遍历|中序遍历|后序遍历 的结果与源序列一致","","优化(Optimization):","1. 优化 IteratorEnumerable","","修复(Fixed):"]}},66208:e=>{e.exports={publish:"2018-03-29",contents:["新增(New):","1. 增加 ITree.prototype.toValue 方法,将树形结构转化 object 对象 ( JSON 数据 )","2. 增加 ITree.prototype.isParentOf, ITree.prototype.isChildOf, ITree.prototype.getParent, ITree.prototype.prev, ITree.prototype.prevAll, ITree.prototype.next, ITree.prototype.nextAll, ITree.prototype.siblings, ITree.prototype.getParentNode, ITree.prototype.prevNode, ITree.prototype.prevAllNodes, ITree.prototype.nextNode, ITree.prototype.nextAllNodes, ITree.prototype.siblingNodes, ITree.prototype.pathNodes, ITree.prototype.pathNodesTo 方法,操作树形的各节点关系","3. 增加 IEnumerable.prototype.each 方法,对序列中的每个元素执行一次操作,并返回序列本身 ( 与 forEach 方法的区别在于 each 方法可以继续链式调用 )","4. 增加 IEnumerable.prototype.split 方法,对序列按照指定的条件进行拆分","5. 增加 IEnumerable.prototype.indices 方法,用使用一个索引序列从源序列中生成一个新序列","6. 增加 IEnumerable.prototype.permutation, IEnumerable.prototype.combination 方法,用来计算排列与组合","7. 增加 Enumerable.setters.children, Enumerable.setters.value 属性,一个默认的 children/value 设置器","8. 增加 Enumerable.setters.property 方法,用来生成一个属性设置器","","优化(Optimization):","1. 优化 ITree.prototype.isAncestorOf, ITree.prototype.isDescendantOf 方法的性能","2. 优化 IEnumerable.prototype.chunk, IEnumerable.prototype.groupBy, IEnumerable.prototype.groupJoin 等方法性能","3. 优化 ITree.prototype.lowestAncestor 方法的性能","4. 优化 Enumerable.selectors.property 方法, 增加一个参数控制是否忽略无效的属性","","修复(Fixed):","1. 修复 ITree.prototype.lowestAncestor 在处理节点值为false的情况下返回错误的问题","2. 修复 ITree.prototype.lowestAncestor 在处理节点值类型与参数值类型不同但数值相等的情况下返回错误的问题"]}},34056:e=>{e.exports={publish:"2020-03-03",contents:["新增(New):","1. 为一些方法增加别名, 方便其他语言使用者更容易的转移","2. 新增 conflict 方法用来判断一个序列中是否包含重复的元素","3. 新增 nearSplit 方法用来分割一个序列,与 split 方法区别在于连续的符合条件的分割元素之间将不会被分割出空序列","4. 新增 skipSame, takeSame 方法用来获取或忽略开头部分相同的元素","","优化(Optimization):","","修复(Fixed):","1. 修复 skipWhile, takeWhile 方法默认参数错误的bug"]}},33576:e=>{e.exports={publish:"2021-07-06",contents:["调整(Change)","1. 调整了 min、minOrDefault、max、maxOrDefault 方法的逻辑；","","新增(New):","1. 新增了 proportion、skipProportion、takeProportion 方法；","2. 新增了 minIndex, maxIndex 方法；","3. 新增了 randomProbability, randomProbabilityOrDefault, randomIndexProbability 方法；","4. 增加了性能基准的单元测试，方便查看方法的性能与传统写法性能的差距。延时方法势必会消耗部分性能；","","优化(Optimization):","1. 更新使用Babel7、Webpack5进行项目编译打包；","2. 优化了 rand 方法的性能及表现；","3. 优化了 min、minOrDefault、max、maxOrDefault 方法的性能及表现；","4. 优化了 groupBy、distinct 等方法的性能及表现；","","修复(Fixed):","1. 修复了 IEnumerable 中未注册 random、 randomOrDefault 方法的问题；"]}},40921:e=>{e.exports={prepublish:!0,contents:["调整(Change):","","新增(New):","","优化(Optimization):","","修复(Fixed):"]}},76377:e=>{e.exports=[{code:"introduction",title:"简介"},{code:"install",title:"安装"},{code:"guides",title:"教程",children:[{code:"instance",title:"获取 IEnumerable 实例",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"use",title:"开始使用",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"config",title:"配置",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"selector",title:"选择器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"predicate",title:"筛选器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"comparer",title:"比较器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"action",title:"执行器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"setter",title:"设置器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"iterator",title:"迭代器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"enumerator",title:"枚举器",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"extend",title:"扩展",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"plugin",title:"插件",since:"2.1.15",deprecated:"2.2.1.pre"}]},{code:"apis",title:"API文档",children:[{code:"BinaryTree",title:"BinaryTree 类",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"Directory",title:"Directory 类",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Entry",title:"Entry 类",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable",title:"Enumerable 类",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.actions",title:"Enumerable.actions 对象",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.comparers",title:"Enumerable.comparers 对象",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.config",title:"Enumerable.config 对象",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.predicates",title:"Enumerable.predicates 对象",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.selectors",title:"Enumerable.selectors 对象",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Enumerable.setters",title:"Enumerable.setters 对象",since:"2.1.20",deprecated:"2.2.1.pre"},{code:"IChunk",title:"IChunk 接口",since:"2.1.18",deprecated:"2.2.1.pre"},{code:"ICombine",title:"ICombine 接口",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"IEnumerable",title:"IEnumerable 接口",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IEnumerator",title:"IEnumerator 接口",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IGrouping",title:"IGrouping 接口",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IMapEnumerable",title:"IMapEnumerable 接口",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"IOrderedEnumerable",title:"IOrderedEnumerable 接口",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"ITree",title:"ITree 接口",since:"2.1.22",deprecated:"2.2.1.pre"},{code:"Lookup",title:"Lookup 类",since:"2.1.15",deprecated:"2.2.1.pre"},{code:"Plugin",title:"Plugin 类",since:"2.1.15",deprecated:"2.2.1.pre"}]},{code:"change",title:"更新日志"},{code:"about",title:"关于"}]},43925:e=>{e.exports=[{code:"introduction",title:"简介"},{code:"install",title:"安装"},"guides","apis",{code:"change",title:"更新日志"},{code:"about",title:"关于"}]},57218:e=>{e.exports={}},4635:e=>{e.exports={"1.js":'let fruits = [ "苹果", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\n// 确定数组中比 “香蕉” 更长的字符串\r\nlet longestName = fruits.asEnumerable().aggregate("香蕉",\r\n\t\t(longest, next) => next.length > longest.length ? next : longest,\r\n\t\t// 返回最终结果\r\n\t\tfruit => `水果 “${ fruit }”`);\r\n\r\nconsole.log(`最长的字符串是${ longestName }`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 最长的字符串是水果 “百香果”'}},30434:e=>{e.exports={"1.js":'// 创建一个宠物的数组。\r\nlet pets = [\r\n    { name: "小白", age: 10 },\r\n    { name: "小黑", age: 14 },\r\n    { name: "旺财", age: 6 }\r\n];\r\n\r\n// 确实是否所有的宠物名称\r\n// 都是“小”字开头的。\r\nlet allStartWithXiao = pets.asEnumerable().all(pet => pet.name.startsWith("小"));\r\n\r\nconsole.log(`${ allStartWithXiao ? "所有" : "不是所有" }宠物的名字都是以“小”字开头的。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n//  不是所有宠物的名字都是以“小”字开头的。',"2.js":'let people = [\r\n    {\r\n        lastName: "老王",\r\n        pets: [\r\n            { name: "小白", age: 10 },\r\n            { name: "机器人", age: 14 },\r\n            { name: "旺财", age: 6 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "老郑",\r\n        pets: [\r\n            { name: "雪诺", age: 1 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "老吴",\r\n        pets: [\r\n            { name: "贝贝", age: 8 }\r\n        ]\r\n    },\r\n    {\r\n        lastName: "老周",\r\n        pets: [\r\n            { name: "甜心", age: 2 },\r\n            { name: "大河", age: 13 }\r\n        ]\r\n    }\r\n];\r\n\r\n// 确定谁的宠物都是大于5岁的。\r\nlet names = people.asEnumerable()\r\n        .where(person => person.pets.all(pet => pet.age > 5))\r\n        .select(person => person.lastName);\r\n\r\nfor (let name of names) {\r\n    console.log(name);\r\n}\r\n\r\n/* 这段代码的输出结果如下：\r\n *\r\n * 老王\r\n * 老吴\r\n */'}},91600:e=>{e.exports={"1.js":'// 创建一个宠物的数组。\r\nlet pets = [\r\n    { name: "小白", age: 8, vaccinated: true },\r\n    { name: "机器人", age: 4, vaccinated: false },\r\n    { name: "旺财", age: 1, vaccinated: false }\r\n];\r\n\r\n// 确定是否存在年龄大于1岁且没有接种疫苗的宠物\r\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\r\n\r\nconsole.log(`${ unvaccinated ? "有" : "没有" }超过一岁未接种疫苗的动物。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n//  有超过一岁未接种疫苗的动物。'}},14429:e=>{e.exports={}},14653:e=>{e.exports={"1.js":'let numbers = [ "10007", "37", 299846234235 ];\r\n\r\nlet average = numbers.asEnumerable().average();\r\n\r\nconsole.log(`平均数是${ average }。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 平均数是99948748093。'}},12202:e=>{e.exports={}},16447:e=>{e.exports={"1.js":"let array = [ 1, 2, 3 ];\r\n\r\n//数量为2的所有组合\r\nconsole.log(array.asEnumerable().combination(2).select(per => `[${ per.join('|') }]`).toArray());\r\n//数量为2的所有重复组合\r\nconsole.log(array.asEnumerable().combination(2, true).select(per => `[${ per.join('|') }]`).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// [1|2],[1|3],[2|3]\r\n// [1|1],[1|2],[1|3],[2|2],[2|3],[3|3]"}},98224:e=>{e.exports={}},36128:e=>{e.exports={"1.js":'let cats = [\r\n    { name: "花斑虎", age: 3 },\r\n    { name: "汤姆", age: 14 },\r\n    { name: "懒猫", age: 9 }\r\n];\r\n\r\nlet dogs = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet query = cats.asEnumerable().select(cat => cat.name)\r\n        .concat(dogs.asEnumerable().select(dog => dog.name));\r\n\r\nfor (let name of query) {\r\n    console.log(name);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 花斑虎\r\n// 汤姆\r\n// 懒猫\r\n// 小白\r\n// 机器人\r\n// 旺财'}},72641:e=>{e.exports={"1.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet fruit = "芒果";\r\n\r\nlet hasMango = fruits.asEnumerable().contains(fruit);\r\n\r\nconsole.log(`数组中${ hasMango ? "含" : "不含" }有“${ fruit }”。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 数组中含有“芒果”。',"2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果水果的名称和数目相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 },\r\n    { name: "柠檬", code: 12 }\r\n];\r\n\r\nlet apple = { name: "苹果", code: 9 };\r\nlet kiwi = { name: "奇异果", code: 8 };\r\n\r\nlet hasApple = fruits.asEnumerable().contains(apple, productComparer);\r\nlet hasKiwi = fruits.asEnumerable().contains(kiwi, productComparer);\r\n\r\nconsole.log("苹果? " + hasApple);\r\nconsole.log("奇异果? " + hasKiwi);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果? true\r\n 奇异果? false\r\n */'}},37907:e=>{e.exports={}},79826:e=>{e.exports={"1.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet numberOfFruits = fruits.asEnumerable().count();\r\n\r\nconsole.log(`数组中有${ numberOfFruits }种水果。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 数组中有6种水果。\r\n',"2.js":'let pets = [\r\n    { name: "小白", vaccinated: true },\r\n    { name: "机器人", vaccinated: false },\r\n    { name: "旺财", vaccinated: false }\r\n];\r\n\r\nlet numberUnvaccinated = pets.asEnumerable().count(p => p.vaccinated === false);\r\n\r\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 有2个动物没有接种疫苗。',"3.js":'let pets = [\r\n    { name: "小白", vaccinated: true },\r\n    { name: "机器人", vaccinated: false },\r\n    { name: "旺财", vaccinated: false }\r\n];\r\n\r\nlet numberUnvaccinated = pets.asEnumerable().count({ vaccinated: false });\r\n\r\nconsole.log(`有${ numberUnvaccinated }个动物没有接种疫苗。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 有2个动物没有接种疫苗。'}},76124:e=>{e.exports={"1.js":'let defaultPet = { name: "默认宠物名称", age: 0 };\r\n\r\nlet pets1 = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nfor (let pet of pets1.asEnumerable().defaultIfEmpty(defaultPet)) {\r\n    console.log(`宠物名称是：${ pet.name }`);\r\n}\r\n\r\nconsole.log();\r\n\r\nlet pets2 = [];\r\n\r\nfor (let pet of pets2.asEnumerable().defaultIfEmpty(defaultPet)) {\r\n    console.log(`宠物名称是：${ pet.name }`);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 宠物名称是：小白\r\n 宠物名称是：机器人\r\n 宠物名称是：旺财\r\n\r\n 宠物名称是：默认宠物名称\r\n */'}},83423:e=>{e.exports={"1.js":'let ages = [ 21, 46, 46, 55, 17, 21, 55, 55 ];\r\n\r\nlet distinctAges = ages.asEnumerable().distinct();\r\n\r\nconsole.log("不重复的年龄有：");\r\n\r\nfor (let age of distinctAges) {\r\n    console.log(age);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 不重复的年龄有：\r\n 21\r\n 46\r\n 55\r\n 17\r\n */\r\n',"2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和编号相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet products = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 },\r\n    { name: "苹果", code: 9 },\r\n    { name: "柠檬", code: 12 }\r\n];\r\n\r\n// 去除重复\r\nlet noduplicates = products.asEnumerable().distinct(productComparer);\r\n\r\nfor (let product of noduplicates) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果 9\r\n 橘子 4\r\n 柠檬 12\r\n */'}},75468:e=>{e.exports={"1.js":'let names = [ "李小龙", "李连杰", "甄子丹", "成龙", "洪金宝" ];\r\n\r\nlet name = names.asEnumerable().elementAt(4);\r\n\r\nconsole.log(`名字是“${ name }”。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 名字是“洪金宝”。\r\n */'}},73567:e=>{e.exports={"1.js":'let names = [ "李小龙", "李连杰", "甄子丹", "成龙", "洪金宝" ];\r\n\r\nlet index = 20;\r\n\r\nlet name = names.asEnumerable().elementAtOrDefault(index, "【这个位置上没有人】");\r\n\r\nconsole.log(`在位置${ index }上的名字是“${ name }”。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 在位置20上的名字是“【这个位置上没有人】”。\r\n */'}},14436:e=>{e.exports={}},83764:e=>{e.exports={"1.js":"let numbers1 = [ 2.0, 2.0, 2.1, 2.2, 2.3, 2.3, 2.4, 2.5 ];\r\nlet numbers2 = [ 2.2 ];\r\n\r\nlet onlyInFirstSet = numbers1.asEnumerable().except(numbers2);\r\n\r\nfor (let number of onlyInFirstSet) {\r\n    console.log(number);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 2\r\n 2.1\r\n 2.3\r\n 2.4\r\n 2.5\r\n */","2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和数目相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet fruits1 = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 },\r\n    { name: "柠檬", code: 12 }\r\n];\r\n\r\nlet fruits2 = [ { name: "苹果", code: 9 } ];\r\n\r\n//获取第一个数组中的全部元素\r\n//除了出现在第二个数组中的元素。\r\nlet except = fruits1.asEnumerable().except(fruits2, productComparer);\r\n\r\nfor (let product of except) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 橘子 4\r\n 柠檬 12\r\n */'}},92111:e=>{e.exports={}},501:e=>{e.exports={}},6582:e=>{e.exports={}},7314:e=>{e.exports={}},62238:e=>{e.exports={}},97738:e=>{e.exports={}},66021:e=>{e.exports={"1.js":"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\r\n\r\nlet first = numbers.asEnumerable().first();\r\n\r\nconsole.log(first);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 9\r\n */","2.js":"let numbers = [ 9, 34, 65, 92, 87, 435, 3, 54, 83, 23, 87, 435, 67, 12, 19 ];\r\n\r\nlet first = numbers.asEnumerable().first(number => number > 80);\r\n\r\nconsole.log(first);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 92\r\n */"}},9519:e=>{e.exports={"1.js":"let numbers = [];\r\nlet first = numbers.asEnumerable().firstOrDefault(0);\r\nconsole.log(first);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 0\r\n */","2.js":'let names = [ "李小龙", "李连杰", "六小龄童", "甄子丹", "成龙", "洪金宝" ];\r\n\r\nlet firstLongName = names.asEnumerable().firstOrDefault("", name => name.length > 3);\r\n\r\nconsole.log(`第一个最长的名字是：“${ firstLongName }”。`);\r\n\r\nlet firstVeryLongName = names.asEnumerable().firstOrDefault("", name => name.length > 4);\r\n\r\nconsole.log(`${ firstVeryLongName === "" ? "没有" : "有" }名字的长度多于4个字。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 第一个最长的名字是：“六小龄童”。\r\n 没有名字的长度多于4个字。\r\n */'}},64594:e=>{e.exports={}},85762:e=>{e.exports={}},86929:e=>{e.exports={"1.js":'// 创建一个宠物的序列。\r\nlet pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 },\r\n    { name: "小黑", age: 4 }\r\n];\r\n\r\n// 使用年龄作为分组的键同时\r\n// 使用宠物的名字作为每个分组中的元素。\r\nlet query = pets.asEnumerable().groupBy(pet => pet.age, pet => pet.name);\r\n\r\n// 循环每个组的结果。\r\nfor (let petGroup of query) {\r\n    // 输出该组的键。\r\n    console.log(petGroup.key);\r\n    // 循环每个结果的内容。\r\n    for (let name of petGroup)\r\n        // 输出 IGrouping 中的值。\r\n        console.log(`  ${ name }`);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 8\r\n   小白\r\n 4\r\n   机器人\r\n   小黑\r\n 1\r\n   旺财\r\n */\r\n',"2-2.1.19.js":'// 创建一个宠物的序列。\r\nlet petsList = [\r\n    { name: "小白", age: 8.3 },\r\n    { name: "机器人", age: 4.9 },\r\n    { name: "旺财", age: 1.5 },\r\n    { name: "小黑", age: 4.3 }\r\n];\r\n\r\n// 按照整数年龄进行分组\r\n// 然后按每个分组生成\r\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet,\r\n    (age, pets) => ({\r\n        key: age,\r\n        count: pets.count(),\r\n        min: pets.min(pet => pet.age),\r\n        max: pets.max(pet => pet.age)\r\n    }));\r\n\r\n// 循环每个组的结果。\r\nfor (let result of query) {\r\n    console.log("\\n年龄组：" + result.key);\r\n    console.log("该组包含的宠物数量：" + result.count);\r\n    console.log("该组的最小年龄：" + result.min);\r\n    console.log("该组的最大年龄：" + result.max);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄组：8\r\n 该组包含的宠物数量：1\r\n 该组的最小年龄：8.3\r\n 该组的最大年龄：8.3\r\n\r\n 年龄组：4\r\n 该组包含的宠物数量：2\r\n 该组的最小年龄：4.3\r\n 该组的最大年龄：4.9\r\n\r\n 年龄组：1\r\n 该组包含的宠物数量：1\r\n 该组的最小年龄：1.5\r\n 该组的最大年龄：1.5\r\n */',"2.js":'// 创建一个宠物的序列。\r\nlet petsList = [\r\n    { name: "小白", age: 8.3 },\r\n    { name: "机器人", age: 4.9 },\r\n    { name: "旺财", age: 1.5 },\r\n    { name: "小黑", age: 4.3 }\r\n];\r\n\r\n// 按照整数年龄进行分组\r\n// 然后按每个分组生成\r\n// 包含分组的键与数量的新对象。\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet,\r\n    (age, pets) => ({\r\n        key: age,\r\n        count: pets.count()\r\n    }));\r\n\r\n// 循环每个组的结果。\r\nfor (let result of query) {\r\n    console.log("\\n年龄组：" + result.key);\r\n    console.log("该组包含的宠物数量：" + result.count);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄组：8\r\n 该组包含的宠物数量：1\r\n\r\n 年龄组：4\r\n 该组包含的宠物数量：2\r\n\r\n 年龄组：1\r\n 该组包含的宠物数量：1\r\n */',"3-2.1.19.js":'// 创建一个宠物的序列。\r\nlet petsList = [\r\n    { name: "小白", age: 8.3 },\r\n    { name: "机器人", age: 4.9 },\r\n    { name: "旺财", age: 1.5 },\r\n    { name: "小黑", age: 4.3 }\r\n];\r\n\r\n// 按照整数年龄进行分组\r\n// 然后按每个分组生成\r\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet.age,\r\n    (age, ages) => ({\r\n        key: age,\r\n        count: ages.count(),\r\n        min: ages.min(),\r\n        max: ages.max()\r\n    }));\r\n\r\n// 循环每个组的结果。\r\nfor (let result of query) {\r\n    console.log("\\n年龄组：" + result.key);\r\n    console.log("该组包含的宠物数量：" + result.count);\r\n    console.log("该组的最小年龄：" + result.min);\r\n    console.log("该组的最大年龄：" + result.max);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄组：8\r\n 该组包含的宠物数量：1\r\n 该组的最小年龄：8.3\r\n 该组的最大年龄：8.3\r\n\r\n 年龄组：4\r\n 该组包含的宠物数量：2\r\n 该组的最小年龄：4.3\r\n 该组的最大年龄：4.9\r\n\r\n 年龄组：1\r\n 该组包含的宠物数量：1\r\n 该组的最小年龄：1.5\r\n 该组的最大年龄：1.5\r\n */',"3.js":'// 创建一个宠物的序列。\r\nlet petsList = [\r\n    { name: "小白", age: 8.3 },\r\n    { name: "机器人", age: 4.9 },\r\n    { name: "旺财", age: 1.5 },\r\n    { name: "小黑", age: 4.3 }\r\n];\r\n\r\n// 按照整数年龄进行分组\r\n// 然后按每个分组生成\r\n// 包含分组的键、数量、最小年龄与最大年龄的新对象。\r\nlet query = petsList.asEnumerable().groupBy(\r\n    pet => Math.floor(pet.age),\r\n    pet => pet.age,\r\n    (age, ages) => ({\r\n        key: age,\r\n        count: ages.count()\r\n    }));\r\n\r\n// 循环每个组的结果。\r\nfor (let result of query) {\r\n    console.log("\\n年龄组：" + result.key);\r\n    console.log("该组包含的宠物数量：" + result.count);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄组：8\r\n 该组包含的宠物数量：1\r\n\r\n 年龄组：4\r\n 该组包含的宠物数量：2\r\n\r\n 年龄组：1\r\n 该组包含的宠物数量：1\r\n */'}},1460:e=>{e.exports={"1.js":'let xi = { name: "习大大" };\r\nlet wang = { name: "王思聪" };\r\nlet li = { name: "李小龙" };\r\n\r\nlet white = { name: "小白", owner: wang };\r\nlet boots = { name: "机器人", owner: wang };\r\nlet black = { name: "黑蛋", owner: li };\r\nlet cai = { name: "旺财", owner: xi };\r\n\r\nlet people = [ xi, wang, li ];\r\nlet pets = [ white, boots, black, cai ];\r\n\r\n// 生成一个每个元素都包含\r\n// 主人名字和其所有宠物名字列表\r\n// 的新序列\r\nlet query = people.asEnumerable().groupJoin(pets,\r\n    (person, petCollection) => ({\r\n        ownerName: person.name,\r\n        pets: petCollection.select(pet => pet.name)\r\n    }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    // 输入该主人姓名。\r\n    console.log(`${ obj.ownerName }：`);\r\n    // 输入该主人所有宠物的名字。\r\n    for (let pet of obj.pets) {\r\n        console.log(`  ${ pet }`);\r\n    }\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 习大大：\r\n   旺财\r\n 王思聪：\r\n   小白\r\n   机器人\r\n 李小龙：\r\n   黑蛋\r\n */'}},35503:e=>{e.exports={}},78936:e=>{e.exports={}},51514:e=>{e.exports={"1.js":"let id1 = [ 44, 26, 92, 30, 71, 38 ];\r\nlet id2 = [ 39, 59, 83, 47, 26, 4, 30 ];\r\n\r\nlet both = id1.asEnumerable().intersect(id2);\r\n\r\nfor (let id of both) {\r\n    console.log(id);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 26\r\n 30\r\n */","2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和编号相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet store1 = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 }\r\n];\r\nlet store2 = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "柠檬", code: 12 }\r\n];\r\n\r\n// 获取所有的在第一个数组从出现\r\n// 又在第二个数组中出现了的产品\r\nlet duplicates = store1.asEnumerable().intersect(store2, productComparer);\r\n\r\nfor (let product of duplicates) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果 9\r\n */'}},99811:e=>{e.exports={"0.1.js":"[1, 2, 3].join('|');","1.1.js":'let xi = { name: "习大大" };\r\nlet wang = { name: "王思聪" };\r\nlet li = { name: "李小龙" };\r\n\r\nlet white = { name: "小白", owner: wang };\r\nlet boots = { name: "机器人", owner: wang };\r\nlet black = { name: "黑蛋", owner: li };\r\nlet cai = { name: "旺财", owner: xi };\r\n\r\nlet people = [ xi, wang, li ];\r\nlet pets = [ white, boots, black, cai ];\r\n\r\n// 从主人序列与宠物序列及其关系中\r\n// 构建一个 主人-宠物 键值对的新序列\r\n// 新序列的每个元素包含宠物名称和宠物主人的姓名\r\nlet query = people.asEnumerable().join(pets,\r\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 习大大 - 旺财\r\n 王思聪 - 小白\r\n 王思聪 - 机器人\r\n 李小龙 - 黑蛋\r\n */'}},15653:e=>{e.exports={}},44635:e=>{e.exports={}},21475:e=>{e.exports={}},62736:e=>{e.exports={}},6984:e=>{e.exports={"1.js":"let longs = [ 4294967296, 466855135, 81125 ];\r\n\r\nlet max = longs.asEnumerable().max();\r\n\r\nconsole.log(`最大的数字是${ max }。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 最大的数字是4294967296。\r\n */","2.js":'let pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\r\n\r\nconsole.log(`最大的年龄加名字长度是${ max }。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 最大的年龄加名字长度是10。\r\n */',"3.js":'let pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet max = pets.asEnumerable().max(pet => pet.age + pet.name.length);\r\n\r\nconsole.log(`最大的年龄加名字长度是${ max.name }+${ max.age }。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 最大的年龄加名字长度是小白+8。\r\n */'}},4487:e=>{e.exports={"1.js":"let longs = [ 4294967296, 466855135, 81125 ];\r\n\r\nlet min = longs.asEnumerable().min();\r\n\r\nconsole.log(`最小的数字是${ min }。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 最小的数字是81125。\r\n */","2.js":'let pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet min = pets.asEnumerable().min(pet => pet.age);\r\n\r\nconsole.log(`年龄最小的宠物是${ min }岁。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄最小的宠物是1岁。\r\n */',"3.js":'let pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet min = pets.asEnumerable().min(pet => pet.age);\r\n\r\nconsole.log(`年龄最小的宠物是${ min.name },${ min.age }岁。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 年龄最小的宠物是旺财,1岁。\r\n */'}},60548:e=>{e.exports={"1-2.1.19.js":'let fruits = ["芒果", "橘子", "苹果", 3.0, "香蕉"];\r\n\r\n// 对序列执行 ofType 方法\r\nlet query1 = fruits.asEnumerable().ofType(String);\r\n\r\nconsole.log("元素是 String 类型的有：");\r\nfor (let fruit of query1) {\r\n    console.log(fruit);\r\n}\r\n\r\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\r\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.asEnumerable().contains("果", Enumerable.comparers.ignoreCase()));\r\n\r\nconsole.log("\\n下列字符串包含 “果”：");\r\nfor (let fruit of query2) {\r\n    console.log(fruit);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 元素是 String 类型的有：\r\n// 芒果\r\n// 橘子\r\n// 苹果\r\n// 香蕉\r\n//\r\n// 下列字符串包含 “果”：\r\n// 芒果\r\n// 苹果',"1.js":'let fruits = ["芒果", "橘子", "苹果", 3.0, "香蕉"];\r\n\r\n// 对序列执行 ofType 方法\r\nlet query1 = fruits.asEnumerable().ofType(String);\r\n\r\nconsole.log("元素是 String 类型的有：");\r\nfor (let fruit of query1) {\r\n    console.log(fruit);\r\n}\r\n\r\n// 以下的查询展示了在 ofType 方法调用后使用 where 方法\r\nlet query2 = fruits.asEnumerable().ofType(String).where(fruit => fruit.toLowerCase().asEnumerable().contains("果"));\r\n\r\nconsole.log("\\n下列字符串包含 “果”：");\r\nfor (let fruit of query2) {\r\n    console.log(fruit);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 元素是 String 类型的有：\r\n// 芒果\r\n// 橘子\r\n// 苹果\r\n// 香蕉\r\n//\r\n// 下列字符串包含 “果”：\r\n// 芒果\r\n// 苹果'}},81440:e=>{e.exports={"1.js":'let pets = [\r\n    { name: "小白", age: 8 },\r\n    { name: "机器人", age: 4 },\r\n    { name: "旺财", age: 1 }\r\n];\r\n\r\nlet query = pets.asEnumerable().orderBy(pet => pet.age);\r\n\r\nfor (let pet of query) {\r\n    console.log(`${ pet.name } - ${ pet.age }`);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 旺财 - 1\r\n 机器人 - 4\r\n 小白 - 8\r\n*/'}},10007:e=>{e.exports={"1.js":"const specialComparer = (d1, d2) => {\r\n    let f1 = d1 * 1e16 % 1e16 / 1e16;\r\n    let f2 = d2 * 1e16 % 1e16 / 1e16;\r\n    if (f1 === f2) {\r\n        return d1 - d2;\r\n    } else if (f1 > f2) {\r\n        return 1;\r\n    } else {\r\n        return -1;\r\n    }\r\n};\r\n\r\nlet decimals = [ 6.2, 8.3, 0.5, 1.3, 6.3, 9.7 ];\r\n\r\nlet query = decimals.asEnumerable().orderByDescending(num => num, specialComparer);\r\n\r\nfor (let num of query) {\r\n    console.log(num);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 9.7\r\n 0.5\r\n 8.3\r\n 6.3\r\n 1.3\r\n 6.2\r\n*/"}},62754:e=>{e.exports={"1.js":"let array = [ 1, 2, 3 ];\r\n\r\n//数量为2的所有排列\r\nconsole.log(array.asEnumerable().permutation(2).select(per => `[${ per.join('|') }]`).toArray());\r\n//数量为2的所有重复排列\r\nconsole.log(array.asEnumerable().permutation(2, true).select(per => `[${ per.join('|') }]`).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// [1|2],[1|3],[2|1],[2|3],[3|1],[3|2]\r\n// [1|1],[1|2],[1|3],[2,1]|[2|2],[2|3],[3|1],[3|2],[3|3]"}},15590:e=>{e.exports={}},20684:e=>{e.exports={}},48631:e=>{e.exports={"1.js":'let fruits = [ "苹果", "百香果", "海南香蕉", "芒果", "橘子", "蓝莓", "新疆葡萄", "草莓" ];\r\n\r\nlet proportion = fruits.asEnumerable().proportion(fruit => fruit.length < 3);\r\n\r\nconsole.log((proportion * 100) + \'%\');\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 62.5%\r\n*/'}},10369:e=>{e.exports={}},15281:e=>{e.exports={}},90697:e=>{e.exports={}},67272:e=>{e.exports={}},20591:e=>{e.exports={}},272:e=>{e.exports={}},3330:e=>{e.exports={}},29480:e=>{e.exports={}},42642:e=>{e.exports={"1.js":"let squares = Enumerable.range(1, 10).select(x => x * x);\r\n\r\nfor (let num of squares) {\r\n    console.log(num);\r\n}\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 1\r\n 4\r\n 9\r\n 16\r\n 25\r\n 36\r\n 49\r\n 64\r\n 81\r\n 100\r\n*/","2.js":'let fruits = [ "苹果", "海南香蕉", "芒果", "沙糖桔", "西番莲的果实", "长城干红葡萄酒" ];\r\n\r\nlet query = fruits.asEnumerable().select((fruit, index) => ({ index, str: fruit.substring(0, index) }));\r\n\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n {"index":0,"str":""}\r\n {"index":1,"str":"海"}\r\n {"index":2,"str":"芒果"}\r\n {"index":3,"str":"沙糖桔"}\r\n {"index":4,"str":"西番莲的"}\r\n {"index":5,"str":"长城干红葡"}\r\n*/'}},37606:e=>{e.exports={"1.js":'let petOwners = [\r\n    { name: "李小龙", pets: [ "小白", "旺财" ] },\r\n    { name: "成龙", pets: [ "大黄", "甜心" ] },\r\n    { name: "李连杰", pets: [ "花花", "狗带" ] }\r\n];\r\n\r\n// 使用 selectMany() 查询。\r\nlet query1 = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets);\r\n\r\nconsole.log("使用 selectMany()：");\r\n\r\n// 只需要一个循环来遍历这个结果序列，\r\n// 因为它已经是一个一维序列了。\r\nfor (let pet of query1) {\r\n    console.log(pet);\r\n}\r\n\r\n// 下面的代码演示了如何使用 select()\r\n// 来代替 selectMany()。\r\nlet query2 = petOwners.asEnumerable().select(petOwner => petOwner.pets);\r\n\r\nconsole.log("\\n使用 select()：");\r\n\r\n// 需要两层循环来遍历结果序列，\r\n// 因为它是一个元素为序列的序列。\r\nfor (let petList of query2) {\r\n    for (let pet of petList) {\r\n        console.log(pet);\r\n    }\r\n    console.log();\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 使用 selectMany()：:\r\n 小白\r\n 旺财\r\n 大黄\r\n 甜心\r\n 花花\r\n 狗带\r\n\r\n 使用 select()：:\r\n 小白\r\n 旺财\r\n\r\n 大黄\r\n 甜心\r\n\r\n 花花\r\n 狗带\r\n\r\n*/',"2.js":'let petOwners = [\r\n    { name: "李小龙", pets: [ "小白", "小石头" ] },\r\n    { name: "成龙", pets: [ "大黄", "小甜心" ] },\r\n    { name: "李连杰", pets: [ "小花", "狗带" ] },\r\n    { name: "甄子丹", pets: [ "斑点" ] }\r\n];\r\n\r\n// 使用宠物列表中的宠物名字\r\n// 追加在宠物主人的序号后的方式\r\n// 投影序列中的元素。\r\nlet query = petOwners.asEnumerable().selectMany((petOwner, index) =>\r\n        petOwner.pets.asEnumerable().select(pet => index + pet));\r\n\r\nfor (let pet of query) {\r\n    console.log(pet);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 0小白\r\n// 0小石头\r\n// 1大黄\r\n// 1小甜心\r\n// 2小花\r\n// 2狗带\r\n// 3斑点',"3.js":'let petOwners = [\r\n    { name: "李小龙", pets: [ "小白", "小石头" ] },\r\n    { name: "成龙", pets: [ "大黄", "小甜心" ] },\r\n    { name: "李连杰", pets: [ "小花", "狗带" ] },\r\n    { name: "甄子丹", pets: [ "斑点" ] }\r\n];\r\n\r\n// 投影宠物主人的名称和宠物的名称。\r\nlet query = petOwners.asEnumerable().selectMany(petOwner => petOwner.pets, (petOwner, petName) => ({ petOwner, petName }))\r\n        .where(ownerAndPet => ownerAndPet.petName.startsWith("小"))\r\n        .select(ownerAndPet => ({\r\n            owner: ownerAndPet.petOwner.name,\r\n            pet: ownerAndPet.petName\r\n        }));\r\n\r\n// 输出结果。\r\nfor (let obj of query) {\r\n    console.log(obj);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// {"owner":"李小龙","pet":"小白"}\r\n// {"owner":"李小龙","pet":"小石头"}\r\n// {"owner":"成龙","pet":"小甜心"}\r\n// {"owner":"李连杰","pet":"小花"}'}},53069:e=>{e.exports={}},49880:e=>{e.exports={"1.js":'let pet1 = { name: "小白", age: 2 };\r\nlet pet2 = { name: "旺财", age: 8 };\r\n\r\n// 创建两个宠物列表.\r\nlet pets1 = [ pet1, pet2 ];\r\nlet pets2 = [ pet1, pet2 ];\r\n\r\nlet equal = pets1.asEnumerable().sequenceEqual(pets2);\r\n\r\nconsole.log(`这些宠物列表${ equal ? "是" : "不是" }相同的。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 这些宠物列表是相同的。\r\n*/',"2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和数目相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet storeA = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 }\r\n];\r\n\r\nlet storeB = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 }\r\n];\r\n\r\nlet equalAB = storeA.asEnumerable().sequenceEqual(storeB, productComparer);\r\n\r\nconsole.log("相同? " + equalAB);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 相同? True\r\n*/'}},71826:e=>{e.exports={}},12712:e=>{e.exports={"1.js":'let fruits1 = [ "橘子" ];\r\n\r\nlet fruit1 = fruits1.asEnumerable().single();\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 橘子\r\n*/',"2.js":'let fruits2 = [ "橘子", "苹果" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits2.asEnumerable().single();\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log("集合中不包含恰好一个元素。");\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 集合中不包含恰好一个元素。\r\n*/\r\n',"3.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet fruit1 = fruits.asEnumerable().single(fruit => fruit.length > 2);\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 百香果\r\n*/',"4.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\nlet fruit2 = null;\r\n\r\ntry {\r\n    fruit2 = fruits.asEnumerable().single(fruit => fruit.length > 5);\r\n\r\n    console.log(fruit2);\r\n} catch (e) {\r\n    console.log("集合中不包含恰好一个长度超过5的元素。");\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 集合中不包含恰好一个长度超过5的元素。'}},46565:e=>{e.exports={"1.js":'let fruits1 = [ "橘子" ];\r\n\r\nlet fruit1 = fruits1.asEnumerable().singleOrDefault("没有这样的水果！");\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 橘子\r\n*/',"2.js":'let fruits2 = [];\r\n\r\nlet fruit2 = fruits2.asEnumerable().singleOrDefault("没有这样的水果！");\r\n\r\nconsole.log(fruit2);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 没有这样的水果！\r\n*/',"3.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet fruit1 = fruits.asEnumerable().singleOrDefault("没有这样的水果！", fruit => fruit.length > 2);\r\n\r\nconsole.log(fruit1);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 百香果\r\n*/',"4.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet fruit2 = fruits.asEnumerable().singleOrDefault("没有这样的水果！", fruit => fruit.length > 5);\r\n\r\nconsole.log(fruit2);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 没有这样的水果！\r\n*/'}},26082:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet lowerGrades = grades.asEnumerable().orderByDescending().skip(3);\r\n\r\nconsole.log("不包含最大三个数其余数字有：");\r\nfor (let grade of lowerGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 不包含最大三个数其余数字有：\r\n 82\r\n 70\r\n 59\r\n 56\r\n*/'}},32476:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet lowerFiftyPercentGrades = grades.asEnumerable().orderByDescending().skipProportion(0.5);\r\n\r\nconsole.log("50%名额外的低分成绩：");\r\nfor (let grade of lowerFiftyPercentGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 50%名额外的低分成绩：\r\n 82\r\n 70\r\n 59\r\n 56\r\n*/'}},33217:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet lowerGrades = grades.asEnumerable().orderByDescending().skipWhile(grade => grade >= 80);\r\n\r\nconsole.log("所有小于80的成绩：");\r\nfor (let grade of lowerGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 所有小于80的成绩：\r\n 70\r\n 59\r\n 56\r\n*/',"2.js":"let amounts = [ 5000, 2500, 9000, 8000, 6500, 4000, 1500, 5500 ];\r\n\r\nlet query = amounts.asEnumerable().skipWhile((amount, index) => amount > index * 1000);\r\n\r\nfor (let amount of query) {\r\n    console.log(amount);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 4000\r\n 1500\r\n 5500\r\n*/"}},44291:e=>{e.exports={}},46491:e=>{e.exports={}},2542:e=>{e.exports={}},12213:e=>{e.exports={}},41997:e=>{e.exports={"1.js":"let numbers = [ 43.68, 1.25, 583.7, 6.5 ];\r\n\r\nlet sum = numbers.asEnumerable().sum();\r\n\r\nconsole.log(`所有数的和是${ sum }。`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 所有数的和是635.13。\r\n*/","2.js":'let packages = [\r\n    { company: "化肥", weight: 25.2 },\r\n    { company: "水泥", weight: 18.7 },\r\n    { company: "海绵", weight: 6.0 },\r\n    { company: "黄沙", weight: 33.9 }\r\n];\r\n\r\nlet totalWeight = packages.asEnumerable().sum(pkg => pkg.weight);\r\n\r\nconsole.log(`所有袋子的总重量是：${ totalWeight }`);\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 所有袋子的总重量是：83.8\r\n*/'}},28338:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet topThreeGrades = grades.asEnumerable().orderByDescending().take(3);\r\n\r\nconsole.log("最高的三个成绩是：");\r\nfor (let grade of topThreeGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 最高的三个成绩是：\r\n 98\r\n 92\r\n 85\r\n*/'}},51575:e=>{e.exports={"1.js":'let grades = [ 59, 82, 70, 56, 92, 98, 85 ];\r\n\r\nlet topFiftyPercentGrades = grades.asEnumerable().orderByDescending().takeProportion(0.5);\r\n\r\nconsole.log("前50%名额的最高成绩是：");\r\nfor (let grade of topFiftyPercentGrades) {\r\n    console.log(grade);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 前50%名额的最高成绩是：\r\n 98\r\n 92\r\n 85\r\n*/'}},9627:e=>{e.exports={"1.js":'let fruits = [ "苹果", "香蕉", "芒果", "橘子", "百香果", "葡萄" ];\r\n\r\nlet query = fruits.asEnumerable().takeWhile(fruit => "橘子" !== fruit);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果\r\n 香蕉\r\n 芒果\r\n*/',"2.js":'let fruits = [ "苹果", "百香果", "香蕉", "芒果", "橘子", "蓝莓", "葡萄", "草莓" ];\r\n\r\nlet query = fruits.asEnumerable().takeWhile((fruit, index) => fruit.length >= index);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果\r\n 百香果\r\n 香蕉\r\n*/'}},4424:e=>{e.exports={}},6267:e=>{e.exports={}},94895:e=>{e.exports={}},22803:e=>{e.exports={}},14298:e=>{e.exports={"1.js":"let ints1 = [ 5, 3, 9, 7, 5, 9, 3, 7 ];\r\nlet ints2 = [ 8, 3, 6, 4, 4, 9, 1, 0 ];\r\n\r\nlet union = ints1.asEnumerable().union(ints2);\r\n\r\nfor (let num of union) {\r\n    console.log(num);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 5\r\n 3\r\n 9\r\n 7\r\n 8\r\n 6\r\n 4\r\n 1\r\n 0\r\n*/","2.js":'// 一个自定义的比较器。\r\nlet productComparer = (x, y) => {\r\n    if (x === y) return true;\r\n    if (!x || !y) return false;\r\n    // 如果产品的名称和编号相等，则表示是相同的产品。\r\n    return x.code === y.code && x.name === y.name;\r\n};\r\n\r\nlet store1 = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "橘子", code: 4 }\r\n];\r\n\r\nlet store2 = [\r\n    { name: "苹果", code: 9 },\r\n    { name: "柠檬", code: 12 }\r\n];\r\n\r\n//获取在两个序列中的所有产品\r\n//除了重复的部分。\r\nlet union = store1.asEnumerable().union(store2, productComparer);\r\n\r\nfor (let product of union) {\r\n    console.log(product.name + " " + product.code);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果 9\r\n 橘子 4\r\n 柠檬 12\r\n*/'}},36117:e=>{e.exports={}},41283:e=>{e.exports={"1.js":'let fruits = [ "苹果", "百香果", "海南香蕉", "芒果", "橘子", "蓝莓", "新疆葡萄", "草莓" ];\r\n\r\nlet query = fruits.asEnumerable().where(fruit => fruit.length < 3);\r\n\r\nfor (let fruit of query) {\r\n    console.log(fruit);\r\n}\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 苹果\r\n 芒果\r\n 橘子\r\n 蓝莓\r\n 草莓\r\n*/',"2.js":"let numbers = [ 0, 30, 20, 15, 90, 85, 40, 75 ];\r\n\r\nlet query = numbers.asEnumerable().where((number, index) => number <= index * 10);\r\n\r\nfor (let number of query) {\r\n    console.log(number);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 0\r\n 20\r\n 15\r\n 40\r\n*/"}},72311:e=>{e.exports={}},21354:e=>{e.exports={"1.js":'let numbers = [ 1, 2, 3, 4 ];\r\nlet words = [ "一", "二", "三" ];\r\n\r\nlet numbersAndWords = numbers.asEnumerable().zip(words, (first, second) => first + " " + second);\r\n\r\nfor (let item of numbersAndWords) {\r\n    console.log(item);\r\n}\r\n\r\n// 这段代码的输出结果如下：\r\n\r\n// 1 一\r\n// 2 二\r\n// 3 三'}},21683:e=>{e.exports={}},29234:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.asBinary().preOrder().toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,c,d,e"}},41411:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.breadthSearch(value => value === 'd' || value === 'e'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// e"}},89792:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.breadthSubTree(value => value === 'd' || value === 'e').select(node => node.value).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// e,d"}},3837:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.breadthSubTrees(value => value === 'd' || value === 'e').select(node => node.value).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// e,d"}},27958:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.breadthTraverse().toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,e,c,d"}},35675:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.degree());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 2"}},99065:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.depth());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// 3"}},48344:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.depthSearch(value => value === 'd' || value === 'e'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// d"}},92706:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.depthSubTree(value => value === 'd' || value === 'e').select(node => node.value).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// d,e"}},95946:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.depthTraverse().toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,c,d,e"}},28312:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.getChild(1).value);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// e"}},44409:e=>{e.exports={"1.js":"let root = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(root.getParent('c'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// b"}},57112:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.getChild(0).getValue(1));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// d"}},88191:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isAncestorOf(tree.getChild(0).getChild(1)));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true","2.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isAncestorOf('c'));\r\nconsole.log(tree.isAncestorOf('f'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true\r\n// false"}},59170:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isBinary());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true"}},10283:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.getChild(1).isChildOf(tree));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true"}},93029:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isCompleteBinary());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true"}},62423:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.getChild(0).getChild(1).isDescendantOf(tree));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true"}},46064:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isFullBinary());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true"}},15509:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isParentOf(tree.getChild(1)));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// true","2.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isParentOf('c'));\r\nconsole.log(tree.isParentOf('e'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// false\r\n// true"}},20357:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isPerfectBinary());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// false"}},14678:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.isPrefectBinary());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// false"}},55655:e=>{e.exports={"1.js":"let root = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(root.lowestAncestor('c', 'd'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// b"}},30806:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        { value: 'b' },\r\n        { value: 'c' },\r\n        { value: 'd' },\r\n        { value: 'e' }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.next('c'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// d"}},84851:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        { value: 'b' },\r\n        { value: 'c' },\r\n        { value: 'd' },\r\n        { value: 'e' }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.nextAll('c').toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// d,e"}},70156:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.getChild(0).getChild(1).path(tree).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,d"}},30858:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.pathTo(tree.getChild(0).getChild(1)).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,d","2.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.pathTo('d').toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,d"}},64047:e=>{e.exports={"1.js":"let array = [ 1, 2, 3 ];\r\n\r\n//permutation\r\nconsole.log(array.permutation(2).select(per => `[${ per.join('|') }]`).toArray());\r\n//repetition permutation\r\nconsole.log(array.permutation(2, true).select(per => `[${ per.join('|') }]`).toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// [1|2],[1|3],[2|3]\r\n// [1|1],[1|2],[1|3],[2|2],[2|3],[3|3]"}},44430:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        { value: 'b' },\r\n        { value: 'c' },\r\n        { value: 'd' },\r\n        { value: 'e' }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.prev('d'));\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// c"}},20089:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        { value: 'b' },\r\n        { value: 'c' },\r\n        { value: 'd' },\r\n        { value: 'e' }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.prevAll('d').toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// b,c"}},26047:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        { value: 'b' },\r\n        { value: 'c' },\r\n        { value: 'd' },\r\n        { value: 'e' }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.siblings('d').toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// b,c,e"}},74893:e=>{e.exports={"config.as.js":"Enumerable.config.as = 'em';\r\nlet enumerable = [1, 2, 3].em();","config.as.try.js":"Enumerable.config.as = 'em';\r\nlet enumerable = [1, 2, 3].em();\r\nconsole.log(enumerable);","config.extends.js":"Enumerable.config.extends.array = true; //开启针对 Array 的扩展，使 Array 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（推荐开启）\r\nEnumerable.config.extends.string = true; //开启针对 String 的扩展，使 String 对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）\r\nEnumerable.config.extends.object = true; //开启针对 Object 的扩展，使任何对象拥有 LINQ 的功能，可以直接使用 LINQ 提供的方法。（不建议开启）"}},51789:e=>{e.exports={"asEnumerable.js":"let a = [1, 2, 3].asEnumerable();\r\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\r\nlet s = 'abc'.asEnumerable();","asEnumerable.try.js":"let a = [1, 2, 3].asEnumerable();\r\nconsole.log(a);\r\nlet o = ({ key: 1, value: 'a' }).asEnumerable();\r\nconsole.log(o);\r\nlet s = 'abc'.asEnumerable();\r\nconsole.log(s);","asTree.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);","asTree.try.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.pathTo('d').toArray());\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n// a,b,d\r\n","Enumerable.asEnumerable.js":"let enumerable = Enumerable.asEnumerable([1, 2, 3]);","Enumerable.asEnumerable.try.js":"let enumerable = Enumerable.asEnumerable([1, 2, 3]);\r\nconsole.log(enumerable);","Enumerable.js":"let enumerable = Enumerable([1, 2, 3]);","Enumerable.try.js":"let enumerable = Enumerable([1, 2, 3]);\r\nconsole.log(enumerable);"}},84290:e=>{e.exports={"1.js":'let pets = [\r\n    { name: "小白", props: { age: 10, weight: 59 } },\r\n    { name: "小黑", props: { age: 14, weight: 50 } },\r\n    { name: "旺财", props: { age: 6, weight: 36 } }\r\n];\r\n\r\npets.asEnumerable().select("name");\r\n//上述代码等价于以下代码\r\npets.asEnumerable().select(pet => pet.name);',"1.try.js":'let pets = [\r\n    { name: "小白", props: { age: 10, weight: 59 } },\r\n    { name: "小黑", props: { age: 14, weight: 50 } },\r\n    { name: "旺财", props: { age: 6, weight: 36 } }\r\n];\r\n\r\nconsole.log(pets.asEnumerable().select("name"));\r\n//上述代码等价于以下代码\r\nconsole.log(pets.asEnumerable().select(pet => pet.name));\r\n',"2.js":"let arrays = [\r\n    [ 1, 2, 4, 8 ],\r\n    [ 1, 3, 9 ],\r\n    [ 1, 5 ]\r\n];\r\n\r\narrays.asEnumerable().select(1);\r\n//上述代码等价于以下代码\r\narrays.asEnumerable().select(array => array[1]);"}},92203:e=>{e.exports={"1.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\ntree.toValue(\"children\");\r\n//上述代码等价于以下代码\r\ntree.toValue((obj, value) => obj.children = value);","1.try.js":"let tree = ({\r\n    value: 'a',\r\n    children: [\r\n        {\r\n            value: 'b',\r\n            children: [\r\n                { value: 'c' },\r\n                { value: 'd' }\r\n            ]\r\n        },\r\n        { value: 'e', }\r\n    ]\r\n}).asEnumerable(node => node.children, node => node.value);\r\n\r\nconsole.log(tree.toValue(\"children\"));\r\n//上述代码等价于以下代码\r\nconsole.log(tree.toValue((obj, value) => obj.children = value));\r\n"}},1218:e=>{e.exports={"1.js":'let pets = [ { name: "小白", age: 8, vaccinated: true }, { name: "大黄", age: 4, vaccinated: false }, { name: "旺财", age: 1, vaccinated: false } ];\r\n\r\nlet unvaccinated = pets.asEnumerable().any(p => p.age > 1 && p.vaccinated === false);\r\n\r\nconsole.log(`${ unvaccinated ? "有" : "没有" }超过一岁未接种疫苗的动物。`);\r\n\r\n// 这段代码的输出结果如下：\r\n//\r\n//  有超过一岁未接种疫苗的动物。',"2.js":'let xi = { name: "习大大" }, wang = { name: "王思聪" }, li = { name: "李小龙" };\r\nlet white = { name: "小白", owner: wang }, boots = { name: "机器人", owner: wang }, black = { name: "黑蛋", owner: li }, cai = { name: "旺财", owner: xi };\r\nlet people = [ xi, wang, li ];\r\nlet pets = [ white, boots, black, cai ];\r\n\r\nlet query = people.asEnumerable().join(pets,\r\n    (person, pet) => ({ ownerName: person.name, pet: pet.name }),\r\n    person => person,\r\n    pet => pet.owner);\r\n\r\nfor (let obj of query) {\r\n    console.log(`${ obj.ownerName } - ${ obj.pet }`);\r\n}\r\n\r\n/*\r\n 这段代码的输出结果如下：\r\n\r\n 习大大 - 旺财\r\n 王思聪 - 小白\r\n 王思聪 - 机器人\r\n 李小龙 - 黑蛋\r\n */'}},24467:e=>{e.exports={title:"执行器",contents:[{title:"什么是执行器",descriptions:[{type:"description",content:"执行器是一个仅对输入值执行一系列计算的函数"},{type:"description",content:"通常一个执行器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 执行一系列计算, 但无需返回任何数值"},{type:"function",content:{returns:{type:"void"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"],optional:!0}]}}]}]}},68689:e=>{e.exports={title:"比较器",contents:[{title:"什么是比较器",descriptions:[{type:"description",content:"比较器是一个反映两个输入值之间关系的函数"}]},{title:"大小比较器",descriptions:[{type:"description",content:"大小比较器是一个反映两个输入值之间大小关系的比较器"},{type:"function",content:{returns:{type:"number"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{type:"see",content:{apis:"Enumerable.comparers",property:"default"}}]},{title:"相等比较器",descriptions:[{type:"description",content:"相等比较器是一个反映两个输入值是否相等的比较器"},{type:"function",content:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"other",types:["any"]}]}},{type:"see",content:{apis:"Enumerable.comparers",property:"equality"}}]}]}},48973:e=>{e.exports={title:"配置",contents:[{title:"配置获取 IEnumerable 对象的方法",descriptions:[{type:"description",content:"默认的获取 IEnumerable 对象的方法名为 asEnumerable, 通过 config.as 属性可以修改此方法名"},{type:"example",content:{type:"javascript",href:"config.as.js",tryHref:"config.as.try.js"}},{type:"warning",content:"修改后 asEnumerable 方法依然有效"}]},{title:"配置内置对象的扩展",descriptions:[{type:"description",content:"使用如下方式可以对javascript中原生的对象进行扩展"},{type:"example",content:{type:"javascript",href:"config.extends.js",notTry:!0}}]}]}},9608:e=>{e.exports={title:"枚举器",contents:[{title:"什么是枚举器",descriptions:[]}]}},98262:e=>{e.exports={title:"扩展",contents:[{title:"为什么需要扩展",descriptions:[]},{title:"扩展对象",descriptions:[]}]}},54865:e=>{e.exports={title:"获取 IEnumerable 实例",contents:[{title:"通过 Enumerable 构造方法获取",descriptions:[{type:"description",content:"可以通过 Enumerable 类的构造方法获取一个 IEnumerable 对象"},{type:"example",content:{type:"javascript",href:"Enumerable.js",tryHref:"Enumerable.try.js"}},{type:"see",content:{apis:"Enumerable",constructor:!0}}]},{title:"通过 Enumerable.asEnumerable 方法获取",descriptions:[{type:"example",content:{type:"javascript",href:"Enumerable.asEnumerable.js",tryHref:"Enumerable.asEnumerable.try.js"}},{type:"see",content:{apis:"Enumerable",method:"asEnumerable"}}]},{title:"通过 asEnumerable 方法获取",descriptions:[{type:"description",content:"引入linq-js后, 任何对象都包含一个 asEnumerable 方法, 可以直接获取一个 IEnumerable 对象"},{type:"example",content:{type:"javascript",href:"asEnumerable.js",tryHref:"asEnumerable.try.js"}}]},{title:" 通过 Object.prototype.asEnumerable / Enumerable.asEnumerable 方法获取一个 ITree 对象",descriptions:[{type:"description",content:"可以通过 Object.prototype.asEnumerable / Enumerable.asEnumerable 从一个有树形结构的 objcet 对象上获取一个 ITree 对象"},{type:"warning",content:"需要最低版本:2.1.22"},{type:"example",content:{type:"javascript",href:"asTree.js",tryHref:"asTree.try.js"}},{type:"see",content:{apis:"Enumerable",method:"asEnumerable",index:1}}]}]}},19170:e=>{e.exports={title:"迭代器",contents:[{title:"什么是迭代器",descriptions:[]},{title:"ES6中的迭代器",descriptions:[]},{title:"迭代器的 asEnumerable 方法",descriptions:[{type:"description",content:"迭代器也存在 asEnumerable 方法, 同样返回一个 IEnumerable 对象. 由于遍历器的特殊性, 通过遍历器的 asEnumerable 方法获得的 IEnumerable 对象的元素只能被迭代一次, 或者其延迟执行的方法只能被执行一次"}]}]}},35687:e=>{e.exports={title:"插件",contents:[{title:"什么是插件",descriptions:[]},{title:"添加插件",descriptions:[]},{title:"移除插件",descriptions:[]}]}},10001:e=>{e.exports={title:"筛选器",contents:[{title:"什么是筛选器",descriptions:[{type:"description",content:"筛选器是一个判断输入参数是否满足条件的函数"},{type:"description",content:"通常一个筛选器接受一个参数值, 或者额外接受输入值所在的序列中的索引作为第二个参数, 返回一个 boolean 值表示该参数或与其索引是否满足指定的条件"},{type:"function",content:{returns:{type:"boolean"},parameters:[{name:"element",types:["any"]},{name:"index",types:["number"],optional:!0}]}}]}]}},13234:e=>{e.exports={title:"选择器",contents:[{title:"什么是选择器",descriptions:[{type:"description",content:"选择器是一个将输入值映射到一个输出值的函数"},{type:"description",content:"该函数接受一个或多个输入值, 有些情况下还接受输入值所在序列中的索引作为参数, 经过一系列自定义的运算, 最终返回一个对应的值, 返回值通常用来组成新的序列或进行其他运算"}]},{title:"一元选择器",descriptions:[{type:"function",content:{returns:{type:"any"},parameters:[{types:["any"],name:"element"},{types:["number"],name:"index",optional:!0}]}},{type:"see",content:{apis:"Enumerable.selectors",property:"default"}}]},{title:"二元选择器",descriptions:[{type:"function",content:{returns:{type:"any"},parameters:[{types:["any"],name:"first"},{types:["any"],name:"second"},{types:["number"],name:"index",optional:!0}]}}]},{title:"使用字符串/数字/符号代替一元选择器",descriptions:[{type:"description",content:"可以使用字符串、数字或符号代替一元选择器，以下实例展示字符串或数字代替的一元选择器与一元选择器的等价关系"},{type:"example",content:{type:"javascript",href:"1.js",tryHref:"1.try.js"}},{type:"example",content:{type:"javascript",href:"2.js",notTry:!0}},{type:"warning",content:"自 2.1.19 版本后才开始接受数字/符号参数"}]}]}},37753:e=>{e.exports={title:"设置器",contents:[{title:"什么是设置器",descriptions:[{type:"description",content:"设置器是一个将一个输入值设置到另一个输入值中的函数"},{type:"description",content:"该函数接受二个输入值, 将第二个参数的值设置到第一个参数的值中. 此方法不需要返回任何值"},{type:"warning",content:"自 2.1.23 版本后才能使用设置器"}]},{title:"使用字符串/数字/符号代替设置器",descriptions:[{type:"description",content:"可以使用字符串、数字或符号代替设置器，以下实例展示字符串或数字代替的设置器与设置器的等价关系"},{type:"example",content:{type:"javascript",href:"1.js",tryHref:"1.try.js"}}]}]}},59301:e=>{e.exports={title:"开始使用",contents:[{title:"可以使用 LINQ 中的一些方法",descriptions:[{type:"description",content:"获取到 IEnumerable 对象后既可以使用 LINQ 中提供的一些方法"},{type:"remark",content:"以下例子中展示了一些常用的 LINQ 功能"},{type:"example",content:{type:"javascript",href:"1.js"}},{type:"example",content:{type:"javascript",href:"2.js"}},{type:"see",content:{apis:"IEnumerable"}}]},{title:"可以使用原生 Array 的一些方法",descriptions:[{type:"description",content:"获取到 IEnumerable 对象后除了可以使用 LINQ 提供的一些方法的同时还可以使用原生 Array 提供的一些方法"},{type:"see",content:{apis:"IEnumerable"}}]}]}},34738:e=>{e.exports={icon:"",code:"install",title:"安装",contents:[{code:"addIn",title:"添加至项目",details:[{type:"example",runtime:"Node JS",scripts:[{type:"bash",script:"$ npm install --save linq-js"}]},{type:"example",runtime:"Bower",scripts:[{type:"bash",script:"$ bower install js-linq"}]}]},{code:"require",title:"引入",details:[{type:"example",descriptions:["模块化项目中可使用 require 引入"],scripts:[{type:"javascript",script:"const Enumerable = require('linq-js');"}],remarks:["说明:本module依赖于ES6,建议项目在中使用ES6,以下案例中将均使用ES6写法. 当然你依然可以选择使用传统的ES5的写法,比如:使用 function 代替 => 函数"]},{type:"example",descriptions:["也可以直接在 html 中引入"],scripts:[{type:"<script>",src:"libs/linq-js.min.js"},{type:"<script>",src:"libs/linq-js.js"}]}]}]}},41426:e=>{e.exports={code:"introduction",title:"简介",shields:[{href:"https://github.com/wm123450405/linqjs",image:"https://img.shields.io/github/release/wm123450405/linqjs.svg"},{href:"https://www.npmjs.com/package/linq-js",image:"https://img.shields.io/npm/v/linq-js.svg"},{href:"https://www.npmjs.com/package/linq-js",image:"https://img.shields.io/npm/dm/linq-js.svg"},{href:"https://travis-ci.org/wm123450405/linqjs",image:"https://img.shields.io/travis/wm123450405/linqjs.svg"}],contents:["对 JavaScript 中原生数组、对象进行扩展, 提供了一些对数据的操作方法.","包括对数组结构、树形结构、对象结构等数据进行 查询,排序,连接,合并,分组,分段,转换,遍历 等一系列功能.","可以用精炼和易懂的代码实现比较复杂的操作.","&nbsp;","一开始,在 ES5 的时代,我觉得 js 对数组的操作实在太繁琐了. 可能正是这种繁琐才有了像 underscore 这样优秀的 js 库的出现.","我本不是做前端出身的,我觉得其他语言对于数组或列表的操作要比 js 好用很多,提供了大量的方法和功能. 于是最早参考的 C#中的功能实现了一些方法, 就有了1.0版本.","后来,ES6 发布并普及开来,js 原生数组也增加了很多好用的功能,但是这还远远不够.","于是我又翻出了我的代码用 ES6 重写, 有了2.1版本, 并发布至npm上. 这一次我又借鉴了另外一些语言中的部分特性, 比如 php.我想我后面可能再会添加一些其他语言或框架类似的功能,比如 Java,Python 等.","后来我在 stackoverflow 中看到很多人对于树形结构的操作提了很多的问题,我像我的工具包应该要可以为他们提供帮助.于是在最新的几个版本中我加入了对树形结构的一些操作.","&nbsp;",'穷人,求捐赠: <a href="https://gitee.com/wm123450405/linqjs">https://gitee.com/wm123450405/linqjs</a> . 当然你的star也是对我最大的支持']}},73231:e=>{e.exports={name:"中文版"}},92226:(e,r,n)=>{var s={"./en-us/apis/Enumerable.json":76465,"./en-us/apis/Enumerable/meta.json":12565,"./en-us/apis/Enumerable/methods/asEnumerable.json":86290,"./en-us/apis/Enumerable/methods/empty.json":26149,"./en-us/apis/Enumerable/properties/actions.json":77003,"./en-us/apis/Enumerable/properties/comparers.json":16659,"./en-us/apis/Enumerable/properties/config.json":61117,"./en-us/apis/Enumerable/properties/predicates.json":12527,"./en-us/apis/Enumerable/properties/selectors.json":91509,"./en-us/caption.json":7221,"./en-us/change.json":5900,"./en-us/directory.json":19749,"./en-us/directory.meta.json":21167,"./en-us/examples/IEnumerable.json":55166,"./en-us/examples/IEnumerable/methods/aggregate.json":13273,"./en-us/examples/IEnumerable/methods/all.json":31386,"./en-us/examples/IEnumerable/methods/any.json":33564,"./en-us/examples/IEnumerable/methods/average.json":68414,"./en-us/examples/IEnumerable/methods/concat.json":92595,"./en-us/examples/IEnumerable/methods/contains.json":50318,"./en-us/examples/IEnumerable/methods/count.json":22909,"./en-us/examples/IEnumerable/methods/defaultIfEmpty.json":91412,"./en-us/examples/IEnumerable/methods/distinct.json":50930,"./en-us/examples/IEnumerable/methods/elementAt.json":11190,"./en-us/examples/IEnumerable/methods/elementAtOrDefault.json":56138,"./en-us/examples/IEnumerable/methods/except.json":20369,"./en-us/examples/IEnumerable/methods/first.json":46332,"./en-us/examples/IEnumerable/methods/firstOrDefault.json":24160,"./en-us/examples/IEnumerable/methods/groupBy.json":25024,"./en-us/examples/IEnumerable/methods/groupJoin.json":55556,"./en-us/examples/IEnumerable/methods/intersect.json":31683,"./en-us/examples/IEnumerable/methods/join.json":63867,"./en-us/examples/IEnumerable/methods/max.json":27065,"./en-us/examples/IEnumerable/methods/min.json":81622,"./en-us/examples/IEnumerable/methods/ofType.json":45849,"./en-us/examples/IEnumerable/methods/orderBy.json":93101,"./en-us/examples/IEnumerable/methods/orderByDescending.json":80098,"./en-us/examples/IEnumerable/methods/select.json":46805,"./en-us/examples/IEnumerable/methods/selectMany.json":16536,"./en-us/examples/IEnumerable/methods/sequenceEqual.json":42569,"./en-us/examples/IEnumerable/methods/single.json":3087,"./en-us/examples/IEnumerable/methods/singleOrDefault.json":9249,"./en-us/examples/IEnumerable/methods/skip.json":3961,"./en-us/examples/IEnumerable/methods/skipWhile.json":28613,"./en-us/examples/IEnumerable/methods/sum.json":78846,"./en-us/examples/IEnumerable/methods/take.json":84570,"./en-us/examples/IEnumerable/methods/takeWhile.json":55190,"./en-us/examples/IEnumerable/methods/union.json":87941,"./en-us/examples/IEnumerable/methods/where.json":47067,"./en-us/examples/IEnumerable/methods/zip.json":33808,"./en-us/examples/config.json":14285,"./en-us/examples/instance.json":80846,"./en-us/examples/selector.json":67632,"./en-us/examples/use.json":79741,"./en-us/guides/action.json":80925,"./en-us/guides/comparer.json":26854,"./en-us/guides/config.json":38471,"./en-us/guides/instance.json":53226,"./en-us/guides/predicate.json":32948,"./en-us/guides/selector.json":33193,"./en-us/guides/use.json":63996,"./en-us/install.json":31836,"./en-us/introduction.json":27775,"./en-us/meta.json":81326,"./zh-cn/about.json":60240,"./zh-cn/apis/BinaryTree.json":51769,"./zh-cn/apis/BinaryTree/meta.json":33798,"./zh-cn/apis/BinaryTree/methods/hasLeft.json":48880,"./zh-cn/apis/BinaryTree/methods/hasRight.json":75815,"./zh-cn/apis/BinaryTree/methods/inOrder.json":53707,"./zh-cn/apis/BinaryTree/methods/postOrder.json":75921,"./zh-cn/apis/BinaryTree/methods/preOrder.json":4383,"./zh-cn/apis/BinaryTree/properties/left.json":45783,"./zh-cn/apis/BinaryTree/properties/right.json":71485,"./zh-cn/apis/Directory.json":66903,"./zh-cn/apis/Directory/meta.json":77924,"./zh-cn/apis/Directory/methods/delete.json":72468,"./zh-cn/apis/Directory/methods/get.json":13402,"./zh-cn/apis/Directory/methods/has.json":24291,"./zh-cn/apis/Directory/methods/set.json":64918,"./zh-cn/apis/Entry.json":26781,"./zh-cn/apis/Entry/meta.json":22950,"./zh-cn/apis/Entry/properties/key.json":59720,"./zh-cn/apis/Entry/properties/value.json":15686,"./zh-cn/apis/Enumerable.actions.json":49751,"./zh-cn/apis/Enumerable.actions/meta.json":29744,"./zh-cn/apis/Enumerable.actions/properties/default.json":46353,"./zh-cn/apis/Enumerable.comparers.json":24750,"./zh-cn/apis/Enumerable.comparers/meta.json":17215,"./zh-cn/apis/Enumerable.comparers/methods/array.json":40202,"./zh-cn/apis/Enumerable.comparers/methods/greater.json":3832,"./zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json":21295,"./zh-cn/apis/Enumerable.comparers/methods/less.json":17154,"./zh-cn/apis/Enumerable.comparers/methods/predicate.json":74913,"./zh-cn/apis/Enumerable.comparers/properties/default.json":87645,"./zh-cn/apis/Enumerable.comparers/properties/equality.json":63091,"./zh-cn/apis/Enumerable.comparers/properties/same.json":46162,"./zh-cn/apis/Enumerable.comparers/properties/strict.json":58251,"./zh-cn/apis/Enumerable.config.json":37557,"./zh-cn/apis/Enumerable.config/meta.json":43735,"./zh-cn/apis/Enumerable.config/properties/as.json":47853,"./zh-cn/apis/Enumerable.config/properties/extends.array.json":52494,"./zh-cn/apis/Enumerable.config/properties/extends.lazy.json":14063,"./zh-cn/apis/Enumerable.config/properties/extends.object.json":29606,"./zh-cn/apis/Enumerable.config/properties/extends.string.json":43148,"./zh-cn/apis/Enumerable.json":82001,"./zh-cn/apis/Enumerable.predicates.json":6493,"./zh-cn/apis/Enumerable.predicates/meta.json":69724,"./zh-cn/apis/Enumerable.predicates/methods/equality.json":71910,"./zh-cn/apis/Enumerable.predicates/methods/not.json":57546,"./zh-cn/apis/Enumerable.predicates/methods/properties.json":31681,"./zh-cn/apis/Enumerable.predicates/methods/regexp.json":52161,"./zh-cn/apis/Enumerable.predicates/methods/same.json":55570,"./zh-cn/apis/Enumerable.predicates/methods/selector.json":29670,"./zh-cn/apis/Enumerable.predicates/methods/strict.json":56180,"./zh-cn/apis/Enumerable.predicates/properties/default.json":50988,"./zh-cn/apis/Enumerable.predicates/properties/exists.json":31068,"./zh-cn/apis/Enumerable.selectors.json":67882,"./zh-cn/apis/Enumerable.selectors/meta.json":66194,"./zh-cn/apis/Enumerable.selectors/methods/property.json":22350,"./zh-cn/apis/Enumerable.selectors/properties/children.json":61979,"./zh-cn/apis/Enumerable.selectors/properties/default.json":23444,"./zh-cn/apis/Enumerable.selectors/properties/join.json":35495,"./zh-cn/apis/Enumerable.selectors/properties/key.json":75347,"./zh-cn/apis/Enumerable.selectors/properties/parent.json":65121,"./zh-cn/apis/Enumerable.selectors/properties/result.json":15910,"./zh-cn/apis/Enumerable.selectors/properties/value.json":31085,"./zh-cn/apis/Enumerable.setters.json":47357,"./zh-cn/apis/Enumerable.setters/meta.json":51226,"./zh-cn/apis/Enumerable.setters/methods/property.json":74867,"./zh-cn/apis/Enumerable.setters/properties/children.json":788,"./zh-cn/apis/Enumerable.setters/properties/value.json":66825,"./zh-cn/apis/Enumerable/meta.json":64360,"./zh-cn/apis/Enumerable/methods/asEnumerable.json":39426,"./zh-cn/apis/Enumerable/methods/between.json":13862,"./zh-cn/apis/Enumerable/methods/empty.json":6655,"./zh-cn/apis/Enumerable/methods/from.json":73640,"./zh-cn/apis/Enumerable/methods/generate.json":14890,"./zh-cn/apis/Enumerable/methods/noConflict.json":15057,"./zh-cn/apis/Enumerable/methods/range.json":97280,"./zh-cn/apis/Enumerable/methods/repeat.json":25717,"./zh-cn/apis/Enumerable/properties/actions.json":8158,"./zh-cn/apis/Enumerable/properties/comparers.json":6733,"./zh-cn/apis/Enumerable/properties/config.json":27610,"./zh-cn/apis/Enumerable/properties/predicates.json":14395,"./zh-cn/apis/Enumerable/properties/selectors.json":88818,"./zh-cn/apis/Enumerable/properties/version.json":69983,"./zh-cn/apis/IChunk.json":18128,"./zh-cn/apis/IChunk/meta.json":62666,"./zh-cn/apis/IChunk/properties/index.json":12962,"./zh-cn/apis/ICombine.json":38967,"./zh-cn/apis/ICombine/meta.json":86083,"./zh-cn/apis/ICombine/properties/key.json":6233,"./zh-cn/apis/ICombine/properties/parent.json":17727,"./zh-cn/apis/IEnumerable.json":24442,"./zh-cn/apis/IEnumerable/meta.json":18209,"./zh-cn/apis/IEnumerable/methods/aggregate.json":81279,"./zh-cn/apis/IEnumerable/methods/all.json":11430,"./zh-cn/apis/IEnumerable/methods/any.json":34758,"./zh-cn/apis/IEnumerable/methods/asEnumerable.json":65683,"./zh-cn/apis/IEnumerable/methods/average.json":93726,"./zh-cn/apis/IEnumerable/methods/chunk.json":23564,"./zh-cn/apis/IEnumerable/methods/combination.json":40374,"./zh-cn/apis/IEnumerable/methods/combine.json":32983,"./zh-cn/apis/IEnumerable/methods/concat.json":74334,"./zh-cn/apis/IEnumerable/methods/conflict.json":15603,"./zh-cn/apis/IEnumerable/methods/contains.json":94759,"./zh-cn/apis/IEnumerable/methods/copyWithin.json":69347,"./zh-cn/apis/IEnumerable/methods/count.json":99296,"./zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json":7397,"./zh-cn/apis/IEnumerable/methods/distinct.json":46325,"./zh-cn/apis/IEnumerable/methods/each.json":59909,"./zh-cn/apis/IEnumerable/methods/elementAt.json":38002,"./zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json":60353,"./zh-cn/apis/IEnumerable/methods/every.json":73737,"./zh-cn/apis/IEnumerable/methods/except.json":58395,"./zh-cn/apis/IEnumerable/methods/fill.json":54864,"./zh-cn/apis/IEnumerable/methods/filter.json":24975,"./zh-cn/apis/IEnumerable/methods/find.json":4933,"./zh-cn/apis/IEnumerable/methods/findIndex.json":15892,"./zh-cn/apis/IEnumerable/methods/findLast.json":27713,"./zh-cn/apis/IEnumerable/methods/findLastIndex.json":82633,"./zh-cn/apis/IEnumerable/methods/first.json":25444,"./zh-cn/apis/IEnumerable/methods/firstOrDefault.json":1033,"./zh-cn/apis/IEnumerable/methods/forEach.json":27643,"./zh-cn/apis/IEnumerable/methods/getEnumerator.json":23079,"./zh-cn/apis/IEnumerable/methods/groupBy.json":49535,"./zh-cn/apis/IEnumerable/methods/groupJoin.json":85333,"./zh-cn/apis/IEnumerable/methods/includes.json":38573,"./zh-cn/apis/IEnumerable/methods/indexOf.json":72822,"./zh-cn/apis/IEnumerable/methods/indices.json":4631,"./zh-cn/apis/IEnumerable/methods/innerJoin.json":79824,"./zh-cn/apis/IEnumerable/methods/intersect.json":10473,"./zh-cn/apis/IEnumerable/methods/isSub.json":42855,"./zh-cn/apis/IEnumerable/methods/isSuper.json":55083,"./zh-cn/apis/IEnumerable/methods/join.json":59298,"./zh-cn/apis/IEnumerable/methods/last.json":74062,"./zh-cn/apis/IEnumerable/methods/lastIndexOf.json":53131,"./zh-cn/apis/IEnumerable/methods/lastOrDefault.json":45601,"./zh-cn/apis/IEnumerable/methods/leftJoin.json":27751,"./zh-cn/apis/IEnumerable/methods/leftPad.json":81339,"./zh-cn/apis/IEnumerable/methods/map.json":28387,"./zh-cn/apis/IEnumerable/methods/max.json":94839,"./zh-cn/apis/IEnumerable/methods/maxIndex.json":62914,"./zh-cn/apis/IEnumerable/methods/maxOrDefault.json":55248,"./zh-cn/apis/IEnumerable/methods/min.json":80605,"./zh-cn/apis/IEnumerable/methods/minIndex.json":59877,"./zh-cn/apis/IEnumerable/methods/minOrDefault.json":6152,"./zh-cn/apis/IEnumerable/methods/nearBy.json":14391,"./zh-cn/apis/IEnumerable/methods/nearSplit.json":4522,"./zh-cn/apis/IEnumerable/methods/ofType.json":80416,"./zh-cn/apis/IEnumerable/methods/orderBy.json":4239,"./zh-cn/apis/IEnumerable/methods/orderByDescending.json":70702,"./zh-cn/apis/IEnumerable/methods/permutation.json":67639,"./zh-cn/apis/IEnumerable/methods/pop.json":16031,"./zh-cn/apis/IEnumerable/methods/product.json":93077,"./zh-cn/apis/IEnumerable/methods/proportion.json":14246,"./zh-cn/apis/IEnumerable/methods/push.json":92871,"./zh-cn/apis/IEnumerable/methods/rand.json":97721,"./zh-cn/apis/IEnumerable/methods/random.json":69158,"./zh-cn/apis/IEnumerable/methods/randomIndexProbability.json":60893,"./zh-cn/apis/IEnumerable/methods/randomOrDefault.json":98033,"./zh-cn/apis/IEnumerable/methods/randomProbability.json":13628,"./zh-cn/apis/IEnumerable/methods/randomProbabilityOrDefault.json":96589,"./zh-cn/apis/IEnumerable/methods/reduce.json":29329,"./zh-cn/apis/IEnumerable/methods/reduceRight.json":12032,"./zh-cn/apis/IEnumerable/methods/reverse.json":69767,"./zh-cn/apis/IEnumerable/methods/rightJoin.json":84916,"./zh-cn/apis/IEnumerable/methods/rightPad.json":96529,"./zh-cn/apis/IEnumerable/methods/select.json":70663,"./zh-cn/apis/IEnumerable/methods/selectMany.json":97836,"./zh-cn/apis/IEnumerable/methods/separate.json":65842,"./zh-cn/apis/IEnumerable/methods/sequenceEqual.json":76959,"./zh-cn/apis/IEnumerable/methods/shift.json":18396,"./zh-cn/apis/IEnumerable/methods/single.json":91804,"./zh-cn/apis/IEnumerable/methods/singleOrDefault.json":85115,"./zh-cn/apis/IEnumerable/methods/skip.json":59559,"./zh-cn/apis/IEnumerable/methods/skipProportion.json":56380,"./zh-cn/apis/IEnumerable/methods/skipSame.json":89728,"./zh-cn/apis/IEnumerable/methods/skipWhile.json":39847,"./zh-cn/apis/IEnumerable/methods/slice.json":77504,"./zh-cn/apis/IEnumerable/methods/some.json":14133,"./zh-cn/apis/IEnumerable/methods/sort.json":6289,"./zh-cn/apis/IEnumerable/methods/splice.json":25502,"./zh-cn/apis/IEnumerable/methods/split.json":63423,"./zh-cn/apis/IEnumerable/methods/sum.json":73792,"./zh-cn/apis/IEnumerable/methods/symmetric.json":31668,"./zh-cn/apis/IEnumerable/methods/take.json":16362,"./zh-cn/apis/IEnumerable/methods/takeProportion.json":46982,"./zh-cn/apis/IEnumerable/methods/takeSame.json":41924,"./zh-cn/apis/IEnumerable/methods/takeWhile.json":30705,"./zh-cn/apis/IEnumerable/methods/toArray.json":47454,"./zh-cn/apis/IEnumerable/methods/toDirectory.json":71695,"./zh-cn/apis/IEnumerable/methods/toInOrder.json":26712,"./zh-cn/apis/IEnumerable/methods/toLookup.json":52174,"./zh-cn/apis/IEnumerable/methods/toObject.json":3174,"./zh-cn/apis/IEnumerable/methods/toPostOrder.json":72579,"./zh-cn/apis/IEnumerable/methods/toPreOrder.json":87125,"./zh-cn/apis/IEnumerable/methods/union.json":45263,"./zh-cn/apis/IEnumerable/methods/unshift.json":55488,"./zh-cn/apis/IEnumerable/methods/where.json":94640,"./zh-cn/apis/IEnumerable/methods/wipe.json":49360,"./zh-cn/apis/IEnumerable/methods/zip.json":52236,"./zh-cn/apis/IEnumerable/properties/length.json":69992,"./zh-cn/apis/IEnumerable/properties/size.json":24472,"./zh-cn/apis/IEnumerator.json":83158,"./zh-cn/apis/IEnumerator/meta.json":28547,"./zh-cn/apis/IEnumerator/methods/moveNext.json":80470,"./zh-cn/apis/IEnumerator/methods/reset.json":22444,"./zh-cn/apis/IEnumerator/properties/current.json":53760,"./zh-cn/apis/IGrouping.json":59381,"./zh-cn/apis/IGrouping/meta.json":58123,"./zh-cn/apis/IGrouping/properties/key.json":43061,"./zh-cn/apis/IMapEnumerable.json":34697,"./zh-cn/apis/IMapEnumerable/meta.json":87008,"./zh-cn/apis/IMapEnumerable/methods/forEach.json":18274,"./zh-cn/apis/IMapEnumerable/methods/toDirectory.json":61530,"./zh-cn/apis/IMapEnumerable/methods/toLookup.json":64910,"./zh-cn/apis/IOrderedEnumerable.json":86019,"./zh-cn/apis/IOrderedEnumerable/meta.json":59757,"./zh-cn/apis/IOrderedEnumerable/methods/thenBy.json":60427,"./zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json":58045,"./zh-cn/apis/ITree.json":29707,"./zh-cn/apis/ITree/meta.json":11531,"./zh-cn/apis/ITree/methods/asBinary.json":74827,"./zh-cn/apis/ITree/methods/breadthSearch.json":115,"./zh-cn/apis/ITree/methods/breadthSubTree.json":61079,"./zh-cn/apis/ITree/methods/breadthTraverse.json":35817,"./zh-cn/apis/ITree/methods/degree.json":52934,"./zh-cn/apis/ITree/methods/depth.json":95229,"./zh-cn/apis/ITree/methods/depthSearch.json":288,"./zh-cn/apis/ITree/methods/depthSubTree.json":1242,"./zh-cn/apis/ITree/methods/depthTraverse.json":95934,"./zh-cn/apis/ITree/methods/getChild.json":4064,"./zh-cn/apis/ITree/methods/getParent.json":70074,"./zh-cn/apis/ITree/methods/getParentNode.json":92678,"./zh-cn/apis/ITree/methods/getValue.json":34960,"./zh-cn/apis/ITree/methods/isAncestorOf.json":76906,"./zh-cn/apis/ITree/methods/isBinary.json":66225,"./zh-cn/apis/ITree/methods/isChildOf.json":23725,"./zh-cn/apis/ITree/methods/isCompleteBinary.json":36598,"./zh-cn/apis/ITree/methods/isDescendantOf.json":7661,"./zh-cn/apis/ITree/methods/isFullBinary.json":52625,"./zh-cn/apis/ITree/methods/isParentOf.json":48515,"./zh-cn/apis/ITree/methods/isPerfectBinary.json":79832,"./zh-cn/apis/ITree/methods/lowestAncestor.json":83430,"./zh-cn/apis/ITree/methods/next.json":4873,"./zh-cn/apis/ITree/methods/nextAll.json":37070,"./zh-cn/apis/ITree/methods/nextAllNodes.json":16046,"./zh-cn/apis/ITree/methods/nextNode.json":95007,"./zh-cn/apis/ITree/methods/path.json":14018,"./zh-cn/apis/ITree/methods/pathNodes.json":58573,"./zh-cn/apis/ITree/methods/pathNodesTo.json":23033,"./zh-cn/apis/ITree/methods/pathTo.json":68265,"./zh-cn/apis/ITree/methods/prev.json":71578,"./zh-cn/apis/ITree/methods/prevAll.json":54337,"./zh-cn/apis/ITree/methods/prevAllNodes.json":31161,"./zh-cn/apis/ITree/methods/prevNode.json":4133,"./zh-cn/apis/ITree/methods/siblingNodes.json":74710,"./zh-cn/apis/ITree/methods/siblings.json":84843,"./zh-cn/apis/ITree/methods/toValue.json":50106,"./zh-cn/apis/ITree/properties/children.json":64946,"./zh-cn/apis/ITree/properties/value.json":65320,"./zh-cn/apis/ITree/properties/values.json":7699,"./zh-cn/apis/Lookup.json":56179,"./zh-cn/apis/Lookup/meta.json":46890,"./zh-cn/apis/Lookup/methods/get.json":87678,"./zh-cn/apis/Lookup/methods/set.json":14087,"./zh-cn/apis/Plugin.json":440,"./zh-cn/apis/Plugin/meta.json":63770,"./zh-cn/caption.json":6634,"./zh-cn/change.json":33238,"./zh-cn/change/2.1.15.json":55449,"./zh-cn/change/2.1.16.json":36485,"./zh-cn/change/2.1.17.json":52523,"./zh-cn/change/2.1.18.json":72063,"./zh-cn/change/2.1.19.json":79342,"./zh-cn/change/2.1.20.json":68785,"./zh-cn/change/2.1.21.json":54804,"./zh-cn/change/2.1.22.json":6140,"./zh-cn/change/2.1.23.json":66208,"./zh-cn/change/2.1.24.json":34056,"./zh-cn/change/2.2.0.json":33576,"./zh-cn/change/2.2.1.pre.json":40921,"./zh-cn/directory.json":76377,"./zh-cn/directory.meta.json":43925,"./zh-cn/examples/IEnumerable.json":57218,"./zh-cn/examples/IEnumerable/methods/aggregate.json":4635,"./zh-cn/examples/IEnumerable/methods/all.json":30434,"./zh-cn/examples/IEnumerable/methods/any.json":91600,"./zh-cn/examples/IEnumerable/methods/asEnumerable.json":14429,"./zh-cn/examples/IEnumerable/methods/average.json":14653,"./zh-cn/examples/IEnumerable/methods/chunk.json":12202,"./zh-cn/examples/IEnumerable/methods/combination.json":16447,"./zh-cn/examples/IEnumerable/methods/combine.json":98224,"./zh-cn/examples/IEnumerable/methods/concat.json":36128,"./zh-cn/examples/IEnumerable/methods/contains.json":72641,"./zh-cn/examples/IEnumerable/methods/copyWithin.json":37907,"./zh-cn/examples/IEnumerable/methods/count.json":79826,"./zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json":76124,"./zh-cn/examples/IEnumerable/methods/distinct.json":83423,"./zh-cn/examples/IEnumerable/methods/elementAt.json":75468,"./zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json":73567,"./zh-cn/examples/IEnumerable/methods/every.json":14436,"./zh-cn/examples/IEnumerable/methods/except.json":83764,"./zh-cn/examples/IEnumerable/methods/fill.json":92111,"./zh-cn/examples/IEnumerable/methods/filter.json":501,"./zh-cn/examples/IEnumerable/methods/find.json":6582,"./zh-cn/examples/IEnumerable/methods/findIndex.json":7314,"./zh-cn/examples/IEnumerable/methods/findLast.json":62238,"./zh-cn/examples/IEnumerable/methods/findLastIndex.json":97738,"./zh-cn/examples/IEnumerable/methods/first.json":66021,"./zh-cn/examples/IEnumerable/methods/firstOrDefault.json":9519,"./zh-cn/examples/IEnumerable/methods/forEach.json":64594,"./zh-cn/examples/IEnumerable/methods/getEnumerator.json":85762,"./zh-cn/examples/IEnumerable/methods/groupBy.json":86929,"./zh-cn/examples/IEnumerable/methods/groupJoin.json":1460,"./zh-cn/examples/IEnumerable/methods/includes.json":35503,"./zh-cn/examples/IEnumerable/methods/indexOf.json":78936,"./zh-cn/examples/IEnumerable/methods/intersect.json":51514,"./zh-cn/examples/IEnumerable/methods/join.json":99811,"./zh-cn/examples/IEnumerable/methods/last.json":15653,"./zh-cn/examples/IEnumerable/methods/lastIndexOf.json":44635,"./zh-cn/examples/IEnumerable/methods/lastOrDefault.json":21475,"./zh-cn/examples/IEnumerable/methods/map.json":62736,"./zh-cn/examples/IEnumerable/methods/max.json":6984,"./zh-cn/examples/IEnumerable/methods/min.json":4487,"./zh-cn/examples/IEnumerable/methods/ofType.json":60548,"./zh-cn/examples/IEnumerable/methods/orderBy.json":81440,"./zh-cn/examples/IEnumerable/methods/orderByDescending.json":10007,"./zh-cn/examples/IEnumerable/methods/permutation.json":62754,"./zh-cn/examples/IEnumerable/methods/pop.json":15590,"./zh-cn/examples/IEnumerable/methods/product.json":20684,"./zh-cn/examples/IEnumerable/methods/proportion.json":48631,"./zh-cn/examples/IEnumerable/methods/push.json":10369,"./zh-cn/examples/IEnumerable/methods/rand.json":15281,"./zh-cn/examples/IEnumerable/methods/reduce.json":90697,"./zh-cn/examples/IEnumerable/methods/reduceRight.json":67272,"./zh-cn/examples/IEnumerable/methods/reserver.json":20591,"./zh-cn/examples/IEnumerable/methods/reverse.json":272,"./zh-cn/examples/IEnumerable/methods/rightJoin.json":3330,"./zh-cn/examples/IEnumerable/methods/rightPad.json":29480,"./zh-cn/examples/IEnumerable/methods/select.json":42642,"./zh-cn/examples/IEnumerable/methods/selectMany.json":37606,"./zh-cn/examples/IEnumerable/methods/separate.json":53069,"./zh-cn/examples/IEnumerable/methods/sequenceEqual.json":49880,"./zh-cn/examples/IEnumerable/methods/shift.json":71826,"./zh-cn/examples/IEnumerable/methods/single.json":12712,"./zh-cn/examples/IEnumerable/methods/singleOrDefault.json":46565,"./zh-cn/examples/IEnumerable/methods/skip.json":26082,"./zh-cn/examples/IEnumerable/methods/skipProportion.json":32476,"./zh-cn/examples/IEnumerable/methods/skipWhile.json":33217,"./zh-cn/examples/IEnumerable/methods/slice.json":44291,"./zh-cn/examples/IEnumerable/methods/some.json":46491,"./zh-cn/examples/IEnumerable/methods/sort.json":2542,"./zh-cn/examples/IEnumerable/methods/splice.json":12213,"./zh-cn/examples/IEnumerable/methods/sum.json":41997,"./zh-cn/examples/IEnumerable/methods/take.json":28338,"./zh-cn/examples/IEnumerable/methods/takeProportion.json":51575,"./zh-cn/examples/IEnumerable/methods/takeWhile.json":9627,"./zh-cn/examples/IEnumerable/methods/toArray.json":4424,"./zh-cn/examples/IEnumerable/methods/toDirectory.json":6267,"./zh-cn/examples/IEnumerable/methods/toLookup.json":94895,"./zh-cn/examples/IEnumerable/methods/toObject.json":22803,"./zh-cn/examples/IEnumerable/methods/union.json":14298,"./zh-cn/examples/IEnumerable/methods/unshift.json":36117,"./zh-cn/examples/IEnumerable/methods/where.json":41283,"./zh-cn/examples/IEnumerable/methods/wipe.json":72311,"./zh-cn/examples/IEnumerable/methods/zip.json":21354,"./zh-cn/examples/ITree.json":21683,"./zh-cn/examples/ITree/methods/asBinary.json":29234,"./zh-cn/examples/ITree/methods/breadthSearch.json":41411,"./zh-cn/examples/ITree/methods/breadthSubTree.json":89792,"./zh-cn/examples/ITree/methods/breadthSubTrees.json":3837,"./zh-cn/examples/ITree/methods/breadthTraverse.json":27958,"./zh-cn/examples/ITree/methods/degree.json":35675,"./zh-cn/examples/ITree/methods/depth.json":99065,"./zh-cn/examples/ITree/methods/depthSearch.json":48344,"./zh-cn/examples/ITree/methods/depthSubTree.json":92706,"./zh-cn/examples/ITree/methods/depthTraverse.json":95946,"./zh-cn/examples/ITree/methods/getChild.json":28312,"./zh-cn/examples/ITree/methods/getParent.json":44409,"./zh-cn/examples/ITree/methods/getValue.json":57112,"./zh-cn/examples/ITree/methods/isAncestorOf.json":88191,"./zh-cn/examples/ITree/methods/isBinary.json":59170,"./zh-cn/examples/ITree/methods/isChildOf.json":10283,"./zh-cn/examples/ITree/methods/isCompleteBinary.json":93029,"./zh-cn/examples/ITree/methods/isDescendantOf.json":62423,"./zh-cn/examples/ITree/methods/isFullBinary.json":46064,"./zh-cn/examples/ITree/methods/isParentOf.json":15509,"./zh-cn/examples/ITree/methods/isPerfectBinary.json":20357,"./zh-cn/examples/ITree/methods/isPrefectBinary.json":14678,"./zh-cn/examples/ITree/methods/lowestAncestor.json":55655,"./zh-cn/examples/ITree/methods/next.json":30806,"./zh-cn/examples/ITree/methods/nextAll.json":84851,"./zh-cn/examples/ITree/methods/path.json":70156,"./zh-cn/examples/ITree/methods/pathTo.json":30858,"./zh-cn/examples/ITree/methods/permutation.json":64047,"./zh-cn/examples/ITree/methods/prev.json":44430,"./zh-cn/examples/ITree/methods/prevAll.json":20089,"./zh-cn/examples/ITree/methods/siblings.json":26047,"./zh-cn/examples/config.json":74893,"./zh-cn/examples/instance.json":51789,"./zh-cn/examples/selector.json":84290,"./zh-cn/examples/setter.json":92203,"./zh-cn/examples/use.json":1218,"./zh-cn/guides/action.json":24467,"./zh-cn/guides/comparer.json":68689,"./zh-cn/guides/config.json":48973,"./zh-cn/guides/enumerator.json":9608,"./zh-cn/guides/extend.json":98262,"./zh-cn/guides/instance.json":54865,"./zh-cn/guides/iterator.json":19170,"./zh-cn/guides/plugin.json":35687,"./zh-cn/guides/predicate.json":10001,"./zh-cn/guides/selector.json":13234,"./zh-cn/guides/setter.json":37753,"./zh-cn/guides/use.json":59301,"./zh-cn/install.json":34738,"./zh-cn/introduction.json":41426,"./zh-cn/meta.json":73231};function t(e){var r=a(e);return n(r)}function a(e){if(!n.o(s,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return s[e]}t.keys=function(){return Object.keys(s)},t.resolve=a,e.exports=t,t.id=92226},61018:(e,r,n)=>{var s={"./resources/en-us/apis/Enumerable.json":76465,"./resources/en-us/apis/Enumerable/meta.json":12565,"./resources/en-us/apis/Enumerable/methods/asEnumerable.json":86290,"./resources/en-us/apis/Enumerable/methods/empty.json":26149,"./resources/en-us/apis/Enumerable/properties/actions.json":77003,"./resources/en-us/apis/Enumerable/properties/comparers.json":16659,"./resources/en-us/apis/Enumerable/properties/config.json":61117,"./resources/en-us/apis/Enumerable/properties/predicates.json":12527,"./resources/en-us/apis/Enumerable/properties/selectors.json":91509,"./resources/en-us/caption.json":7221,"./resources/en-us/change.json":5900,"./resources/en-us/directory.json":19749,"./resources/en-us/directory.meta.json":21167,"./resources/en-us/examples/IEnumerable.json":55166,"./resources/en-us/examples/IEnumerable/methods/aggregate.json":13273,"./resources/en-us/examples/IEnumerable/methods/all.json":31386,"./resources/en-us/examples/IEnumerable/methods/any.json":33564,"./resources/en-us/examples/IEnumerable/methods/average.json":68414,"./resources/en-us/examples/IEnumerable/methods/concat.json":92595,"./resources/en-us/examples/IEnumerable/methods/contains.json":50318,"./resources/en-us/examples/IEnumerable/methods/count.json":22909,"./resources/en-us/examples/IEnumerable/methods/defaultIfEmpty.json":91412,"./resources/en-us/examples/IEnumerable/methods/distinct.json":50930,"./resources/en-us/examples/IEnumerable/methods/elementAt.json":11190,"./resources/en-us/examples/IEnumerable/methods/elementAtOrDefault.json":56138,"./resources/en-us/examples/IEnumerable/methods/except.json":20369,"./resources/en-us/examples/IEnumerable/methods/first.json":46332,"./resources/en-us/examples/IEnumerable/methods/firstOrDefault.json":24160,"./resources/en-us/examples/IEnumerable/methods/groupBy.json":25024,"./resources/en-us/examples/IEnumerable/methods/groupJoin.json":55556,"./resources/en-us/examples/IEnumerable/methods/intersect.json":31683,"./resources/en-us/examples/IEnumerable/methods/join.json":63867,"./resources/en-us/examples/IEnumerable/methods/max.json":27065,"./resources/en-us/examples/IEnumerable/methods/min.json":81622,"./resources/en-us/examples/IEnumerable/methods/ofType.json":45849,"./resources/en-us/examples/IEnumerable/methods/orderBy.json":93101,"./resources/en-us/examples/IEnumerable/methods/orderByDescending.json":80098,"./resources/en-us/examples/IEnumerable/methods/select.json":46805,"./resources/en-us/examples/IEnumerable/methods/selectMany.json":16536,"./resources/en-us/examples/IEnumerable/methods/sequenceEqual.json":42569,"./resources/en-us/examples/IEnumerable/methods/single.json":3087,"./resources/en-us/examples/IEnumerable/methods/singleOrDefault.json":9249,"./resources/en-us/examples/IEnumerable/methods/skip.json":3961,"./resources/en-us/examples/IEnumerable/methods/skipWhile.json":28613,"./resources/en-us/examples/IEnumerable/methods/sum.json":78846,"./resources/en-us/examples/IEnumerable/methods/take.json":84570,"./resources/en-us/examples/IEnumerable/methods/takeWhile.json":55190,"./resources/en-us/examples/IEnumerable/methods/union.json":87941,"./resources/en-us/examples/IEnumerable/methods/where.json":47067,"./resources/en-us/examples/IEnumerable/methods/zip.json":33808,"./resources/en-us/examples/config.json":14285,"./resources/en-us/examples/instance.json":80846,"./resources/en-us/examples/selector.json":67632,"./resources/en-us/examples/use.json":79741,"./resources/en-us/guides/action.json":80925,"./resources/en-us/guides/comparer.json":26854,"./resources/en-us/guides/config.json":38471,"./resources/en-us/guides/instance.json":53226,"./resources/en-us/guides/predicate.json":32948,"./resources/en-us/guides/selector.json":33193,"./resources/en-us/guides/use.json":63996,"./resources/en-us/install.json":31836,"./resources/en-us/introduction.json":27775,"./resources/en-us/meta.json":81326,"./resources/lang.json":55259,"./resources/versions.json":84004,"./resources/zh-cn/about.json":60240,"./resources/zh-cn/apis/BinaryTree.json":51769,"./resources/zh-cn/apis/BinaryTree/meta.json":33798,"./resources/zh-cn/apis/BinaryTree/methods/hasLeft.json":48880,"./resources/zh-cn/apis/BinaryTree/methods/hasRight.json":75815,"./resources/zh-cn/apis/BinaryTree/methods/inOrder.json":53707,"./resources/zh-cn/apis/BinaryTree/methods/postOrder.json":75921,"./resources/zh-cn/apis/BinaryTree/methods/preOrder.json":4383,"./resources/zh-cn/apis/BinaryTree/properties/left.json":45783,"./resources/zh-cn/apis/BinaryTree/properties/right.json":71485,"./resources/zh-cn/apis/Directory.json":66903,"./resources/zh-cn/apis/Directory/meta.json":77924,"./resources/zh-cn/apis/Directory/methods/delete.json":72468,"./resources/zh-cn/apis/Directory/methods/get.json":13402,"./resources/zh-cn/apis/Directory/methods/has.json":24291,"./resources/zh-cn/apis/Directory/methods/set.json":64918,"./resources/zh-cn/apis/Entry.json":26781,"./resources/zh-cn/apis/Entry/meta.json":22950,"./resources/zh-cn/apis/Entry/properties/key.json":59720,"./resources/zh-cn/apis/Entry/properties/value.json":15686,"./resources/zh-cn/apis/Enumerable.actions.json":49751,"./resources/zh-cn/apis/Enumerable.actions/meta.json":29744,"./resources/zh-cn/apis/Enumerable.actions/properties/default.json":46353,"./resources/zh-cn/apis/Enumerable.comparers.json":24750,"./resources/zh-cn/apis/Enumerable.comparers/meta.json":17215,"./resources/zh-cn/apis/Enumerable.comparers/methods/array.json":40202,"./resources/zh-cn/apis/Enumerable.comparers/methods/greater.json":3832,"./resources/zh-cn/apis/Enumerable.comparers/methods/ignoreCase.json":21295,"./resources/zh-cn/apis/Enumerable.comparers/methods/less.json":17154,"./resources/zh-cn/apis/Enumerable.comparers/methods/predicate.json":74913,"./resources/zh-cn/apis/Enumerable.comparers/properties/default.json":87645,"./resources/zh-cn/apis/Enumerable.comparers/properties/equality.json":63091,"./resources/zh-cn/apis/Enumerable.comparers/properties/same.json":46162,"./resources/zh-cn/apis/Enumerable.comparers/properties/strict.json":58251,"./resources/zh-cn/apis/Enumerable.config.json":37557,"./resources/zh-cn/apis/Enumerable.config/meta.json":43735,"./resources/zh-cn/apis/Enumerable.config/properties/as.json":47853,"./resources/zh-cn/apis/Enumerable.config/properties/extends.array.json":52494,"./resources/zh-cn/apis/Enumerable.config/properties/extends.lazy.json":14063,"./resources/zh-cn/apis/Enumerable.config/properties/extends.object.json":29606,"./resources/zh-cn/apis/Enumerable.config/properties/extends.string.json":43148,"./resources/zh-cn/apis/Enumerable.json":82001,"./resources/zh-cn/apis/Enumerable.predicates.json":6493,"./resources/zh-cn/apis/Enumerable.predicates/meta.json":69724,"./resources/zh-cn/apis/Enumerable.predicates/methods/equality.json":71910,"./resources/zh-cn/apis/Enumerable.predicates/methods/not.json":57546,"./resources/zh-cn/apis/Enumerable.predicates/methods/properties.json":31681,"./resources/zh-cn/apis/Enumerable.predicates/methods/regexp.json":52161,"./resources/zh-cn/apis/Enumerable.predicates/methods/same.json":55570,"./resources/zh-cn/apis/Enumerable.predicates/methods/selector.json":29670,"./resources/zh-cn/apis/Enumerable.predicates/methods/strict.json":56180,"./resources/zh-cn/apis/Enumerable.predicates/properties/default.json":50988,"./resources/zh-cn/apis/Enumerable.predicates/properties/exists.json":31068,"./resources/zh-cn/apis/Enumerable.selectors.json":67882,"./resources/zh-cn/apis/Enumerable.selectors/meta.json":66194,"./resources/zh-cn/apis/Enumerable.selectors/methods/property.json":22350,"./resources/zh-cn/apis/Enumerable.selectors/properties/children.json":61979,"./resources/zh-cn/apis/Enumerable.selectors/properties/default.json":23444,"./resources/zh-cn/apis/Enumerable.selectors/properties/join.json":35495,"./resources/zh-cn/apis/Enumerable.selectors/properties/key.json":75347,"./resources/zh-cn/apis/Enumerable.selectors/properties/parent.json":65121,"./resources/zh-cn/apis/Enumerable.selectors/properties/result.json":15910,"./resources/zh-cn/apis/Enumerable.selectors/properties/value.json":31085,"./resources/zh-cn/apis/Enumerable.setters.json":47357,"./resources/zh-cn/apis/Enumerable.setters/meta.json":51226,"./resources/zh-cn/apis/Enumerable.setters/methods/property.json":74867,"./resources/zh-cn/apis/Enumerable.setters/properties/children.json":788,"./resources/zh-cn/apis/Enumerable.setters/properties/value.json":66825,"./resources/zh-cn/apis/Enumerable/meta.json":64360,"./resources/zh-cn/apis/Enumerable/methods/asEnumerable.json":39426,"./resources/zh-cn/apis/Enumerable/methods/between.json":13862,"./resources/zh-cn/apis/Enumerable/methods/empty.json":6655,"./resources/zh-cn/apis/Enumerable/methods/from.json":73640,"./resources/zh-cn/apis/Enumerable/methods/generate.json":14890,"./resources/zh-cn/apis/Enumerable/methods/noConflict.json":15057,"./resources/zh-cn/apis/Enumerable/methods/range.json":97280,"./resources/zh-cn/apis/Enumerable/methods/repeat.json":25717,"./resources/zh-cn/apis/Enumerable/properties/actions.json":8158,"./resources/zh-cn/apis/Enumerable/properties/comparers.json":6733,"./resources/zh-cn/apis/Enumerable/properties/config.json":27610,"./resources/zh-cn/apis/Enumerable/properties/predicates.json":14395,"./resources/zh-cn/apis/Enumerable/properties/selectors.json":88818,"./resources/zh-cn/apis/Enumerable/properties/version.json":69983,"./resources/zh-cn/apis/IChunk.json":18128,"./resources/zh-cn/apis/IChunk/meta.json":62666,"./resources/zh-cn/apis/IChunk/properties/index.json":12962,"./resources/zh-cn/apis/ICombine.json":38967,"./resources/zh-cn/apis/ICombine/meta.json":86083,"./resources/zh-cn/apis/ICombine/properties/key.json":6233,"./resources/zh-cn/apis/ICombine/properties/parent.json":17727,"./resources/zh-cn/apis/IEnumerable.json":24442,"./resources/zh-cn/apis/IEnumerable/meta.json":18209,"./resources/zh-cn/apis/IEnumerable/methods/aggregate.json":81279,"./resources/zh-cn/apis/IEnumerable/methods/all.json":11430,"./resources/zh-cn/apis/IEnumerable/methods/any.json":34758,"./resources/zh-cn/apis/IEnumerable/methods/asEnumerable.json":65683,"./resources/zh-cn/apis/IEnumerable/methods/average.json":93726,"./resources/zh-cn/apis/IEnumerable/methods/chunk.json":23564,"./resources/zh-cn/apis/IEnumerable/methods/combination.json":40374,"./resources/zh-cn/apis/IEnumerable/methods/combine.json":32983,"./resources/zh-cn/apis/IEnumerable/methods/concat.json":74334,"./resources/zh-cn/apis/IEnumerable/methods/conflict.json":15603,"./resources/zh-cn/apis/IEnumerable/methods/contains.json":94759,"./resources/zh-cn/apis/IEnumerable/methods/copyWithin.json":69347,"./resources/zh-cn/apis/IEnumerable/methods/count.json":99296,"./resources/zh-cn/apis/IEnumerable/methods/defaultIfEmpty.json":7397,"./resources/zh-cn/apis/IEnumerable/methods/distinct.json":46325,"./resources/zh-cn/apis/IEnumerable/methods/each.json":59909,"./resources/zh-cn/apis/IEnumerable/methods/elementAt.json":38002,"./resources/zh-cn/apis/IEnumerable/methods/elementAtOrDefault.json":60353,"./resources/zh-cn/apis/IEnumerable/methods/every.json":73737,"./resources/zh-cn/apis/IEnumerable/methods/except.json":58395,"./resources/zh-cn/apis/IEnumerable/methods/fill.json":54864,"./resources/zh-cn/apis/IEnumerable/methods/filter.json":24975,"./resources/zh-cn/apis/IEnumerable/methods/find.json":4933,"./resources/zh-cn/apis/IEnumerable/methods/findIndex.json":15892,"./resources/zh-cn/apis/IEnumerable/methods/findLast.json":27713,"./resources/zh-cn/apis/IEnumerable/methods/findLastIndex.json":82633,"./resources/zh-cn/apis/IEnumerable/methods/first.json":25444,"./resources/zh-cn/apis/IEnumerable/methods/firstOrDefault.json":1033,"./resources/zh-cn/apis/IEnumerable/methods/forEach.json":27643,"./resources/zh-cn/apis/IEnumerable/methods/getEnumerator.json":23079,"./resources/zh-cn/apis/IEnumerable/methods/groupBy.json":49535,"./resources/zh-cn/apis/IEnumerable/methods/groupJoin.json":85333,"./resources/zh-cn/apis/IEnumerable/methods/includes.json":38573,"./resources/zh-cn/apis/IEnumerable/methods/indexOf.json":72822,"./resources/zh-cn/apis/IEnumerable/methods/indices.json":4631,"./resources/zh-cn/apis/IEnumerable/methods/innerJoin.json":79824,"./resources/zh-cn/apis/IEnumerable/methods/intersect.json":10473,"./resources/zh-cn/apis/IEnumerable/methods/isSub.json":42855,"./resources/zh-cn/apis/IEnumerable/methods/isSuper.json":55083,"./resources/zh-cn/apis/IEnumerable/methods/join.json":59298,"./resources/zh-cn/apis/IEnumerable/methods/last.json":74062,"./resources/zh-cn/apis/IEnumerable/methods/lastIndexOf.json":53131,"./resources/zh-cn/apis/IEnumerable/methods/lastOrDefault.json":45601,"./resources/zh-cn/apis/IEnumerable/methods/leftJoin.json":27751,"./resources/zh-cn/apis/IEnumerable/methods/leftPad.json":81339,"./resources/zh-cn/apis/IEnumerable/methods/map.json":28387,"./resources/zh-cn/apis/IEnumerable/methods/max.json":94839,"./resources/zh-cn/apis/IEnumerable/methods/maxIndex.json":62914,"./resources/zh-cn/apis/IEnumerable/methods/maxOrDefault.json":55248,"./resources/zh-cn/apis/IEnumerable/methods/min.json":80605,"./resources/zh-cn/apis/IEnumerable/methods/minIndex.json":59877,"./resources/zh-cn/apis/IEnumerable/methods/minOrDefault.json":6152,"./resources/zh-cn/apis/IEnumerable/methods/nearBy.json":14391,"./resources/zh-cn/apis/IEnumerable/methods/nearSplit.json":4522,"./resources/zh-cn/apis/IEnumerable/methods/ofType.json":80416,"./resources/zh-cn/apis/IEnumerable/methods/orderBy.json":4239,"./resources/zh-cn/apis/IEnumerable/methods/orderByDescending.json":70702,"./resources/zh-cn/apis/IEnumerable/methods/permutation.json":67639,"./resources/zh-cn/apis/IEnumerable/methods/pop.json":16031,"./resources/zh-cn/apis/IEnumerable/methods/product.json":93077,"./resources/zh-cn/apis/IEnumerable/methods/proportion.json":14246,"./resources/zh-cn/apis/IEnumerable/methods/push.json":92871,"./resources/zh-cn/apis/IEnumerable/methods/rand.json":97721,"./resources/zh-cn/apis/IEnumerable/methods/random.json":69158,"./resources/zh-cn/apis/IEnumerable/methods/randomIndexProbability.json":60893,"./resources/zh-cn/apis/IEnumerable/methods/randomOrDefault.json":98033,"./resources/zh-cn/apis/IEnumerable/methods/randomProbability.json":13628,"./resources/zh-cn/apis/IEnumerable/methods/randomProbabilityOrDefault.json":96589,"./resources/zh-cn/apis/IEnumerable/methods/reduce.json":29329,"./resources/zh-cn/apis/IEnumerable/methods/reduceRight.json":12032,"./resources/zh-cn/apis/IEnumerable/methods/reverse.json":69767,"./resources/zh-cn/apis/IEnumerable/methods/rightJoin.json":84916,"./resources/zh-cn/apis/IEnumerable/methods/rightPad.json":96529,"./resources/zh-cn/apis/IEnumerable/methods/select.json":70663,"./resources/zh-cn/apis/IEnumerable/methods/selectMany.json":97836,"./resources/zh-cn/apis/IEnumerable/methods/separate.json":65842,"./resources/zh-cn/apis/IEnumerable/methods/sequenceEqual.json":76959,"./resources/zh-cn/apis/IEnumerable/methods/shift.json":18396,"./resources/zh-cn/apis/IEnumerable/methods/single.json":91804,"./resources/zh-cn/apis/IEnumerable/methods/singleOrDefault.json":85115,"./resources/zh-cn/apis/IEnumerable/methods/skip.json":59559,"./resources/zh-cn/apis/IEnumerable/methods/skipProportion.json":56380,"./resources/zh-cn/apis/IEnumerable/methods/skipSame.json":89728,"./resources/zh-cn/apis/IEnumerable/methods/skipWhile.json":39847,"./resources/zh-cn/apis/IEnumerable/methods/slice.json":77504,"./resources/zh-cn/apis/IEnumerable/methods/some.json":14133,"./resources/zh-cn/apis/IEnumerable/methods/sort.json":6289,"./resources/zh-cn/apis/IEnumerable/methods/splice.json":25502,"./resources/zh-cn/apis/IEnumerable/methods/split.json":63423,"./resources/zh-cn/apis/IEnumerable/methods/sum.json":73792,"./resources/zh-cn/apis/IEnumerable/methods/symmetric.json":31668,"./resources/zh-cn/apis/IEnumerable/methods/take.json":16362,"./resources/zh-cn/apis/IEnumerable/methods/takeProportion.json":46982,"./resources/zh-cn/apis/IEnumerable/methods/takeSame.json":41924,"./resources/zh-cn/apis/IEnumerable/methods/takeWhile.json":30705,"./resources/zh-cn/apis/IEnumerable/methods/toArray.json":47454,"./resources/zh-cn/apis/IEnumerable/methods/toDirectory.json":71695,"./resources/zh-cn/apis/IEnumerable/methods/toInOrder.json":26712,"./resources/zh-cn/apis/IEnumerable/methods/toLookup.json":52174,"./resources/zh-cn/apis/IEnumerable/methods/toObject.json":3174,"./resources/zh-cn/apis/IEnumerable/methods/toPostOrder.json":72579,"./resources/zh-cn/apis/IEnumerable/methods/toPreOrder.json":87125,"./resources/zh-cn/apis/IEnumerable/methods/union.json":45263,"./resources/zh-cn/apis/IEnumerable/methods/unshift.json":55488,"./resources/zh-cn/apis/IEnumerable/methods/where.json":94640,"./resources/zh-cn/apis/IEnumerable/methods/wipe.json":49360,"./resources/zh-cn/apis/IEnumerable/methods/zip.json":52236,"./resources/zh-cn/apis/IEnumerable/properties/length.json":69992,"./resources/zh-cn/apis/IEnumerable/properties/size.json":24472,"./resources/zh-cn/apis/IEnumerator.json":83158,"./resources/zh-cn/apis/IEnumerator/meta.json":28547,"./resources/zh-cn/apis/IEnumerator/methods/moveNext.json":80470,"./resources/zh-cn/apis/IEnumerator/methods/reset.json":22444,"./resources/zh-cn/apis/IEnumerator/properties/current.json":53760,"./resources/zh-cn/apis/IGrouping.json":59381,"./resources/zh-cn/apis/IGrouping/meta.json":58123,"./resources/zh-cn/apis/IGrouping/properties/key.json":43061,"./resources/zh-cn/apis/IMapEnumerable.json":34697,"./resources/zh-cn/apis/IMapEnumerable/meta.json":87008,"./resources/zh-cn/apis/IMapEnumerable/methods/forEach.json":18274,"./resources/zh-cn/apis/IMapEnumerable/methods/toDirectory.json":61530,"./resources/zh-cn/apis/IMapEnumerable/methods/toLookup.json":64910,"./resources/zh-cn/apis/IOrderedEnumerable.json":86019,"./resources/zh-cn/apis/IOrderedEnumerable/meta.json":59757,"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenBy.json":60427,"./resources/zh-cn/apis/IOrderedEnumerable/methods/thenByDescending.json":58045,"./resources/zh-cn/apis/ITree.json":29707,"./resources/zh-cn/apis/ITree/meta.json":11531,"./resources/zh-cn/apis/ITree/methods/asBinary.json":74827,"./resources/zh-cn/apis/ITree/methods/breadthSearch.json":115,"./resources/zh-cn/apis/ITree/methods/breadthSubTree.json":61079,"./resources/zh-cn/apis/ITree/methods/breadthTraverse.json":35817,"./resources/zh-cn/apis/ITree/methods/degree.json":52934,"./resources/zh-cn/apis/ITree/methods/depth.json":95229,"./resources/zh-cn/apis/ITree/methods/depthSearch.json":288,"./resources/zh-cn/apis/ITree/methods/depthSubTree.json":1242,"./resources/zh-cn/apis/ITree/methods/depthTraverse.json":95934,"./resources/zh-cn/apis/ITree/methods/getChild.json":4064,"./resources/zh-cn/apis/ITree/methods/getParent.json":70074,"./resources/zh-cn/apis/ITree/methods/getParentNode.json":92678,"./resources/zh-cn/apis/ITree/methods/getValue.json":34960,"./resources/zh-cn/apis/ITree/methods/isAncestorOf.json":76906,"./resources/zh-cn/apis/ITree/methods/isBinary.json":66225,"./resources/zh-cn/apis/ITree/methods/isChildOf.json":23725,"./resources/zh-cn/apis/ITree/methods/isCompleteBinary.json":36598,"./resources/zh-cn/apis/ITree/methods/isDescendantOf.json":7661,"./resources/zh-cn/apis/ITree/methods/isFullBinary.json":52625,"./resources/zh-cn/apis/ITree/methods/isParentOf.json":48515,"./resources/zh-cn/apis/ITree/methods/isPerfectBinary.json":79832,"./resources/zh-cn/apis/ITree/methods/lowestAncestor.json":83430,"./resources/zh-cn/apis/ITree/methods/next.json":4873,"./resources/zh-cn/apis/ITree/methods/nextAll.json":37070,"./resources/zh-cn/apis/ITree/methods/nextAllNodes.json":16046,"./resources/zh-cn/apis/ITree/methods/nextNode.json":95007,"./resources/zh-cn/apis/ITree/methods/path.json":14018,"./resources/zh-cn/apis/ITree/methods/pathNodes.json":58573,"./resources/zh-cn/apis/ITree/methods/pathNodesTo.json":23033,"./resources/zh-cn/apis/ITree/methods/pathTo.json":68265,"./resources/zh-cn/apis/ITree/methods/prev.json":71578,"./resources/zh-cn/apis/ITree/methods/prevAll.json":54337,"./resources/zh-cn/apis/ITree/methods/prevAllNodes.json":31161,"./resources/zh-cn/apis/ITree/methods/prevNode.json":4133,"./resources/zh-cn/apis/ITree/methods/siblingNodes.json":74710,"./resources/zh-cn/apis/ITree/methods/siblings.json":84843,"./resources/zh-cn/apis/ITree/methods/toValue.json":50106,"./resources/zh-cn/apis/ITree/properties/children.json":64946,"./resources/zh-cn/apis/ITree/properties/value.json":65320,"./resources/zh-cn/apis/ITree/properties/values.json":7699,"./resources/zh-cn/apis/Lookup.json":56179,"./resources/zh-cn/apis/Lookup/meta.json":46890,"./resources/zh-cn/apis/Lookup/methods/get.json":87678,"./resources/zh-cn/apis/Lookup/methods/set.json":14087,"./resources/zh-cn/apis/Plugin.json":440,"./resources/zh-cn/apis/Plugin/meta.json":63770,"./resources/zh-cn/caption.json":6634,"./resources/zh-cn/change.json":33238,"./resources/zh-cn/change/2.1.15.json":55449,"./resources/zh-cn/change/2.1.16.json":36485,"./resources/zh-cn/change/2.1.17.json":52523,"./resources/zh-cn/change/2.1.18.json":72063,"./resources/zh-cn/change/2.1.19.json":79342,"./resources/zh-cn/change/2.1.20.json":68785,"./resources/zh-cn/change/2.1.21.json":54804,"./resources/zh-cn/change/2.1.22.json":6140,"./resources/zh-cn/change/2.1.23.json":66208,"./resources/zh-cn/change/2.1.24.json":34056,"./resources/zh-cn/change/2.2.0.json":33576,"./resources/zh-cn/change/2.2.1.pre.json":40921,"./resources/zh-cn/directory.json":76377,"./resources/zh-cn/directory.meta.json":43925,"./resources/zh-cn/examples/IEnumerable.json":57218,"./resources/zh-cn/examples/IEnumerable/methods/aggregate.json":4635,"./resources/zh-cn/examples/IEnumerable/methods/all.json":30434,"./resources/zh-cn/examples/IEnumerable/methods/any.json":91600,"./resources/zh-cn/examples/IEnumerable/methods/asEnumerable.json":14429,"./resources/zh-cn/examples/IEnumerable/methods/average.json":14653,"./resources/zh-cn/examples/IEnumerable/methods/chunk.json":12202,"./resources/zh-cn/examples/IEnumerable/methods/combination.json":16447,"./resources/zh-cn/examples/IEnumerable/methods/combine.json":98224,"./resources/zh-cn/examples/IEnumerable/methods/concat.json":36128,"./resources/zh-cn/examples/IEnumerable/methods/contains.json":72641,"./resources/zh-cn/examples/IEnumerable/methods/copyWithin.json":37907,"./resources/zh-cn/examples/IEnumerable/methods/count.json":79826,"./resources/zh-cn/examples/IEnumerable/methods/defaultIfEmpty.json":76124,"./resources/zh-cn/examples/IEnumerable/methods/distinct.json":83423,"./resources/zh-cn/examples/IEnumerable/methods/elementAt.json":75468,"./resources/zh-cn/examples/IEnumerable/methods/elementAtOrDefault.json":73567,"./resources/zh-cn/examples/IEnumerable/methods/every.json":14436,"./resources/zh-cn/examples/IEnumerable/methods/except.json":83764,"./resources/zh-cn/examples/IEnumerable/methods/fill.json":92111,"./resources/zh-cn/examples/IEnumerable/methods/filter.json":501,"./resources/zh-cn/examples/IEnumerable/methods/find.json":6582,"./resources/zh-cn/examples/IEnumerable/methods/findIndex.json":7314,"./resources/zh-cn/examples/IEnumerable/methods/findLast.json":62238,"./resources/zh-cn/examples/IEnumerable/methods/findLastIndex.json":97738,"./resources/zh-cn/examples/IEnumerable/methods/first.json":66021,"./resources/zh-cn/examples/IEnumerable/methods/firstOrDefault.json":9519,"./resources/zh-cn/examples/IEnumerable/methods/forEach.json":64594,"./resources/zh-cn/examples/IEnumerable/methods/getEnumerator.json":85762,"./resources/zh-cn/examples/IEnumerable/methods/groupBy.json":86929,"./resources/zh-cn/examples/IEnumerable/methods/groupJoin.json":1460,"./resources/zh-cn/examples/IEnumerable/methods/includes.json":35503,"./resources/zh-cn/examples/IEnumerable/methods/indexOf.json":78936,"./resources/zh-cn/examples/IEnumerable/methods/intersect.json":51514,"./resources/zh-cn/examples/IEnumerable/methods/join.json":99811,"./resources/zh-cn/examples/IEnumerable/methods/last.json":15653,"./resources/zh-cn/examples/IEnumerable/methods/lastIndexOf.json":44635,"./resources/zh-cn/examples/IEnumerable/methods/lastOrDefault.json":21475,"./resources/zh-cn/examples/IEnumerable/methods/map.json":62736,"./resources/zh-cn/examples/IEnumerable/methods/max.json":6984,"./resources/zh-cn/examples/IEnumerable/methods/min.json":4487,"./resources/zh-cn/examples/IEnumerable/methods/ofType.json":60548,"./resources/zh-cn/examples/IEnumerable/methods/orderBy.json":81440,"./resources/zh-cn/examples/IEnumerable/methods/orderByDescending.json":10007,"./resources/zh-cn/examples/IEnumerable/methods/permutation.json":62754,"./resources/zh-cn/examples/IEnumerable/methods/pop.json":15590,"./resources/zh-cn/examples/IEnumerable/methods/product.json":20684,"./resources/zh-cn/examples/IEnumerable/methods/proportion.json":48631,"./resources/zh-cn/examples/IEnumerable/methods/push.json":10369,"./resources/zh-cn/examples/IEnumerable/methods/rand.json":15281,"./resources/zh-cn/examples/IEnumerable/methods/reduce.json":90697,"./resources/zh-cn/examples/IEnumerable/methods/reduceRight.json":67272,"./resources/zh-cn/examples/IEnumerable/methods/reserver.json":20591,"./resources/zh-cn/examples/IEnumerable/methods/reverse.json":272,"./resources/zh-cn/examples/IEnumerable/methods/rightJoin.json":3330,"./resources/zh-cn/examples/IEnumerable/methods/rightPad.json":29480,"./resources/zh-cn/examples/IEnumerable/methods/select.json":42642,"./resources/zh-cn/examples/IEnumerable/methods/selectMany.json":37606,"./resources/zh-cn/examples/IEnumerable/methods/separate.json":53069,"./resources/zh-cn/examples/IEnumerable/methods/sequenceEqual.json":49880,"./resources/zh-cn/examples/IEnumerable/methods/shift.json":71826,"./resources/zh-cn/examples/IEnumerable/methods/single.json":12712,"./resources/zh-cn/examples/IEnumerable/methods/singleOrDefault.json":46565,"./resources/zh-cn/examples/IEnumerable/methods/skip.json":26082,"./resources/zh-cn/examples/IEnumerable/methods/skipProportion.json":32476,"./resources/zh-cn/examples/IEnumerable/methods/skipWhile.json":33217,"./resources/zh-cn/examples/IEnumerable/methods/slice.json":44291,"./resources/zh-cn/examples/IEnumerable/methods/some.json":46491,"./resources/zh-cn/examples/IEnumerable/methods/sort.json":2542,"./resources/zh-cn/examples/IEnumerable/methods/splice.json":12213,"./resources/zh-cn/examples/IEnumerable/methods/sum.json":41997,"./resources/zh-cn/examples/IEnumerable/methods/take.json":28338,"./resources/zh-cn/examples/IEnumerable/methods/takeProportion.json":51575,"./resources/zh-cn/examples/IEnumerable/methods/takeWhile.json":9627,"./resources/zh-cn/examples/IEnumerable/methods/toArray.json":4424,"./resources/zh-cn/examples/IEnumerable/methods/toDirectory.json":6267,"./resources/zh-cn/examples/IEnumerable/methods/toLookup.json":94895,"./resources/zh-cn/examples/IEnumerable/methods/toObject.json":22803,"./resources/zh-cn/examples/IEnumerable/methods/union.json":14298,"./resources/zh-cn/examples/IEnumerable/methods/unshift.json":36117,"./resources/zh-cn/examples/IEnumerable/methods/where.json":41283,"./resources/zh-cn/examples/IEnumerable/methods/wipe.json":72311,"./resources/zh-cn/examples/IEnumerable/methods/zip.json":21354,"./resources/zh-cn/examples/ITree.json":21683,"./resources/zh-cn/examples/ITree/methods/asBinary.json":29234,"./resources/zh-cn/examples/ITree/methods/breadthSearch.json":41411,"./resources/zh-cn/examples/ITree/methods/breadthSubTree.json":89792,"./resources/zh-cn/examples/ITree/methods/breadthSubTrees.json":3837,"./resources/zh-cn/examples/ITree/methods/breadthTraverse.json":27958,"./resources/zh-cn/examples/ITree/methods/degree.json":35675,"./resources/zh-cn/examples/ITree/methods/depth.json":99065,"./resources/zh-cn/examples/ITree/methods/depthSearch.json":48344,"./resources/zh-cn/examples/ITree/methods/depthSubTree.json":92706,"./resources/zh-cn/examples/ITree/methods/depthTraverse.json":95946,"./resources/zh-cn/examples/ITree/methods/getChild.json":28312,"./resources/zh-cn/examples/ITree/methods/getParent.json":44409,"./resources/zh-cn/examples/ITree/methods/getValue.json":57112,"./resources/zh-cn/examples/ITree/methods/isAncestorOf.json":88191,"./resources/zh-cn/examples/ITree/methods/isBinary.json":59170,"./resources/zh-cn/examples/ITree/methods/isChildOf.json":10283,"./resources/zh-cn/examples/ITree/methods/isCompleteBinary.json":93029,"./resources/zh-cn/examples/ITree/methods/isDescendantOf.json":62423,"./resources/zh-cn/examples/ITree/methods/isFullBinary.json":46064,"./resources/zh-cn/examples/ITree/methods/isParentOf.json":15509,"./resources/zh-cn/examples/ITree/methods/isPerfectBinary.json":20357,"./resources/zh-cn/examples/ITree/methods/isPrefectBinary.json":14678,"./resources/zh-cn/examples/ITree/methods/lowestAncestor.json":55655,"./resources/zh-cn/examples/ITree/methods/next.json":30806,"./resources/zh-cn/examples/ITree/methods/nextAll.json":84851,"./resources/zh-cn/examples/ITree/methods/path.json":70156,"./resources/zh-cn/examples/ITree/methods/pathTo.json":30858,"./resources/zh-cn/examples/ITree/methods/permutation.json":64047,"./resources/zh-cn/examples/ITree/methods/prev.json":44430,"./resources/zh-cn/examples/ITree/methods/prevAll.json":20089,"./resources/zh-cn/examples/ITree/methods/siblings.json":26047,"./resources/zh-cn/examples/config.json":74893,"./resources/zh-cn/examples/instance.json":51789,"./resources/zh-cn/examples/selector.json":84290,"./resources/zh-cn/examples/setter.json":92203,"./resources/zh-cn/examples/use.json":1218,"./resources/zh-cn/guides/action.json":24467,"./resources/zh-cn/guides/comparer.json":68689,"./resources/zh-cn/guides/config.json":48973,"./resources/zh-cn/guides/enumerator.json":9608,"./resources/zh-cn/guides/extend.json":98262,"./resources/zh-cn/guides/instance.json":54865,"./resources/zh-cn/guides/iterator.json":19170,"./resources/zh-cn/guides/plugin.json":35687,"./resources/zh-cn/guides/predicate.json":10001,"./resources/zh-cn/guides/selector.json":13234,"./resources/zh-cn/guides/setter.json":37753,"./resources/zh-cn/guides/use.json":59301,"./resources/zh-cn/install.json":34738,"./resources/zh-cn/introduction.json":41426,"./resources/zh-cn/meta.json":73231};function t(e){var r=a(e);return n(r)}function a(e){if(!n.o(s,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return s[e]}t.keys=function(){return Object.keys(s)},t.resolve=a,e.exports=t,t.id=61018}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,